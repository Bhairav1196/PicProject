

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Apr 30 20:08:40 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1
    85                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    88                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    89                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    90                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    91   000000                     
    92                           ; Generated 06/04/2022 GMT
    93                           ; 
    94                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    95                           ; All rights reserved.
    96                           ; 
    97                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    98                           ; 
    99                           ; Redistribution and use in source and binary forms, with or without modification, are
   100                           ; permitted provided that the following conditions are met:
   101                           ; 
   102                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   103                           ;        conditions and the following disclaimer.
   104                           ; 
   105                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   106                           ;        of conditions and the following disclaimer in the documentation and/or other
   107                           ;        materials provided with the distribution. Publication is not required when
   108                           ;        this file is used in an embedded application.
   109                           ; 
   110                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   111                           ;        software without specific prior written permission.
   112                           ; 
   113                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   114                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   115                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   116                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   117                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   118                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   119                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   120                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   121                           ; 
   122                           ; 
   123                           ; Code-generator required, PIC18F45K50 Definitions
   124                           ; 
   125                           ; SFR Addresses
   126   000000                     _ADCON0	set	4034
   127   000000                     _ADRESL	set	4035
   128   000000                     _RCREG1	set	4014
   129   000000                     _TXREG1	set	4013
   130   000000                     _SPBRG1	set	4015
   131   000000                     _TXSTA1	set	4012
   132   000000                     _TRISD	set	3989
   133   000000                     _TRISC	set	3988
   134   000000                     _TRISB	set	3987
   135   000000                     _LATC	set	3979
   136   000000                     _LATB	set	3978
   137                           
   138                           	psect	nvCOMRAM
   139   000058                     __pnvCOMRAM:
   140                           	callstack 0
   141   000058                     _eusart1TxBufferRemaining:
   142                           	callstack 0
   143   000058                     	ds	1
   144                           
   145                           	psect	nvBANK0
   146   0000D4                     __pnvBANK0:
   147                           	callstack 0
   148   0000D4                     _INT2_InterruptHandler:
   149                           	callstack 0
   150   0000D4                     	ds	2
   151   0000D6                     _INT1_InterruptHandler:
   152                           	callstack 0
   153   0000D6                     	ds	2
   154   0000D8                     _INT0_InterruptHandler:
   155                           	callstack 0
   156   0000D8                     	ds	2
   157   0000DA                     _EUSART1_ErrorHandler:
   158                           	callstack 0
   159   0000DA                     	ds	2
   160   0000DC                     _EUSART1_OverrunErrorHandler:
   161                           	callstack 0
   162   0000DC                     	ds	2
   163   0000DE                     _EUSART1_FramingErrorHandler:
   164                           	callstack 0
   165   0000DE                     	ds	2
   166   0000E0                     _TMR0_InterruptHandler:
   167                           	callstack 0
   168   0000E0                     	ds	2
   169   0000E2                     _EUSART1_RxDefaultInterruptHandler:
   170                           	callstack 0
   171   0000E2                     	ds	2
   172   0000E4                     _EUSART1_TxDefaultInterruptHandler:
   173                           	callstack 0
   174   0000E4                     	ds	2
   175   000000                     _ADCON0bits	set	4034
   176   000000                     _RCSTA1bits	set	4011
   177   000000                     _TXSTA1bits	set	4012
   178   000000                     _T0CONbits	set	4053
   179   000000                     _ANSELA	set	3931
   180   000000                     _ANSELB	set	3932
   181   000000                     _ANSELC	set	3933
   182   000000                     _ANSELD	set	3934
   183   000000                     _LATA	set	3977
   184   000000                     _LATD	set	3980
   185   000000                     _LATE	set	3981
   186   000000                     _TRISA	set	3986
   187   000000                     _TRISE	set	3990
   188   000000                     _OSCTUNE	set	3995
   189   000000                     _OSCCON2	set	4050
   190   000000                     _OSCCON	set	4051
   191   000000                     _INTCON2bits	set	4081
   192   000000                     _PORTDbits	set	3971
   193   000000                     _WPUB	set	3973
   194   000000                     _ANSELE	set	3935
   195   000000                     _INTCONbits	set	4082
   196   000000                     _T0CON	set	4053
   197   000000                     _TMR0L	set	4054
   198   000000                     _TMR0H	set	4055
   199   000000                     _INTCON3bits	set	4080
   200   000000                     _PIE1bits	set	3997
   201   000000                     _ACTCON	set	4021
   202   000000                     _BAUDCON1	set	4024
   203   000000                     _RCONbits	set	4048
   204   000000                     _RCSTA1	set	4011
   205   000000                     _PIR1bits	set	3998
   206   000000                     _ADCON2	set	4032
   207   000000                     _ADCON1	set	4033
   208   000000                     _SPBRGH1	set	4016
   209   000000                     _ADRESH	set	4036
   210                           
   211                           	psect	smallconst
   212   000800                     __psmallconst:
   213                           	callstack 0
   214   000800  00                 	db	0
   215   000801                     STR_1:
   216   000801  4D                 	db	77	;'M'
   217   000802  61                 	db	97	;'a'
   218   000803  78                 	db	120	;'x'
   219   000804  69                 	db	105	;'i'
   220   000805  6D                 	db	109	;'m'
   221   000806  75                 	db	117	;'u'
   222   000807  6D                 	db	109	;'m'
   223   000808  20                 	db	32
   224   000809  76                 	db	118	;'v'
   225   00080A  61                 	db	97	;'a'
   226   00080B  6C                 	db	108	;'l'
   227   00080C  75                 	db	117	;'u'
   228   00080D  65                 	db	101	;'e'
   229   00080E  3A                 	db	58	;':'
   230   00080F  20                 	db	32
   231   000810  25                 	db	37
   232   000811  2E                 	db	46
   233   000812  33                 	db	51	;'3'
   234   000813  66                 	db	102	;'f'
   235   000814  20                 	db	32
   236   000815  0D                 	db	13
   237   000816  0A                 	db	10
   238   000817  00                 	db	0
   239   000818                     STR_2:
   240   000818  69                 	db	105	;'i'
   241   000819  6E                 	db	110	;'n'
   242   00081A  66                 	db	102	;'f'
   243   00081B  00                 	db	0
   244   00081C                     STR_5:
   245   00081C  6E                 	db	110	;'n'
   246   00081D  61                 	db	97	;'a'
   247   00081E  6E                 	db	110	;'n'
   248   00081F  00                 	db	0
   249   000820  00                 	db	0	; dummy byte at the end
   250   000000                     
   251                           ; #config settings
   252                           
   253                           	psect	cinit
   254   00329A                     __pcinit:
   255                           	callstack 0
   256   00329A                     start_initialization:
   257                           	callstack 0
   258   00329A                     __initialization:
   259                           	callstack 0
   260                           
   261                           ; Clear objects allocated to BANK1 (128 bytes)
   262   00329A  EE01  F000         	lfsr	0,__pbssBANK1
   263   00329E  0E80               	movlw	128
   264   0032A0                     clear_0:
   265   0032A0  6AEE               	clrf	postinc0,c
   266   0032A2  06E8               	decf	wreg,f,c
   267   0032A4  E1FD               	bnz	clear_0
   268                           
   269                           ; Clear objects allocated to BANK0 (17 bytes)
   270   0032A6  EE00  F0E6         	lfsr	0,__pbssBANK0
   271   0032AA  0E11               	movlw	17
   272   0032AC                     clear_1:
   273   0032AC  6AEE               	clrf	postinc0,c
   274   0032AE  06E8               	decf	wreg,f,c
   275   0032B0  E1FD               	bnz	clear_1
   276                           
   277                           ; Clear objects allocated to COMRAM (8 bytes)
   278   0032B2  EE00  F050         	lfsr	0,__pbssCOMRAM
   279   0032B6  0E08               	movlw	8
   280   0032B8                     clear_2:
   281   0032B8  6AEE               	clrf	postinc0,c
   282   0032BA  06E8               	decf	wreg,f,c
   283   0032BC  E1FD               	bnz	clear_2
   284   0032BE                     end_of_initialization:
   285                           	callstack 0
   286   0032BE                     __end_of__initialization:
   287                           	callstack 0
   288   0032BE  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   289   0032C0  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   290   0032C2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   291   0032C4  6EF8               	movwf	tblptru,c
   292   0032C6  0100               	movlb	0
   293   0032C8  EFFA  F014         	goto	_main	;jump to C main() function
   294                           
   295                           	psect	bssCOMRAM
   296   000050                     __pbssCOMRAM:
   297                           	callstack 0
   298   000050                     _eusart1RxLastError:
   299                           	callstack 0
   300   000050                     	ds	1
   301   000051                     _eusart1RxCount:
   302                           	callstack 0
   303   000051                     	ds	1
   304   000052                     _eusart1RxTail:
   305                           	callstack 0
   306   000052                     	ds	1
   307   000053                     _eusart1RxHead:
   308                           	callstack 0
   309   000053                     	ds	1
   310   000054                     _eusart1TxTail:
   311                           	callstack 0
   312   000054                     	ds	1
   313   000055                     _eusart1TxHead:
   314                           	callstack 0
   315   000055                     	ds	1
   316   000056                     _timer0ReloadVal:
   317                           	callstack 0
   318   000056                     	ds	1
   319   000057                     _cnt:
   320                           	callstack 0
   321   000057                     	ds	1
   322                           
   323                           	psect	bssBANK0
   324   0000E6                     __pbssBANK0:
   325                           	callstack 0
   326   0000E6                     floorf@F526:
   327                           	callstack 0
   328   0000E6                     	ds	4
   329   0000EA                     ___fpclassifyf@F465:
   330                           	callstack 0
   331   0000EA                     	ds	4
   332   0000EE                     _width:
   333                           	callstack 0
   334   0000EE                     	ds	2
   335   0000F0                     _prec:
   336                           	callstack 0
   337   0000F0                     	ds	2
   338   0000F2                     _ADC_InterruptHandler:
   339                           	callstack 0
   340   0000F2                     	ds	2
   341   0000F4                     _count:
   342                           	callstack 0
   343   0000F4                     	ds	2
   344   0000F6                     _flags:
   345                           	callstack 0
   346   0000F6                     	ds	1
   347                           
   348                           	psect	bssBANK1
   349   000100                     __pbssBANK1:
   350                           	callstack 0
   351   000100                     _eusart1RxStatusBuffer:
   352                           	callstack 0
   353   000100                     	ds	16
   354   000110                     _eusart1RxBuffer:
   355                           	callstack 0
   356   000110                     	ds	16
   357   000120                     _eusart1TxBuffer:
   358                           	callstack 0
   359   000120                     	ds	16
   360   000130                     _dbuf:
   361                           	callstack 0
   362   000130                     	ds	80
   363                           
   364                           	psect	cstackBANK0
   365   000060                     __pcstackBANK0:
   366                           	callstack 0
   367   000060                     efgtoa@ne:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0x0
   371   000060                     	ds	2
   372   000062                     efgtoa@p:
   373                           	callstack 0
   374                           
   375                           ; 2 bytes @ 0x2
   376   000062                     	ds	2
   377   000064                     efgtoa@t:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0x4
   381   000064                     	ds	2
   382   000066                     _efgtoa$1822:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0x6
   386   000066                     	ds	2
   387   000068                     efgtoa@pp:
   388                           	callstack 0
   389                           
   390                           ; 1 bytes @ 0x8
   391   000068                     	ds	1
   392   000069                     efgtoa@mode:
   393                           	callstack 0
   394                           
   395                           ; 1 bytes @ 0x9
   396   000069                     	ds	1
   397   00006A                     efgtoa@nmode:
   398                           	callstack 0
   399                           
   400                           ; 1 bytes @ 0xA
   401   00006A                     	ds	1
   402   00006B                     efgtoa@d:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0xB
   406   00006B                     	ds	2
   407   00006D                     efgtoa@m:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0xD
   411   00006D                     	ds	2
   412   00006F                     efgtoa@e:
   413                           	callstack 0
   414                           
   415                           ; 2 bytes @ 0xF
   416   00006F                     	ds	2
   417   000071                     efgtoa@w:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x11
   421   000071                     	ds	2
   422   000073                     efgtoa@ou:
   423                           	callstack 0
   424                           
   425                           ; 4 bytes @ 0x13
   426   000073                     	ds	4
   427   000077                     efgtoa@i:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0x17
   431   000077                     	ds	2
   432   000079                     efgtoa@h:
   433                           	callstack 0
   434                           
   435                           ; 4 bytes @ 0x19
   436   000079                     	ds	4
   437   00007D                     efgtoa@l:
   438                           	callstack 0
   439                           
   440                           ; 4 bytes @ 0x1D
   441   00007D                     	ds	4
   442   000081                     efgtoa@sign:
   443                           	callstack 0
   444                           
   445                           ; 1 bytes @ 0x21
   446   000081                     	ds	1
   447   000082                     efgtoa@g:
   448                           	callstack 0
   449                           
   450                           ; 4 bytes @ 0x22
   451   000082                     	ds	4
   452   000086                     efgtoa@n:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0x26
   456   000086                     	ds	2
   457   000088                     efgtoa@u:
   458                           	callstack 0
   459                           
   460                           ; 4 bytes @ 0x28
   461   000088                     	ds	4
   462   00008C                     vfpfcnvrt@fp:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x2C
   466   00008C                     	ds	2
   467   00008E                     vfpfcnvrt@fmt:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x2E
   471   00008E                     	ds	2
   472   000090                     vfpfcnvrt@ap:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0x30
   476   000090                     	ds	2
   477   000092                     ?_vfprintf:
   478                           	callstack 0
   479   000092                     vfprintf@fp:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x32
   483   000092                     	ds	2
   484   000094                     vfprintf@fmt:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x34
   488   000094                     	ds	2
   489   000096                     vfprintf@ap:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x36
   493   000096                     	ds	2
   494   000098                     vfprintf@cfmt:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x38
   498   000098                     	ds	2
   499   00009A                     ?_printf:
   500                           	callstack 0
   501   00009A                     printf@fmt:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0x3A
   505   00009A                     	ds	6
   506   0000A0                     printf@ap:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x40
   510   0000A0                     	ds	2
   511   0000A2                     ??_main:
   512                           
   513                           ; 1 bytes @ 0x42
   514   0000A2                     	ds	2
   515   0000A4                     main@adcArray:
   516                           	callstack 0
   517                           
   518                           ; 40 bytes @ 0x44
   519   0000A4                     	ds	40
   520   0000CC                     main@max_1105:
   521                           	callstack 0
   522                           
   523                           ; 4 bytes @ 0x6C
   524   0000CC                     	ds	4
   525   0000D0                     main@adcVal:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0x70
   529   0000D0                     	ds	2
   530   0000D2                     main@i:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x72
   534   0000D2                     	ds	2
   535                           
   536                           	psect	cstackCOMRAM
   537   000001                     __pcstackCOMRAM:
   538                           	callstack 0
   539   000001                     ??_INT0_ISR:
   540   000001                     
   541                           ; 1 bytes @ 0x0
   542   000001                     	ds	1
   543   000002                     ??_INTERRUPT_InterruptManager:
   544                           
   545                           ; 1 bytes @ 0x1
   546   000002                     	ds	4
   547   000006                     ??_ADC_SelectChannel:
   548   000006                     ?___fpclassifyf:
   549                           	callstack 0
   550   000006                     ?_isdigit:
   551                           	callstack 0
   552   000006                     ?_isspace:
   553                           	callstack 0
   554   000006                     ?_ADC_GetConversionResult:
   555                           	callstack 0
   556   000006                     ?___wmul:
   557                           	callstack 0
   558   000006                     ?___fladd:
   559                           	callstack 0
   560   000006                     ?___fldiv:
   561                           	callstack 0
   562   000006                     ?_labs:
   563                           	callstack 0
   564   000006                     ?___flneg:
   565                           	callstack 0
   566   000006                     ?___fltol:
   567                           	callstack 0
   568   000006                     ?___xxtofl:
   569                           	callstack 0
   570   000006                     EUSART1_Write@txData:
   571                           	callstack 0
   572   000006                     TMR0_SetInterruptHandler@InterruptHandler:
   573                           	callstack 0
   574   000006                     EUSART1_SetFramingErrorHandler@interruptHandler:
   575                           	callstack 0
   576   000006                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   577                           	callstack 0
   578   000006                     EUSART1_SetErrorHandler@interruptHandler:
   579                           	callstack 0
   580   000006                     EUSART1_SetTxInterruptHandler@interruptHandler:
   581                           	callstack 0
   582   000006                     EUSART1_SetRxInterruptHandler@interruptHandler:
   583                           	callstack 0
   584   000006                     INT0_SetInterruptHandler@InterruptHandler:
   585                           	callstack 0
   586   000006                     INT1_SetInterruptHandler@InterruptHandler:
   587                           	callstack 0
   588   000006                     INT2_SetInterruptHandler@InterruptHandler:
   589                           	callstack 0
   590   000006                     ___wmul@multiplier:
   591                           	callstack 0
   592   000006                     isdigit@c:
   593                           	callstack 0
   594   000006                     isspace@c:
   595                           	callstack 0
   596   000006                     memcpy@d1:
   597                           	callstack 0
   598   000006                     strcpy@dest:
   599                           	callstack 0
   600   000006                     ___fleq@ff1:
   601                           	callstack 0
   602   000006                     ___flneg@f1:
   603                           	callstack 0
   604   000006                     ___fltol@f1:
   605                           	callstack 0
   606   000006                     ___fladd@b:
   607                           	callstack 0
   608   000006                     ___fldiv@b:
   609                           	callstack 0
   610   000006                     ___xxtofl@val:
   611                           	callstack 0
   612   000006                     ___fpclassifyf@x:
   613                           	callstack 0
   614   000006                     labs@a:
   615                           	callstack 0
   616                           
   617                           ; 4 bytes @ 0x5
   618   000006                     	ds	1
   619   000007                     putch@txData:
   620                           	callstack 0
   621   000007                     ADC_SelectChannel@channel:
   622                           	callstack 0
   623                           
   624                           ; 1 bytes @ 0x6
   625   000007                     	ds	1
   626   000008                     ??_isdigit:
   627   000008                     ??_isspace:
   628   000008                     ??_ADC_GetConversionResult:
   629   000008                     ___wmul@multiplicand:
   630                           	callstack 0
   631   000008                     memcpy@s1:
   632                           	callstack 0
   633   000008                     fputc@c:
   634                           	callstack 0
   635   000008                     strcpy@src:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x7
   639   000008                     	ds	2
   640   00000A                     ??___fpclassifyf:
   641   00000A                     ??_labs:
   642   00000A                     ??___fltol:
   643   00000A                     ??___xxtofl:
   644   00000A                     ?_adcCal:
   645                           	callstack 0
   646   00000A                     _isspace$1900:
   647                           	callstack 0
   648   00000A                     ___wmul@product:
   649                           	callstack 0
   650   00000A                     memcpy@n:
   651                           	callstack 0
   652   00000A                     fputc@fp:
   653                           	callstack 0
   654   00000A                     strcpy@s:
   655                           	callstack 0
   656   00000A                     ___fleq@ff2:
   657                           	callstack 0
   658   00000A                     ___fladd@a:
   659                           	callstack 0
   660   00000A                     ___fldiv@a:
   661                           	callstack 0
   662                           
   663                           ; 4 bytes @ 0x9
   664   00000A                     	ds	2
   665   00000C                     ??_fputc:
   666   00000C                     ?_atoi:
   667                           	callstack 0
   668   00000C                     memcpy@tmp:
   669                           	callstack 0
   670   00000C                     atoi@s:
   671                           	callstack 0
   672   00000C                     strcpy@d:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0xB
   676   00000C                     	ds	1
   677   00000D                     memcpy@d:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0xC
   681   00000D                     	ds	1
   682   00000E                     ??___fladd:
   683   00000E                     ??___fldiv:
   684   00000E                     ??_atoi:
   685   00000E                     ??___fleq:
   686   00000E                     ___fltol@sign1:
   687                           	callstack 0
   688   00000E                     ___xxtofl@sign:
   689                           	callstack 0
   690   00000E                     ___fpclassifyf@e:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0xD
   694   00000E                     	ds	1
   695   00000F                     ___fltol@exp1:
   696                           	callstack 0
   697   00000F                     ___xxtofl@exp:
   698                           	callstack 0
   699   00000F                     memcpy@s:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0xE
   703   00000F                     	ds	1
   704   000010                     ___xxtofl@arg:
   705                           	callstack 0
   706   000010                     ___fpclassifyf@u:
   707                           	callstack 0
   708                           
   709                           ; 4 bytes @ 0xF
   710   000010                     	ds	1
   711   000011                     atoi@neg:
   712                           	callstack 0
   713   000011                     fputs@s:
   714                           	callstack 0
   715                           
   716                           ; 2 bytes @ 0x10
   717   000011                     	ds	1
   718   000012                     ___fladd@signs:
   719                           	callstack 0
   720   000012                     ___fldiv@rem:
   721                           	callstack 0
   722                           
   723                           ; 4 bytes @ 0x11
   724   000012                     	ds	1
   725   000013                     ___fladd@aexp:
   726                           	callstack 0
   727   000013                     atoi@n:
   728                           	callstack 0
   729   000013                     fputs@fp:
   730                           	callstack 0
   731                           
   732                           ; 2 bytes @ 0x12
   733   000013                     	ds	1
   734   000014                     ?___flmul:
   735                           	callstack 0
   736   000014                     ___fladd@bexp:
   737                           	callstack 0
   738   000014                     ___flmul@b:
   739                           	callstack 0
   740                           
   741                           ; 4 bytes @ 0x13
   742   000014                     	ds	1
   743   000015                     ___fladd@grs:
   744                           	callstack 0
   745   000015                     fputs@c:
   746                           	callstack 0
   747                           
   748                           ; 1 bytes @ 0x14
   749   000015                     	ds	1
   750   000016                     ___fldiv@sign:
   751                           	callstack 0
   752   000016                     fputs@i:
   753                           	callstack 0
   754                           
   755                           ; 2 bytes @ 0x15
   756   000016                     	ds	1
   757   000017                     ___fldiv@new_exp:
   758                           	callstack 0
   759                           
   760                           ; 2 bytes @ 0x16
   761   000017                     	ds	1
   762   000018                     pad@fp:
   763                           	callstack 0
   764   000018                     ___flmul@a:
   765                           	callstack 0
   766                           
   767                           ; 4 bytes @ 0x17
   768   000018                     	ds	1
   769   000019                     ___fldiv@grs:
   770                           	callstack 0
   771                           
   772                           ; 4 bytes @ 0x18
   773   000019                     	ds	1
   774   00001A                     pad@buf:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x19
   778   00001A                     	ds	2
   779   00001C                     ??___flmul:
   780   00001C                     pad@p:
   781                           	callstack 0
   782                           
   783                           ; 2 bytes @ 0x1B
   784   00001C                     	ds	1
   785   00001D                     ___fldiv@bexp:
   786                           	callstack 0
   787                           
   788                           ; 1 bytes @ 0x1C
   789   00001D                     	ds	1
   790   00001E                     ??_pad:
   791   00001E                     ___fldiv@aexp:
   792                           	callstack 0
   793                           
   794                           ; 1 bytes @ 0x1D
   795   00001E                     	ds	1
   796   00001F                     ?_floorf:
   797                           	callstack 0
   798   00001F                     pad@i:
   799                           	callstack 0
   800   00001F                     floorf@x:
   801                           	callstack 0
   802                           
   803                           ; 4 bytes @ 0x1E
   804   00001F                     	ds	1
   805   000020                     ___flmul@sign:
   806                           	callstack 0
   807                           
   808                           ; 1 bytes @ 0x1F
   809   000020                     	ds	1
   810   000021                     ___flmul@aexp:
   811                           	callstack 0
   812   000021                     pad@w:
   813                           	callstack 0
   814                           
   815                           ; 2 bytes @ 0x20
   816   000021                     	ds	1
   817   000022                     ___flmul@grs:
   818                           	callstack 0
   819                           
   820                           ; 4 bytes @ 0x21
   821   000022                     	ds	1
   822   000023                     ??_floorf:
   823                           
   824                           ; 1 bytes @ 0x22
   825   000023                     	ds	3
   826   000026                     ___flmul@bexp:
   827                           	callstack 0
   828                           
   829                           ; 1 bytes @ 0x25
   830   000026                     	ds	1
   831   000027                     ___flmul@prod:
   832                           	callstack 0
   833                           
   834                           ; 4 bytes @ 0x26
   835   000027                     	ds	2
   836   000029                     floorf@m:
   837                           	callstack 0
   838                           
   839                           ; 4 bytes @ 0x28
   840   000029                     	ds	2
   841   00002B                     ___flmul@temp:
   842                           	callstack 0
   843                           
   844                           ; 2 bytes @ 0x2A
   845   00002B                     	ds	2
   846   00002D                     ?___flsub:
   847                           	callstack 0
   848   00002D                     ?_convertValue:
   849                           	callstack 0
   850   00002D                     convertValue@val:
   851                           	callstack 0
   852   00002D                     floorf@e:
   853                           	callstack 0
   854   00002D                     ___flge@ff1:
   855                           	callstack 0
   856   00002D                     ___flsub@b:
   857                           	callstack 0
   858                           
   859                           ; 4 bytes @ 0x2C
   860   00002D                     	ds	2
   861   00002F                     floorf@u:
   862                           	callstack 0
   863                           
   864                           ; 4 bytes @ 0x2E
   865   00002F                     	ds	2
   866   000031                     ??_convertValue:
   867   000031                     ___flge@ff2:
   868                           	callstack 0
   869   000031                     ___flsub@a:
   870                           	callstack 0
   871                           
   872                           ; 4 bytes @ 0x30
   873   000031                     	ds	4
   874   000035                     ??___flge:
   875                           
   876                           ; 1 bytes @ 0x34
   877   000035                     	ds	4
   878   000039                     ?_adcMax:
   879                           	callstack 0
   880   000039                     adcMax@maxNo:
   881                           	callstack 0
   882   000039                     efgtoa@fp:
   883                           	callstack 0
   884                           
   885                           ; 2 bytes @ 0x38
   886   000039                     	ds	2
   887   00003B                     efgtoa@f:
   888                           	callstack 0
   889                           
   890                           ; 4 bytes @ 0x3A
   891   00003B                     	ds	2
   892   00003D                     adcMax@i:
   893                           	callstack 0
   894                           
   895                           ; 2 bytes @ 0x3C
   896   00003D                     	ds	2
   897   00003F                     efgtoa@c:
   898                           	callstack 0
   899                           
   900                           ; 1 bytes @ 0x3E
   901   00003F                     	ds	1
   902   000040                     ??_efgtoa:
   903                           
   904                           ; 1 bytes @ 0x3F
   905   000040                     	ds	2
   906   000042                     ??_vfpfcnvrt:
   907                           
   908                           ; 1 bytes @ 0x41
   909   000042                     	ds	3
   910   000045                     vfpfcnvrt@convarg:
   911                           	callstack 0
   912                           
   913                           ; 8 bytes @ 0x44
   914   000045                     	ds	8
   915   00004D                     vfpfcnvrt@c:
   916                           	callstack 0
   917                           
   918                           ; 1 bytes @ 0x4C
   919   00004D                     	ds	1
   920   00004E                     vfpfcnvrt@cp:
   921                           	callstack 0
   922                           
   923                           ; 2 bytes @ 0x4D
   924   00004E                     	ds	2
   925   000050                     
   926                           ; 1 bytes @ 0x4F
   927 ;;
   928 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   929 ;;
   930 ;; *************** function _main *****************
   931 ;; Defined at:
   932 ;;		line 79 in file "main.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;		None
   935 ;; Auto vars:     Size  Location     Type
   936 ;;  i               2  114[BANK0 ] int 
   937 ;;  max             4  108[BANK0 ] int 
   938 ;;  adcArray       40   68[BANK0 ] [10]
   939 ;;  max             4    0        [10]
   940 ;;  convertedVal    4    0        [10]
   941 ;;  adcVal          2  112[BANK0 ] unsigned short 
   942 ;;  arrayPtr        2    0        PTR 
   943 ;;		 -> main@adcArray(40), 
   944 ;;  adcPtr          2    0        PTR unsigned short 
   945 ;;		 -> main@adcVal(2), 
   946 ;; Return value:  Size  Location     Type
   947 ;;                  1    wreg      void 
   948 ;; Registers used:
   949 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   950 ;; Tracked objects:
   951 ;;		On entry : 0/0
   952 ;;		On exit  : 0/0
   953 ;;		Unchanged: 0/0
   954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   955 ;;      Params:         0       0       0       0       0       0       0       0       0
   956 ;;      Locals:         0      48       0       0       0       0       0       0       0
   957 ;;      Temps:          0       2       0       0       0       0       0       0       0
   958 ;;      Totals:         0      50       0       0       0       0       0       0       0
   959 ;;Total ram usage:       50 bytes
   960 ;; Hardware stack levels required when called: 13
   961 ;; This function calls:
   962 ;;		_ADC_Initialize
   963 ;;		_EUSART1_Initialize
   964 ;;		_SYSTEM_Initialize
   965 ;;		_adcCal
   966 ;;		_adcMax
   967 ;;		_convertValue
   968 ;;		_printf
   969 ;; This function is called by:
   970 ;;		Startup code after reset
   971 ;; This function uses a non-reentrant model
   972 ;;
   973                           
   974                           	psect	text0
   975   0029F4                     __ptext0:
   976                           	callstack 0
   977   0029F4                     _main:
   978                           	callstack 18
   979   0029F4                     
   980                           ;main.c: 82:     SYSTEM_Initialize();
   981   0029F4  EC56  F01A         	call	_SYSTEM_Initialize	;wreg free
   982   0029F8                     
   983                           ;main.c: 83:     ADC_Initialize();
   984   0029F8  EC71  F01A         	call	_ADC_Initialize	;wreg free
   985   0029FC                     
   986                           ;main.c: 84:     EUSART1_Initialize();
   987   0029FC  EC17  F017         	call	_EUSART1_Initialize	;wreg free
   988   002A00                     
   989                           ;main.c: 87:     PORTDbits.RD0 = 0;
   990   002A00  9083               	bcf	131,0,c	;volatile
   991   002A02                     
   992                           ;main.c: 92:     double convertedVal;;main.c: 93:     double max;;main.c: 101:     (INTC
      +                          ONbits.GIE = 1);
   993   002A02  8EF2               	bsf	242,7,c	;volatile
   994   002A04                     
   995                           ;main.c: 107:     (INTCONbits.PEIE = 1);
   996   002A04  8CF2               	bsf	242,6,c	;volatile
   997   002A06                     l5613:
   998                           
   999                           ;main.c: 114:     {;main.c: 116:         for(int i=0;i<10;i++){
  1000   002A06  0E00               	movlw	0
  1001   002A08  0100               	movlb	0	; () banked
  1002   002A0A  6FD3               	movwf	(main@i+1)& (0+255),b
  1003   002A0C  0E00               	movlw	0
  1004   002A0E  6FD2               	movwf	main@i& (0+255),b
  1005   002A10                     l5619:
  1006                           
  1007                           ; BSR set to: 0
  1008                           ;main.c: 117:             adcVal = adcCal();
  1009   002A10  ECD5  F018         	call	_adcCal	;wreg free
  1010   002A14  C00A  F0D0         	movff	?_adcCal,main@adcVal
  1011   002A18  C00B  F0D1         	movff	?_adcCal+1,main@adcVal+1
  1012   002A1C                     
  1013                           ;main.c: 118:             adcArray[i] = convertValue(&adcVal);
  1014   002A1C  0ED0               	movlw	low main@adcVal
  1015   002A1E  6E2D               	movwf	convertValue@val^0,c
  1016   002A20  0E00               	movlw	high main@adcVal
  1017   002A22  6E2E               	movwf	(convertValue@val+1)^0,c
  1018   002A24  EC84  F017         	call	_convertValue	;wreg free
  1019   002A28  0EA4               	movlw	low main@adcArray
  1020   002A2A  0100               	movlb	0	; () banked
  1021   002A2C  6FA2               	movwf	??_main& (0+255),b
  1022   002A2E  0E00               	movlw	high main@adcArray
  1023   002A30  6FA3               	movwf	(??_main+1)& (0+255),b
  1024   002A32  90D8               	bcf	status,0,c
  1025   002A34  35D2               	rlcf	main@i& (0+255),w,b
  1026   002A36  6ED9               	movwf	fsr2l,c
  1027   002A38  35D3               	rlcf	(main@i+1)& (0+255),w,b
  1028   002A3A  6EDA               	movwf	fsr2h,c
  1029   002A3C  90D8               	bcf	status,0,c
  1030   002A3E  36D9               	rlcf	fsr2l,f,c
  1031   002A40  36DA               	rlcf	fsr2h,f,c
  1032   002A42  51A2               	movf	??_main& (0+255),w,b
  1033   002A44  26D9               	addwf	fsr2l,f,c
  1034   002A46  51A3               	movf	(??_main+1)& (0+255),w,b
  1035   002A48  22DA               	addwfc	fsr2h,f,c
  1036   002A4A  C02D  FFDE         	movff	?_convertValue,postinc2
  1037   002A4E  C02E  FFDE         	movff	?_convertValue+1,postinc2
  1038   002A52  C02F  FFDE         	movff	?_convertValue+2,postinc2
  1039   002A56  C030  FFDE         	movff	?_convertValue+3,postinc2
  1040   002A5A                     
  1041                           ; BSR set to: 0
  1042                           ;main.c: 119:             _delay((unsigned long)((10)*(4000000/4000.0)));
  1043   002A5A  0E0D               	movlw	13
  1044   002A5C  0100               	movlb	0	; () banked
  1045   002A5E  6FA2               	movwf	??_main& (0+255),b
  1046   002A60  0EFB               	movlw	251
  1047   002A62                     u6287:
  1048   002A62  2EE8               	decfsz	wreg,f,c
  1049   002A64  D7FE               	bra	u6287
  1050   002A66  2FA2               	decfsz	??_main& (0+255),f,b
  1051   002A68  D7FC               	bra	u6287
  1052   002A6A  D000               	nop2	
  1053   002A6C                     
  1054                           ;main.c: 120:         }
  1055   002A6C  0100               	movlb	0	; () banked
  1056   002A6E  4BD2               	infsnz	main@i& (0+255),f,b
  1057   002A70  2BD3               	incf	(main@i+1)& (0+255),f,b
  1058   002A72                     
  1059                           ; BSR set to: 0
  1060   002A72  BFD3               	btfsc	(main@i+1)& (0+255),7,b
  1061   002A74  EF45  F015         	goto	u6271
  1062   002A78  51D3               	movf	(main@i+1)& (0+255),w,b
  1063   002A7A  E109               	bnz	u6270
  1064   002A7C  0E0A               	movlw	10
  1065   002A7E  5DD2               	subwf	main@i& (0+255),w,b
  1066   002A80  A0D8               	btfss	status,0,c
  1067   002A82  EF45  F015         	goto	u6271
  1068   002A86  EF47  F015         	goto	u6270
  1069   002A8A                     u6271:
  1070   002A8A  EF08  F015         	goto	l5619
  1071   002A8E                     u6270:
  1072   002A8E                     
  1073                           ; BSR set to: 0
  1074                           ;main.c: 127:         double max = adcMax(&adcArray);
  1075   002A8E  0EA4               	movlw	low main@adcArray
  1076   002A90  6E39               	movwf	adcMax@maxNo^0,c
  1077   002A92  0E00               	movlw	high main@adcArray
  1078   002A94  6E3A               	movwf	(adcMax@maxNo+1)^0,c
  1079   002A96  ECD8  F015         	call	_adcMax	;wreg free
  1080   002A9A  C039  F0CC         	movff	?_adcMax,main@max_1105
  1081   002A9E  C03A  F0CD         	movff	?_adcMax+1,main@max_1105+1
  1082   002AA2  C03B  F0CE         	movff	?_adcMax+2,main@max_1105+2
  1083   002AA6  C03C  F0CF         	movff	?_adcMax+3,main@max_1105+3
  1084   002AAA                     
  1085                           ;main.c: 128:         printf("Maximum value: %.3f \r\n", max);
  1086   002AAA  0E01               	movlw	low STR_1
  1087   002AAC  0100               	movlb	0	; () banked
  1088   002AAE  6F9A               	movwf	printf@fmt& (0+255),b
  1089   002AB0  0E08               	movlw	high STR_1
  1090   002AB2  6F9B               	movwf	(printf@fmt+1)& (0+255),b
  1091   002AB4  C0CC  F09C         	movff	main@max_1105,?_printf+2
  1092   002AB8  C0CD  F09D         	movff	main@max_1105+1,?_printf+3
  1093   002ABC  C0CE  F09E         	movff	main@max_1105+2,?_printf+4
  1094   002AC0  C0CF  F09F         	movff	main@max_1105+3,?_printf+5
  1095   002AC4  EC0A  F01A         	call	_printf	;wreg free
  1096   002AC8                     
  1097                           ;main.c: 129:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  1098   002AC8  0E06               	movlw	6
  1099   002ACA  0100               	movlb	0	; () banked
  1100   002ACC  6FA3               	movwf	(??_main+1)& (0+255),b
  1101   002ACE  0E13               	movlw	19
  1102   002AD0  6FA2               	movwf	??_main& (0+255),b
  1103   002AD2  0EAD               	movlw	173
  1104   002AD4                     u6297:
  1105   002AD4  2EE8               	decfsz	wreg,f,c
  1106   002AD6  D7FE               	bra	u6297
  1107   002AD8  2FA2               	decfsz	??_main& (0+255),f,b
  1108   002ADA  D7FC               	bra	u6297
  1109   002ADC  2FA3               	decfsz	(??_main+1)& (0+255),f,b
  1110   002ADE  D7FA               	bra	u6297
  1111   002AE0  D000               	nop2	
  1112   002AE2  EF03  F015         	goto	l5613
  1113   002AE6  EFA2  F000         	goto	start
  1114   002AEA                     __end_of_main:
  1115                           	callstack 0
  1116                           
  1117 ;; *************** function _printf *****************
  1118 ;; Defined at:
  1119 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\printf.c"
  1120 ;; Parameters:    Size  Location     Type
  1121 ;;  fmt             2   58[BANK0 ] PTR const unsigned char 
  1122 ;;		 -> STR_1(23), 
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;  ap              2   64[BANK0 ] PTR void [1]
  1125 ;;		 -> ?_printf(2), 
  1126 ;;  ret             2    0        int 
  1127 ;; Return value:  Size  Location     Type
  1128 ;;                  2   58[BANK0 ] int 
  1129 ;; Registers used:
  1130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1136 ;;      Params:         0       6       0       0       0       0       0       0       0
  1137 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1138 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1139 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1140 ;;Total ram usage:        8 bytes
  1141 ;; Hardware stack levels used: 1
  1142 ;; Hardware stack levels required when called: 12
  1143 ;; This function calls:
  1144 ;;		_vfprintf
  1145 ;; This function is called by:
  1146 ;;		_main
  1147 ;; This function uses a non-reentrant model
  1148 ;;
  1149                           
  1150                           	psect	text1
  1151   003414                     __ptext1:
  1152                           	callstack 0
  1153   003414                     _printf:
  1154                           	callstack 18
  1155   003414  0E9C               	movlw	low (?_printf+2)
  1156   003416  0100               	movlb	0	; () banked
  1157   003418  6FA0               	movwf	printf@ap& (0+255),b
  1158   00341A  0E00               	movlw	high (?_printf+2)
  1159   00341C  6FA1               	movwf	(printf@ap+1)& (0+255),b
  1160   00341E                     
  1161                           ; BSR set to: 0
  1162   00341E  0E00               	movlw	0
  1163   003420  6F92               	movwf	vfprintf@fp& (0+255),b
  1164   003422  0E00               	movlw	0
  1165   003424  6F93               	movwf	(vfprintf@fp+1)& (0+255),b
  1166   003426  C09A  F094         	movff	printf@fmt,vfprintf@fmt
  1167   00342A  C09B  F095         	movff	printf@fmt+1,vfprintf@fmt+1
  1168   00342E  0EA0               	movlw	low printf@ap
  1169   003430  6F96               	movwf	vfprintf@ap& (0+255),b
  1170   003432  0E00               	movlw	high printf@ap
  1171   003434  6F97               	movwf	(vfprintf@ap+1)& (0+255),b
  1172   003436  ECDB  F017         	call	_vfprintf	;wreg free
  1173   00343A  0012               	return		;funcret
  1174   00343C                     __end_of_printf:
  1175                           	callstack 0
  1176                           
  1177 ;; *************** function _vfprintf *****************
  1178 ;; Defined at:
  1179 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;  fp              2   50[BANK0 ] PTR struct _IO_FILE
  1182 ;;		 -> NULL(0), 
  1183 ;;  fmt             2   52[BANK0 ] PTR const unsigned char 
  1184 ;;		 -> STR_1(23), 
  1185 ;;  ap              2   54[BANK0 ] PTR PTR void 
  1186 ;;		 -> printf@ap(2), 
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;  cfmt            2   56[BANK0 ] PTR unsigned char 
  1189 ;;		 -> STR_1(23), 
  1190 ;; Return value:  Size  Location     Type
  1191 ;;                  2   50[BANK0 ] int 
  1192 ;; Registers used:
  1193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1194 ;; Tracked objects:
  1195 ;;		On entry : 0/0
  1196 ;;		On exit  : 0/0
  1197 ;;		Unchanged: 0/0
  1198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1199 ;;      Params:         0       6       0       0       0       0       0       0       0
  1200 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1201 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1202 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1203 ;;Total ram usage:        8 bytes
  1204 ;; Hardware stack levels used: 1
  1205 ;; Hardware stack levels required when called: 11
  1206 ;; This function calls:
  1207 ;;		_vfpfcnvrt
  1208 ;; This function is called by:
  1209 ;;		_printf
  1210 ;; This function uses a non-reentrant model
  1211 ;;
  1212                           
  1213                           	psect	text2
  1214   002FB6                     __ptext2:
  1215                           	callstack 0
  1216   002FB6                     _vfprintf:
  1217                           	callstack 18
  1218   002FB6                     
  1219                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1220   002FB6  C094  F098         	movff	vfprintf@fmt,vfprintf@cfmt
  1221   002FBA  C095  F099         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1222                           
  1223                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1224   002FBE  EFF0  F017         	goto	l5563
  1225   002FC2                     l5561:
  1226                           
  1227                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1228   002FC2  C092  F08C         	movff	vfprintf@fp,vfpfcnvrt@fp
  1229   002FC6  C093  F08D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1230   002FCA  0E98               	movlw	low vfprintf@cfmt
  1231   002FCC  0100               	movlb	0	; () banked
  1232   002FCE  6F8E               	movwf	vfpfcnvrt@fmt& (0+255),b
  1233   002FD0  0E00               	movlw	high vfprintf@cfmt
  1234   002FD2  6F8F               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1235   002FD4  C096  F090         	movff	vfprintf@ap,vfpfcnvrt@ap
  1236   002FD8  C097  F091         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1237   002FDC  EC63  F00F         	call	_vfpfcnvrt	;wreg free
  1238   002FE0                     l5563:
  1239                           
  1240                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1241   002FE0  C098  FFF6         	movff	vfprintf@cfmt,tblptrl
  1242   002FE4  C099  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1243   002FE8                     	if	0	;tblptru may be non-zero
  1244   002FE8                     	endif
  1245   002FE8                     	if	0	;tblptru may be non-zero
  1246   002FE8                     	endif
  1247   002FE8  0008               	tblrd		*
  1248   002FEA  50F5               	movf	tablat,w,c
  1249   002FEC  0900               	iorlw	0
  1250   002FEE  A4D8               	btfss	status,2,c
  1251   002FF0  EFFC  F017         	goto	u6241
  1252   002FF4  EFFE  F017         	goto	u6240
  1253   002FF8                     u6241:
  1254   002FF8  EFE1  F017         	goto	l5561
  1255   002FFC                     u6240:
  1256   002FFC                     
  1257                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1258   002FFC  0E00               	movlw	0
  1259   002FFE  0100               	movlb	0	; () banked
  1260   003000  6F93               	movwf	(?_vfprintf+1)& (0+255),b
  1261   003002  0E00               	movlw	0
  1262   003004  6F92               	movwf	?_vfprintf& (0+255),b
  1263   003006                     
  1264                           ; BSR set to: 0
  1265   003006  0012               	return		;funcret
  1266   003008                     __end_of_vfprintf:
  1267                           	callstack 0
  1268                           
  1269 ;; *************** function _vfpfcnvrt *****************
  1270 ;; Defined at:
  1271 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;  fp              2   44[BANK0 ] PTR struct _IO_FILE
  1274 ;;		 -> NULL(0), 
  1275 ;;  fmt             2   46[BANK0 ] PTR PTR unsigned char 
  1276 ;;		 -> vfprintf@cfmt(2), 
  1277 ;;  ap              2   48[BANK0 ] PTR PTR void 
  1278 ;;		 -> printf@ap(2), 
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;  convarg         8   68[COMRAM] struct .
  1281 ;;  cp              2   77[COMRAM] PTR unsigned char 
  1282 ;;		 -> STR_1(23), 
  1283 ;;  i               2    0        int 
  1284 ;;  done            2    0        int 
  1285 ;;  c               1   76[COMRAM] unsigned char 
  1286 ;; Return value:  Size  Location     Type
  1287 ;;                  1    wreg      void 
  1288 ;; Registers used:
  1289 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1295 ;;      Params:         0       6       0       0       0       0       0       0       0
  1296 ;;      Locals:        11       0       0       0       0       0       0       0       0
  1297 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1298 ;;      Totals:        14       6       0       0       0       0       0       0       0
  1299 ;;Total ram usage:       20 bytes
  1300 ;; Hardware stack levels used: 1
  1301 ;; Hardware stack levels required when called: 10
  1302 ;; This function calls:
  1303 ;;		_atoi
  1304 ;;		_efgtoa
  1305 ;;		_fputc
  1306 ;;		_isdigit
  1307 ;; This function is called by:
  1308 ;;		_vfprintf
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312                           	psect	text3
  1313   001EC6                     __ptext3:
  1314                           	callstack 0
  1315   001EC6                     _vfpfcnvrt:
  1316                           	callstack 18
  1317   001EC6                     
  1318                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1319   001EC6  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1320   001ECA  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1321   001ECE  CFDE FFF6          	movff	postinc2,tblptrl
  1322   001ED2  CFDD FFF7          	movff	postdec2,tblptrh
  1323   001ED6                     	if	0	;tblptru may be non-zero
  1324   001ED6                     	endif
  1325   001ED6                     	if	0	;tblptru may be non-zero
  1326   001ED6                     	endif
  1327   001ED6  0008               	tblrd		*
  1328   001ED8  50F5               	movf	tablat,w,c
  1329   001EDA  0A25               	xorlw	37
  1330   001EDC  A4D8               	btfss	status,2,c
  1331   001EDE  EF73  F00F         	goto	u6191
  1332   001EE2  EF75  F00F         	goto	u6190
  1333   001EE6                     u6191:
  1334   001EE6  EFD9  F010         	goto	l5541
  1335   001EEA                     u6190:
  1336   001EEA                     
  1337                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1338   001EEA  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1339   001EEE  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1340   001EF2  2ADE               	incf	postinc2,f,c
  1341   001EF4  0E00               	movlw	0
  1342   001EF6  22DD               	addwfc	postdec2,f,c
  1343   001EF8                     
  1344                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1345   001EF8  0E00               	movlw	0
  1346   001EFA  0100               	movlb	0	; () banked
  1347   001EFC  6FEF               	movwf	(_width+1)& (0+255),b
  1348   001EFE  0E00               	movlw	0
  1349   001F00  6FEE               	movwf	_width& (0+255),b
  1350   001F02  C0EE  F0F6         	movff	_width,_flags
  1351   001F06                     
  1352                           ; BSR set to: 0
  1353                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1354   001F06  69F0               	setf	_prec& (0+255),b
  1355   001F08  69F1               	setf	(_prec+1)& (0+255),b
  1356   001F0A                     
  1357                           ; BSR set to: 0
  1358                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1091:         if 
      +                          ((*fmt)[0] == '.') {
  1359   001F0A  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1360   001F0E  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1361   001F12  CFDE FFF6          	movff	postinc2,tblptrl
  1362   001F16  CFDD FFF7          	movff	postdec2,tblptrh
  1363   001F1A                     	if	0	;tblptru may be non-zero
  1364   001F1A                     	endif
  1365   001F1A                     	if	0	;tblptru may be non-zero
  1366   001F1A                     	endif
  1367   001F1A  0008               	tblrd		*
  1368   001F1C  50F5               	movf	tablat,w,c
  1369   001F1E  0A2E               	xorlw	46
  1370   001F20  A4D8               	btfss	status,2,c
  1371   001F22  EF95  F00F         	goto	u6201
  1372   001F26  EF97  F00F         	goto	u6200
  1373   001F2A                     u6201:
  1374   001F2A  EF04  F010         	goto	l5503
  1375   001F2E                     u6200:
  1376   001F2E                     
  1377                           ; BSR set to: 0
  1378                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1092:            
      +                           prec = 0;
  1379   001F2E  0E00               	movlw	0
  1380   001F30  6FF1               	movwf	(_prec+1)& (0+255),b
  1381   001F32  0E00               	movlw	0
  1382   001F34  6FF0               	movwf	_prec& (0+255),b
  1383   001F36                     
  1384                           ; BSR set to: 0
  1385                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1093:            
      +                           ++*fmt;
  1386   001F36  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1387   001F3A  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1388   001F3E  2ADE               	incf	postinc2,f,c
  1389   001F40  0E00               	movlw	0
  1390   001F42  22DD               	addwfc	postdec2,f,c
  1391   001F44                     
  1392                           ; BSR set to: 0
  1393                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1094:            
      +                           if ((*fmt)[0] == '*') {
  1394   001F44  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1395   001F48  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1396   001F4C  CFDE FFF6          	movff	postinc2,tblptrl
  1397   001F50  CFDD FFF7          	movff	postdec2,tblptrh
  1398   001F54                     	if	0	;tblptru may be non-zero
  1399   001F54                     	endif
  1400   001F54                     	if	0	;tblptru may be non-zero
  1401   001F54                     	endif
  1402   001F54  0008               	tblrd		*
  1403   001F56  50F5               	movf	tablat,w,c
  1404   001F58  0A2A               	xorlw	42
  1405   001F5A  A4D8               	btfss	status,2,c
  1406   001F5C  EFB2  F00F         	goto	u6211
  1407   001F60  EFB4  F00F         	goto	u6210
  1408   001F64                     u6211:
  1409   001F64  EFD1  F00F         	goto	l5495
  1410   001F68                     u6210:
  1411   001F68                     
  1412                           ; BSR set to: 0
  1413                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1095:            
      +                               ++*fmt;
  1414   001F68  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1415   001F6C  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1416   001F70  2ADE               	incf	postinc2,f,c
  1417   001F72  0E00               	movlw	0
  1418   001F74  22DD               	addwfc	postdec2,f,c
  1419                           
  1420                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1096:            
      +                               prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1421   001F76  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1422   001F7A  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1423   001F7E  CFDF F042          	movff	indf2,??_vfpfcnvrt
  1424   001F82  0E02               	movlw	2
  1425   001F84  26DE               	addwf	postinc2,f,c
  1426   001F86  CFDF F043          	movff	indf2,??_vfpfcnvrt+1
  1427   001F8A  0E00               	movlw	0
  1428   001F8C  22DD               	addwfc	postdec2,f,c
  1429   001F8E  C042  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1430   001F92  C043  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1431   001F96  CFDE F0F0          	movff	postinc2,_prec
  1432   001F9A  CFDD F0F1          	movff	postdec2,_prec+1
  1433                           
  1434                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1097:            
      +                           } else {
  1435   001F9E  EF04  F010         	goto	l5503
  1436   001FA2                     l5495:
  1437                           
  1438                           ; BSR set to: 0
  1439                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1098:            
      +                               prec = atoi(*fmt);
  1440   001FA2  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1441   001FA6  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1442   001FAA  CFDE F00C          	movff	postinc2,atoi@s
  1443   001FAE  CFDD F00D          	movff	postdec2,atoi@s+1
  1444   001FB2  ECD1  F012         	call	_atoi	;wreg free
  1445   001FB6  C00C  F0F0         	movff	?_atoi,_prec
  1446   001FBA  C00D  F0F1         	movff	?_atoi+1,_prec+1
  1447                           
  1448                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1099:            
      +                               while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1449   001FBE  EFE8  F00F         	goto	l5501
  1450   001FC2                     l5497:
  1451                           
  1452                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1100:            
      +                                   ++*fmt;
  1453   001FC2  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1454   001FC6  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1455   001FCA  2ADE               	incf	postinc2,f,c
  1456   001FCC  0E00               	movlw	0
  1457   001FCE  22DD               	addwfc	postdec2,f,c
  1458   001FD0                     l5501:
  1459   001FD0  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1460   001FD4  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1461   001FD8  CFDE FFF6          	movff	postinc2,tblptrl
  1462   001FDC  CFDD FFF7          	movff	postdec2,tblptrh
  1463   001FE0                     	if	0	;tblptru may be non-zero
  1464   001FE0                     	endif
  1465   001FE0                     	if	0	;tblptru may be non-zero
  1466   001FE0                     	endif
  1467   001FE0  0008               	tblrd		*
  1468   001FE2  CFF5 F042          	movff	tablat,??_vfpfcnvrt
  1469   001FE6  0ED0               	movlw	208
  1470   001FE8  2442               	addwf	??_vfpfcnvrt^0,w,c
  1471   001FEA  6E43               	movwf	(??_vfpfcnvrt+1)^0,c
  1472   001FEC  6A44               	clrf	(??_vfpfcnvrt+2)^0,c
  1473   001FEE  0EFF               	movlw	255
  1474   001FF0  2244               	addwfc	(??_vfpfcnvrt+2)^0,f,c
  1475   001FF2  5044               	movf	(??_vfpfcnvrt+2)^0,w,c
  1476   001FF4  E109               	bnz	u6220
  1477   001FF6  0E0A               	movlw	10
  1478   001FF8  5C43               	subwf	(??_vfpfcnvrt+1)^0,w,c
  1479   001FFA  A0D8               	btfss	status,0,c
  1480   001FFC  EF02  F010         	goto	u6221
  1481   002000  EF04  F010         	goto	u6220
  1482   002004                     u6221:
  1483   002004  EFE1  F00F         	goto	l5497
  1484   002008                     u6220:
  1485   002008                     l5503:
  1486                           
  1487                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  1488   002008  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1489   00200C  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1490   002010  CFDE F04E          	movff	postinc2,vfpfcnvrt@cp
  1491   002014  CFDD F04F          	movff	postdec2,vfpfcnvrt@cp+1
  1492   002018                     
  1493                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  1494   002018  C04E  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1495   00201C  C04F  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1496   002020                     	if	0	;tblptru may be non-zero
  1497   002020                     	endif
  1498   002020                     	if	0	;tblptru may be non-zero
  1499   002020                     	endif
  1500   002020  0008               	tblrd		*
  1501   002022  CFF5 F04D          	movff	tablat,vfpfcnvrt@c
  1502                           
  1503                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  1504   002026  EF21  F010         	goto	l5515
  1505   00202A                     l5507:
  1506                           
  1507                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  1508   00202A  4A4E               	infsnz	vfpfcnvrt@cp^0,f,c
  1509   00202C  2A4F               	incf	(vfpfcnvrt@cp+1)^0,f,c
  1510                           
  1511                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  1512   00202E  EF3A  F010         	goto	l5517
  1513   002032                     l5509:
  1514                           
  1515                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  1516   002032  0E6C               	movlw	108
  1517   002034  6E4D               	movwf	vfpfcnvrt@c^0,c
  1518                           
  1519                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  1520   002036  EF3A  F010         	goto	l5517
  1521   00203A                     l5511:
  1522                           
  1523                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  1524   00203A  0E00               	movlw	0
  1525   00203C  6E4D               	movwf	vfpfcnvrt@c^0,c
  1526                           
  1527                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  1528   00203E  EF3A  F010         	goto	l5517
  1529   002042                     l5515:
  1530   002042  504D               	movf	vfpfcnvrt@c^0,w,c
  1531   002044  6E42               	movwf	??_vfpfcnvrt^0,c
  1532   002046  6A43               	clrf	(??_vfpfcnvrt+1)^0,c
  1533                           
  1534                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1535                           ; Switch size 1, requested type "simple"
  1536                           ; Number of cases is 1, Range of values is 0 to 0
  1537                           ; switch strategies available:
  1538                           ; Name         Instructions Cycles
  1539                           ; simple_byte            4     3 (average)
  1540                           ;	Chosen strategy is simple_byte
  1541   002048  5043               	movf	(??_vfpfcnvrt+1)^0,w,c
  1542   00204A  0A00               	xorlw	0	; case 0
  1543   00204C  B4D8               	btfsc	status,2,c
  1544   00204E  EF2B  F010         	goto	l5715
  1545   002052  EF1D  F010         	goto	l5511
  1546   002056                     l5715:
  1547                           
  1548                           ; Switch size 1, requested type "simple"
  1549                           ; Number of cases is 3, Range of values is 76 to 108
  1550                           ; switch strategies available:
  1551                           ; Name         Instructions Cycles
  1552                           ; simple_byte           10     6 (average)
  1553                           ;	Chosen strategy is simple_byte
  1554   002056  5042               	movf	??_vfpfcnvrt^0,w,c
  1555   002058  0A4C               	xorlw	76	; case 76
  1556   00205A  B4D8               	btfsc	status,2,c
  1557   00205C  EF15  F010         	goto	l5507
  1558   002060  0A2A               	xorlw	42	; case 102
  1559   002062  B4D8               	btfsc	status,2,c
  1560   002064  EF19  F010         	goto	l5509
  1561   002068  0A0A               	xorlw	10	; case 108
  1562   00206A  B4D8               	btfsc	status,2,c
  1563   00206C  EF15  F010         	goto	l5507
  1564   002070  EF1D  F010         	goto	l5511
  1565   002074                     l5517:
  1566   002074  C04E  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1567   002078  C04F  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1568   00207C                     	if	0	;tblptru may be non-zero
  1569   00207C                     	endif
  1570   00207C                     	if	0	;tblptru may be non-zero
  1571   00207C                     	endif
  1572   00207C  0008               	tblrd		*
  1573   00207E  50F5               	movf	tablat,w,c
  1574   002080  0A66               	xorlw	102
  1575   002082  A4D8               	btfss	status,2,c
  1576   002084  EF46  F010         	goto	u6231
  1577   002088  EF48  F010         	goto	u6230
  1578   00208C                     u6231:
  1579   00208C  EFD0  F010         	goto	l5537
  1580   002090                     u6230:
  1581   002090  EF7E  F010         	goto	l5525
  1582   002094                     l5519:
  1583                           
  1584                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1585   002094  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1586   002098  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1587   00209C  CFDF F042          	movff	indf2,??_vfpfcnvrt
  1588   0020A0  0E04               	movlw	4
  1589   0020A2  26DE               	addwf	postinc2,f,c
  1590   0020A4  CFDF F043          	movff	indf2,??_vfpfcnvrt+1
  1591   0020A8  0E00               	movlw	0
  1592   0020AA  22DD               	addwfc	postdec2,f,c
  1593   0020AC  C042  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1594   0020B0  C043  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1595   0020B4  CFDE F045          	movff	postinc2,vfpfcnvrt@convarg
  1596   0020B8  CFDE F046          	movff	postinc2,vfpfcnvrt@convarg+1
  1597   0020BC  CFDE F047          	movff	postinc2,vfpfcnvrt@convarg+2
  1598   0020C0  CFDE F048          	movff	postinc2,vfpfcnvrt@convarg+3
  1599                           
  1600                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  1601   0020C4  EF93  F010         	goto	l5527
  1602   0020C8                     l5521:
  1603                           
  1604                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1605   0020C8  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1606   0020CC  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1607   0020D0  CFDF F042          	movff	indf2,??_vfpfcnvrt
  1608   0020D4  0E04               	movlw	4
  1609   0020D6  26DE               	addwf	postinc2,f,c
  1610   0020D8  CFDF F043          	movff	indf2,??_vfpfcnvrt+1
  1611   0020DC  0E00               	movlw	0
  1612   0020DE  22DD               	addwfc	postdec2,f,c
  1613   0020E0  C042  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1614   0020E4  C043  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1615   0020E8  CFDE F045          	movff	postinc2,vfpfcnvrt@convarg
  1616   0020EC  CFDE F046          	movff	postinc2,vfpfcnvrt@convarg+1
  1617   0020F0  CFDE F047          	movff	postinc2,vfpfcnvrt@convarg+2
  1618   0020F4  CFDE F048          	movff	postinc2,vfpfcnvrt@convarg+3
  1619                           
  1620                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  1621   0020F8  EF93  F010         	goto	l5527
  1622   0020FC                     l5525:
  1623   0020FC  504D               	movf	vfpfcnvrt@c^0,w,c
  1624   0020FE  6E42               	movwf	??_vfpfcnvrt^0,c
  1625   002100  6A43               	clrf	(??_vfpfcnvrt+1)^0,c
  1626                           
  1627                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1628                           ; Switch size 1, requested type "simple"
  1629                           ; Number of cases is 1, Range of values is 0 to 0
  1630                           ; switch strategies available:
  1631                           ; Name         Instructions Cycles
  1632                           ; simple_byte            4     3 (average)
  1633                           ;	Chosen strategy is simple_byte
  1634   002102  5043               	movf	(??_vfpfcnvrt+1)^0,w,c
  1635   002104  0A00               	xorlw	0	; case 0
  1636   002106  B4D8               	btfsc	status,2,c
  1637   002108  EF88  F010         	goto	l5717
  1638   00210C  EF93  F010         	goto	l5527
  1639   002110                     l5717:
  1640                           
  1641                           ; Switch size 1, requested type "simple"
  1642                           ; Number of cases is 2, Range of values is 76 to 108
  1643                           ; switch strategies available:
  1644                           ; Name         Instructions Cycles
  1645                           ; simple_byte            7     4 (average)
  1646                           ;	Chosen strategy is simple_byte
  1647   002110  5042               	movf	??_vfpfcnvrt^0,w,c
  1648   002112  0A4C               	xorlw	76	; case 76
  1649   002114  B4D8               	btfsc	status,2,c
  1650   002116  EF64  F010         	goto	l5521
  1651   00211A  0A20               	xorlw	32	; case 108
  1652   00211C  B4D8               	btfsc	status,2,c
  1653   00211E  EF4A  F010         	goto	l5519
  1654   002122  EF93  F010         	goto	l5527
  1655   002126                     l5527:
  1656                           
  1657                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  1658   002126  0E01               	movlw	1
  1659   002128  244E               	addwf	vfpfcnvrt@cp^0,w,c
  1660   00212A  6E42               	movwf	??_vfpfcnvrt^0,c
  1661   00212C  0E00               	movlw	0
  1662   00212E  204F               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1663   002130  6E43               	movwf	(??_vfpfcnvrt+1)^0,c
  1664   002132  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1665   002136  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1666   00213A  C042  FFDE         	movff	??_vfpfcnvrt,postinc2
  1667   00213E  C043  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1668                           
  1669                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  1670   002142  EFBA  F010         	goto	l5535
  1671   002146                     l5529:
  1672                           
  1673                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  1674   002146  C08C  F039         	movff	vfpfcnvrt@fp,efgtoa@fp
  1675   00214A  C08D  F03A         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1676   00214E  C045  F03B         	movff	vfpfcnvrt@convarg,efgtoa@f
  1677   002152  C046  F03C         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  1678   002156  C047  F03D         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  1679   00215A  C048  F03E         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  1680   00215E  C04E  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1681   002162  C04F  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1682   002166                     	if	0	;tblptru may be non-zero
  1683   002166                     	endif
  1684   002166                     	if	0	;tblptru may be non-zero
  1685   002166                     	endif
  1686   002166  0008               	tblrd		*
  1687   002168  CFF5 F03F          	movff	tablat,efgtoa@c
  1688   00216C  EC11  F004         	call	_efgtoa	;wreg free
  1689   002170  EFED  F010         	goto	l1280
  1690   002174                     l5535:
  1691   002174  C04E  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1692   002178  C04F  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1693   00217C                     	if	0	;tblptru may be non-zero
  1694   00217C                     	endif
  1695   00217C                     	if	0	;tblptru may be non-zero
  1696   00217C                     	endif
  1697   00217C  0008               	tblrd		*
  1698   00217E  50F5               	movf	tablat,w,c
  1699   002180  6E42               	movwf	??_vfpfcnvrt^0,c
  1700   002182  6A43               	clrf	(??_vfpfcnvrt+1)^0,c
  1701                           
  1702                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1703                           ; Switch size 1, requested type "simple"
  1704                           ; Number of cases is 1, Range of values is 0 to 0
  1705                           ; switch strategies available:
  1706                           ; Name         Instructions Cycles
  1707                           ; simple_byte            4     3 (average)
  1708                           ;	Chosen strategy is simple_byte
  1709   002184  5043               	movf	(??_vfpfcnvrt+1)^0,w,c
  1710   002186  0A00               	xorlw	0	; case 0
  1711   002188  B4D8               	btfsc	status,2,c
  1712   00218A  EFC9  F010         	goto	l5719
  1713   00218E  EFD0  F010         	goto	l5537
  1714   002192                     l5719:
  1715                           
  1716                           ; Switch size 1, requested type "simple"
  1717                           ; Number of cases is 1, Range of values is 102 to 102
  1718                           ; switch strategies available:
  1719                           ; Name         Instructions Cycles
  1720                           ; simple_byte            4     3 (average)
  1721                           ;	Chosen strategy is simple_byte
  1722   002192  5042               	movf	??_vfpfcnvrt^0,w,c
  1723   002194  0A66               	xorlw	102	; case 102
  1724   002196  B4D8               	btfsc	status,2,c
  1725   002198  EFA3  F010         	goto	l5529
  1726   00219C  EFD0  F010         	goto	l5537
  1727   0021A0                     l5537:
  1728                           
  1729                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1730   0021A0  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1731   0021A4  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1732   0021A8  2ADE               	incf	postinc2,f,c
  1733   0021AA  0E00               	movlw	0
  1734   0021AC  22DD               	addwfc	postdec2,f,c
  1735   0021AE  EFED  F010         	goto	l1280
  1736   0021B2                     l5541:
  1737                           
  1738                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1739   0021B2  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1740   0021B6  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1741   0021BA  CFDE FFF6          	movff	postinc2,tblptrl
  1742   0021BE  CFDD FFF7          	movff	postdec2,tblptrh
  1743   0021C2                     	if	0	;tblptru may be non-zero
  1744   0021C2                     	endif
  1745   0021C2                     	if	0	;tblptru may be non-zero
  1746   0021C2                     	endif
  1747   0021C2  0008               	tblrd		*
  1748   0021C4  50F5               	movf	tablat,w,c
  1749   0021C6  6E08               	movwf	fputc@c^0,c
  1750   0021C8  6A09               	clrf	(fputc@c+1)^0,c
  1751   0021CA  C08C  F00A         	movff	vfpfcnvrt@fp,fputc@fp
  1752   0021CE  C08D  F00B         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1753   0021D2  EC8F  F016         	call	_fputc	;wreg free
  1754   0021D6  EFD0  F010         	goto	l5537
  1755   0021DA                     l1280:
  1756   0021DA  0012               	return		;funcret
  1757   0021DC                     __end_of_vfpfcnvrt:
  1758                           	callstack 0
  1759                           
  1760 ;; *************** function _efgtoa *****************
  1761 ;; Defined at:
  1762 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1763 ;; Parameters:    Size  Location     Type
  1764 ;;  fp              2   56[COMRAM] PTR struct _IO_FILE
  1765 ;;		 -> NULL(0), 
  1766 ;;  f               4   58[COMRAM] PTR struct _IO_FILE
  1767 ;;  c               1   62[COMRAM] unsigned char 
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;  u               4   40[BANK0 ] struct flui
  1770 ;;  g               4   34[BANK0 ] struct flui
  1771 ;;  l               4   29[BANK0 ] struct flui
  1772 ;;  h               4   25[BANK0 ] struct flui
  1773 ;;  ou              4   19[BANK0 ] struct flui
  1774 ;;  n               2   38[BANK0 ] int 
  1775 ;;  i               2   23[BANK0 ] int 
  1776 ;;  w               2   17[BANK0 ] int 
  1777 ;;  e               2   15[BANK0 ] int 
  1778 ;;  m               2   13[BANK0 ] int 
  1779 ;;  d               2   11[BANK0 ] int 
  1780 ;;  t               2    4[BANK0 ] int 
  1781 ;;  p               2    2[BANK0 ] int 
  1782 ;;  ne              2    0[BANK0 ] int 
  1783 ;;  sign            1   33[BANK0 ] unsigned char 
  1784 ;;  nmode           1   10[BANK0 ] unsigned char 
  1785 ;;  mode            1    9[BANK0 ] unsigned char 
  1786 ;;  pp              1    8[BANK0 ] unsigned char 
  1787 ;;  esign           1    0        unsigned char 
  1788 ;; Return value:  Size  Location     Type
  1789 ;;                  1    wreg      void 
  1790 ;; Registers used:
  1791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 0/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1797 ;;      Params:         7       0       0       0       0       0       0       0       0
  1798 ;;      Locals:         0      44       0       0       0       0       0       0       0
  1799 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1800 ;;      Totals:         9      44       0       0       0       0       0       0       0
  1801 ;;Total ram usage:       53 bytes
  1802 ;; Hardware stack levels used: 1
  1803 ;; Hardware stack levels required when called: 9
  1804 ;; This function calls:
  1805 ;;		___fladd
  1806 ;;		___fldiv
  1807 ;;		___fleq
  1808 ;;		___flge
  1809 ;;		___flmul
  1810 ;;		___flneg
  1811 ;;		___flsub
  1812 ;;		___fltol
  1813 ;;		___fpclassifyf
  1814 ;;		_floorf
  1815 ;;		_labs
  1816 ;;		_memcpy
  1817 ;;		_pad
  1818 ;;		_strcpy
  1819 ;; This function is called by:
  1820 ;;		_vfpfcnvrt
  1821 ;; This function uses a non-reentrant model
  1822 ;;
  1823                           
  1824                           	psect	text4
  1825   000822                     __ptext4:
  1826                           	callstack 0
  1827   000822                     _efgtoa:
  1828                           	callstack 18
  1829   000822                     
  1830                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  1831   000822  0E00               	movlw	0
  1832   000824  0100               	movlb	0	; () banked
  1833   000826  6F81               	movwf	efgtoa@sign& (0+255),b
  1834   000828                     
  1835                           ; BSR set to: 0
  1836                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  1837   000828  C03B  F082         	movff	efgtoa@f,efgtoa@g
  1838   00082C  C03C  F083         	movff	efgtoa@f+1,efgtoa@g+1
  1839   000830  C03D  F084         	movff	efgtoa@f+2,efgtoa@g+2
  1840   000834  C03E  F085         	movff	efgtoa@f+3,efgtoa@g+3
  1841   000838                     
  1842                           ; BSR set to: 0
  1843                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  1844   000838  BF85               	btfsc	(efgtoa@g+3)& (0+255),7,b
  1845   00083A  EF23  F004         	goto	u5830
  1846   00083E  EF21  F004         	goto	u5831
  1847   000842                     u5831:
  1848   000842  EF37  F004         	goto	l5233
  1849   000846                     u5830:
  1850   000846                     
  1851                           ; BSR set to: 0
  1852                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  1853   000846  0E01               	movlw	1
  1854   000848  6F81               	movwf	efgtoa@sign& (0+255),b
  1855   00084A                     
  1856                           ; BSR set to: 0
  1857                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  1858   00084A  C082  F006         	movff	efgtoa@g,___flneg@f1
  1859   00084E  C083  F007         	movff	efgtoa@g+1,___flneg@f1+1
  1860   000852  C084  F008         	movff	efgtoa@g+2,___flneg@f1+2
  1861   000856  C085  F009         	movff	efgtoa@g+3,___flneg@f1+3
  1862   00085A  EC15  F019         	call	___flneg	;wreg free
  1863   00085E  C006  F082         	movff	?___flneg,efgtoa@g
  1864   000862  C007  F083         	movff	?___flneg+1,efgtoa@g+1
  1865   000866  C008  F084         	movff	?___flneg+2,efgtoa@g+2
  1866   00086A  C009  F085         	movff	?___flneg+3,efgtoa@g+3
  1867   00086E                     l5233:
  1868                           
  1869                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  1870   00086E  0E00               	movlw	0
  1871   000870  0100               	movlb	0	; () banked
  1872   000872  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  1873   000874  0E00               	movlw	0
  1874   000876  6F86               	movwf	efgtoa@n& (0+255),b
  1875   000878                     
  1876                           ; BSR set to: 0
  1877                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  1878   000878  C0EE  F071         	movff	_width,efgtoa@w
  1879   00087C  C0EF  F072         	movff	_width+1,efgtoa@w+1
  1880   000880                     
  1881                           ; BSR set to: 0
  1882                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  1883   000880  5181               	movf	efgtoa@sign& (0+255),w,b
  1884   000882  B4D8               	btfsc	status,2,c
  1885   000884  EF46  F004         	goto	u5841
  1886   000888  EF48  F004         	goto	u5840
  1887   00088C                     u5841:
  1888   00088C  EF5C  F004         	goto	l5247
  1889   000890                     u5840:
  1890   000890                     
  1891                           ; BSR set to: 0
  1892                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  1893   000890  5181               	movf	efgtoa@sign& (0+255),w,b
  1894   000892  A4D8               	btfss	status,2,c
  1895   000894  EF4E  F004         	goto	u5851
  1896   000898  EF50  F004         	goto	u5850
  1897   00089C                     u5851:
  1898   00089C  EF56  F004         	goto	l5243
  1899   0008A0                     u5850:
  1900   0008A0                     
  1901                           ; BSR set to: 0
  1902   0008A0  0E00               	movlw	0
  1903   0008A2  6F67               	movwf	(_efgtoa$1822+1)& (0+255),b
  1904   0008A4  0E2B               	movlw	43
  1905   0008A6  6F66               	movwf	_efgtoa$1822& (0+255),b
  1906   0008A8  EF5A  F004         	goto	l5245
  1907   0008AC                     l5243:
  1908                           
  1909                           ; BSR set to: 0
  1910   0008AC  0E00               	movlw	0
  1911   0008AE  6F67               	movwf	(_efgtoa$1822+1)& (0+255),b
  1912   0008B0  0E2D               	movlw	45
  1913   0008B2  6F66               	movwf	_efgtoa$1822& (0+255),b
  1914   0008B4                     l5245:
  1915                           
  1916                           ; BSR set to: 0
  1917   0008B4  C066  F081         	movff	_efgtoa$1822,efgtoa@sign
  1918   0008B8                     l5247:
  1919                           
  1920                           ; BSR set to: 0
  1921                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  1922   0008B8  C082  F006         	movff	efgtoa@g,___fpclassifyf@x
  1923   0008BC  C083  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  1924   0008C0  C084  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  1925   0008C4  C085  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  1926   0008C8  EC7B  F014         	call	___fpclassifyf	;wreg free
  1927   0008CC  0406               	decf	?___fpclassifyf^0,w,c
  1928   0008CE  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  1929   0008D0  A4D8               	btfss	status,2,c
  1930   0008D2  EF6D  F004         	goto	u5861
  1931   0008D6  EF6F  F004         	goto	u5860
  1932   0008DA                     u5861:
  1933   0008DA  EFA2  F004         	goto	l5265
  1934   0008DE                     u5860:
  1935   0008DE                     
  1936                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  1937   0008DE  0100               	movlb	0	; () banked
  1938   0008E0  5181               	movf	efgtoa@sign& (0+255),w,b
  1939   0008E2  B4D8               	btfsc	status,2,c
  1940   0008E4  EF76  F004         	goto	u5871
  1941   0008E8  EF78  F004         	goto	u5870
  1942   0008EC                     u5871:
  1943   0008EC  EF81  F004         	goto	l5257
  1944   0008F0                     u5870:
  1945   0008F0                     
  1946                           ; BSR set to: 0
  1947                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  1948   0008F0  C081  F130         	movff	efgtoa@sign,_dbuf
  1949   0008F4                     
  1950                           ; BSR set to: 0
  1951                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  1952   0008F4  0771               	decf	efgtoa@w& (0+255),f,b
  1953   0008F6  A0D8               	btfss	status,0,c
  1954   0008F8  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  1955   0008FA                     
  1956                           ; BSR set to: 0
  1957                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  1958   0008FA  0E00               	movlw	0
  1959   0008FC  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  1960   0008FE  0E01               	movlw	1
  1961   000900  6F86               	movwf	efgtoa@n& (0+255),b
  1962   000902                     l5257:
  1963                           
  1964                           ; BSR set to: 0
  1965                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  1966   000902  0E30               	movlw	low _dbuf
  1967   000904  2586               	addwf	efgtoa@n& (0+255),w,b
  1968   000906  6E06               	movwf	strcpy@dest^0,c
  1969   000908  0E01               	movlw	high _dbuf
  1970   00090A  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  1971   00090C  6E07               	movwf	(strcpy@dest+1)^0,c
  1972   00090E  0E18               	movlw	low STR_2
  1973   000910  6E08               	movwf	strcpy@src^0,c
  1974   000912  0E08               	movlw	high STR_2
  1975   000914  6E09               	movwf	(strcpy@src+1)^0,c
  1976   000916  ECB5  F018         	call	_strcpy	;wreg free
  1977   00091A                     
  1978                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  1979   00091A  0100               	movlb	0	; () banked
  1980   00091C  0EFD               	movlw	253
  1981   00091E  2771               	addwf	efgtoa@w& (0+255),f,b
  1982   000920  0EFF               	movlw	255
  1983   000922  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
  1984   000924                     
  1985                           ; BSR set to: 0
  1986                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  1987   000924  C039  F018         	movff	efgtoa@fp,pad@fp
  1988   000928  C03A  F019         	movff	efgtoa@fp+1,pad@fp+1
  1989   00092C  0E30               	movlw	low _dbuf
  1990   00092E  6E1A               	movwf	pad@buf^0,c
  1991   000930  0E01               	movlw	high _dbuf
  1992   000932  6E1B               	movwf	(pad@buf+1)^0,c
  1993   000934  C071  F01C         	movff	efgtoa@w,pad@p
  1994   000938  C072  F01D         	movff	efgtoa@w+1,pad@p+1
  1995   00093C  ECDA  F016         	call	_pad	;wreg free
  1996   000940  EF20  F009         	goto	l1212
  1997   000944                     l5265:
  1998                           
  1999                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2000   000944  C082  F006         	movff	efgtoa@g,___fpclassifyf@x
  2001   000948  C083  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2002   00094C  C084  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2003   000950  C085  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2004   000954  EC7B  F014         	call	___fpclassifyf	;wreg free
  2005   000958  5006               	movf	?___fpclassifyf^0,w,c
  2006   00095A  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  2007   00095C  A4D8               	btfss	status,2,c
  2008   00095E  EFB3  F004         	goto	u5881
  2009   000962  EFB5  F004         	goto	u5880
  2010   000966                     u5881:
  2011   000966  EFE8  F004         	goto	l5283
  2012   00096A                     u5880:
  2013   00096A                     
  2014                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  2015   00096A  0100               	movlb	0	; () banked
  2016   00096C  5181               	movf	efgtoa@sign& (0+255),w,b
  2017   00096E  B4D8               	btfsc	status,2,c
  2018   000970  EFBC  F004         	goto	u5891
  2019   000974  EFBE  F004         	goto	u5890
  2020   000978                     u5891:
  2021   000978  EFC7  F004         	goto	l5275
  2022   00097C                     u5890:
  2023   00097C                     
  2024                           ; BSR set to: 0
  2025                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  2026   00097C  C081  F130         	movff	efgtoa@sign,_dbuf
  2027   000980                     
  2028                           ; BSR set to: 0
  2029                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  2030   000980  0771               	decf	efgtoa@w& (0+255),f,b
  2031   000982  A0D8               	btfss	status,0,c
  2032   000984  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2033   000986                     
  2034                           ; BSR set to: 0
  2035                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  2036   000986  0E00               	movlw	0
  2037   000988  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2038   00098A  0E01               	movlw	1
  2039   00098C  6F86               	movwf	efgtoa@n& (0+255),b
  2040   00098E                     l5275:
  2041                           
  2042                           ; BSR set to: 0
  2043                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  2044   00098E  0E30               	movlw	low _dbuf
  2045   000990  2586               	addwf	efgtoa@n& (0+255),w,b
  2046   000992  6E06               	movwf	strcpy@dest^0,c
  2047   000994  0E01               	movlw	high _dbuf
  2048   000996  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2049   000998  6E07               	movwf	(strcpy@dest+1)^0,c
  2050   00099A  0E1C               	movlw	low STR_5
  2051   00099C  6E08               	movwf	strcpy@src^0,c
  2052   00099E  0E08               	movlw	high STR_5
  2053   0009A0  6E09               	movwf	(strcpy@src+1)^0,c
  2054   0009A2  ECB5  F018         	call	_strcpy	;wreg free
  2055   0009A6                     
  2056                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 570:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 571:         w -= ((
      +                          sizeof("nan")/sizeof("nan"[0]))-1);
  2057   0009A6  0100               	movlb	0	; () banked
  2058   0009A8  0EFD               	movlw	253
  2059   0009AA  2771               	addwf	efgtoa@w& (0+255),f,b
  2060   0009AC  0EFF               	movlw	255
  2061   0009AE  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2062   0009B0                     
  2063                           ; BSR set to: 0
  2064                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 572:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2065   0009B0  C039  F018         	movff	efgtoa@fp,pad@fp
  2066   0009B4  C03A  F019         	movff	efgtoa@fp+1,pad@fp+1
  2067   0009B8  0E30               	movlw	low _dbuf
  2068   0009BA  6E1A               	movwf	pad@buf^0,c
  2069   0009BC  0E01               	movlw	high _dbuf
  2070   0009BE  6E1B               	movwf	(pad@buf+1)^0,c
  2071   0009C0  C071  F01C         	movff	efgtoa@w,pad@p
  2072   0009C4  C072  F01D         	movff	efgtoa@w+1,pad@p+1
  2073   0009C8  ECDA  F016         	call	_pad	;wreg free
  2074   0009CC  EF20  F009         	goto	l1212
  2075   0009D0                     l5283:
  2076                           
  2077                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  2078   0009D0  0E00               	movlw	0
  2079   0009D2  0100               	movlb	0	; () banked
  2080   0009D4  6F88               	movwf	efgtoa@u& (0+255),b
  2081   0009D6  0E00               	movlw	0
  2082   0009D8  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2083   0009DA  0E80               	movlw	128
  2084   0009DC  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2085   0009DE  0E3F               	movlw	63
  2086   0009E0  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2087                           
  2088                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  2089   0009E2  0E00               	movlw	0
  2090   0009E4  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2091   0009E6  0E00               	movlw	0
  2092   0009E8  6F6F               	movwf	efgtoa@e& (0+255),b
  2093   0009EA                     
  2094                           ; BSR set to: 0
  2095                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  2096   0009EA  C082  F006         	movff	efgtoa@g,___fleq@ff1
  2097   0009EE  C083  F007         	movff	efgtoa@g+1,___fleq@ff1+1
  2098   0009F2  C084  F008         	movff	efgtoa@g+2,___fleq@ff1+2
  2099   0009F6  C085  F009         	movff	efgtoa@g+3,___fleq@ff1+3
  2100   0009FA  0E00               	movlw	0
  2101   0009FC  6E0A               	movwf	___fleq@ff2^0,c
  2102   0009FE  0E00               	movlw	0
  2103   000A00  6E0B               	movwf	(___fleq@ff2+1)^0,c
  2104   000A02  0E00               	movlw	0
  2105   000A04  6E0C               	movwf	(___fleq@ff2+2)^0,c
  2106   000A06  0E00               	movlw	0
  2107   000A08  6E0D               	movwf	(___fleq@ff2+3)^0,c
  2108   000A0A  EC3A  F016         	call	___fleq	;wreg free
  2109   000A0E  B0D8               	btfsc	status,0,c
  2110   000A10  EF0C  F005         	goto	u5901
  2111   000A14  EF0E  F005         	goto	u5900
  2112   000A18                     u5901:
  2113   000A18  EFED  F005         	goto	l1215
  2114   000A1C                     u5900:
  2115   000A1C  EF1B  F005         	goto	l5291
  2116   000A20                     l1217:
  2117                           
  2118                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  2119   000A20  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2120   000A24  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2121   000A28  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2122   000A2C  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2123   000A30                     
  2124                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  2125   000A30  0100               	movlb	0	; () banked
  2126   000A32  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2127   000A34  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2128   000A36                     l5291:
  2129                           
  2130                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2131   000A36  C088  F014         	movff	efgtoa@u,___flmul@b
  2132   000A3A  C089  F015         	movff	efgtoa@u+1,___flmul@b+1
  2133   000A3E  C08A  F016         	movff	efgtoa@u+2,___flmul@b+2
  2134   000A42  C08B  F017         	movff	efgtoa@u+3,___flmul@b+3
  2135   000A46  0E00               	movlw	0
  2136   000A48  6E18               	movwf	___flmul@a^0,c
  2137   000A4A  0E00               	movlw	0
  2138   000A4C  6E19               	movwf	(___flmul@a+1)^0,c
  2139   000A4E  0E20               	movlw	32
  2140   000A50  6E1A               	movwf	(___flmul@a+2)^0,c
  2141   000A52  0E41               	movlw	65
  2142   000A54  6E1B               	movwf	(___flmul@a+3)^0,c
  2143   000A56  EC81  F00B         	call	___flmul	;wreg free
  2144   000A5A  C014  F073         	movff	?___flmul,efgtoa@ou
  2145   000A5E  C015  F074         	movff	?___flmul+1,efgtoa@ou+1
  2146   000A62  C016  F075         	movff	?___flmul+2,efgtoa@ou+2
  2147   000A66  C017  F076         	movff	?___flmul+3,efgtoa@ou+3
  2148   000A6A  0100               	movlb	0	; () banked
  2149   000A6C  5173               	movf	efgtoa@ou& (0+255),w,b
  2150   000A6E  5D82               	subwf	efgtoa@g& (0+255),w,b
  2151   000A70  6E06               	movwf	labs@a^0,c
  2152   000A72  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
  2153   000A74  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2154   000A76  6E07               	movwf	(labs@a+1)^0,c
  2155   000A78  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
  2156   000A7A  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2157   000A7C  6E08               	movwf	(labs@a+2)^0,c
  2158   000A7E  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
  2159   000A80  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2160   000A82  6E09               	movwf	(labs@a+3)^0,c
  2161   000A84  EC51  F017         	call	_labs	;wreg free
  2162   000A88  BE09               	btfsc	(?_labs+3)^0,7,c
  2163   000A8A  EF52  F005         	goto	u5911
  2164   000A8E  5009               	movf	(?_labs+3)^0,w,c
  2165   000A90  1008               	iorwf	(?_labs+2)^0,w,c
  2166   000A92  1007               	iorwf	(?_labs+1)^0,w,c
  2167   000A94  E109               	bnz	u5910
  2168   000A96  0E02               	movlw	2
  2169   000A98  5C06               	subwf	?_labs^0,w,c
  2170   000A9A  A0D8               	btfss	status,0,c
  2171   000A9C  EF52  F005         	goto	u5911
  2172   000AA0  EF54  F005         	goto	u5910
  2173   000AA4                     u5911:
  2174   000AA4  EF10  F005         	goto	l1217
  2175   000AA8                     u5910:
  2176   000AA8  C073  F02D         	movff	efgtoa@ou,___flge@ff1
  2177   000AAC  C074  F02E         	movff	efgtoa@ou+1,___flge@ff1+1
  2178   000AB0  C075  F02F         	movff	efgtoa@ou+2,___flge@ff1+2
  2179   000AB4  C076  F030         	movff	efgtoa@ou+3,___flge@ff1+3
  2180   000AB8  C082  F031         	movff	efgtoa@g,___flge@ff2
  2181   000ABC  C083  F032         	movff	efgtoa@g+1,___flge@ff2+1
  2182   000AC0  C084  F033         	movff	efgtoa@g+2,___flge@ff2+2
  2183   000AC4  C085  F034         	movff	efgtoa@g+3,___flge@ff2+3
  2184   000AC8  ECF9  F013         	call	___flge	;wreg free
  2185   000ACC  A0D8               	btfss	status,0,c
  2186   000ACE  EF6B  F005         	goto	u5921
  2187   000AD2  EF6D  F005         	goto	u5920
  2188   000AD6                     u5921:
  2189   000AD6  EF10  F005         	goto	l1217
  2190   000ADA                     u5920:
  2191   000ADA                     
  2192                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2193   000ADA  0100               	movlb	0	; () banked
  2194   000ADC  5188               	movf	efgtoa@u& (0+255),w,b
  2195   000ADE  5D82               	subwf	efgtoa@g& (0+255),w,b
  2196   000AE0  6E06               	movwf	labs@a^0,c
  2197   000AE2  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2198   000AE4  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2199   000AE6  6E07               	movwf	(labs@a+1)^0,c
  2200   000AE8  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2201   000AEA  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2202   000AEC  6E08               	movwf	(labs@a+2)^0,c
  2203   000AEE  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2204   000AF0  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2205   000AF2  6E09               	movwf	(labs@a+3)^0,c
  2206   000AF4  EC51  F017         	call	_labs	;wreg free
  2207   000AF8  BE09               	btfsc	(?_labs+3)^0,7,c
  2208   000AFA  EF8C  F005         	goto	u5930
  2209   000AFE  5009               	movf	(?_labs+3)^0,w,c
  2210   000B00  1008               	iorwf	(?_labs+2)^0,w,c
  2211   000B02  1007               	iorwf	(?_labs+1)^0,w,c
  2212   000B04  E107               	bnz	u5931
  2213   000B06  0E02               	movlw	2
  2214   000B08  5C06               	subwf	?_labs^0,w,c
  2215   000B0A  B0D8               	btfsc	status,0,c
  2216   000B0C  EF8A  F005         	goto	u5931
  2217   000B10  EF8C  F005         	goto	u5930
  2218   000B14                     u5931:
  2219   000B14  EFD4  F005         	goto	l5309
  2220   000B18                     u5930:
  2221   000B18                     l5299:
  2222                           
  2223                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  2224   000B18  C088  F082         	movff	efgtoa@u,efgtoa@g
  2225   000B1C  C089  F083         	movff	efgtoa@u+1,efgtoa@g+1
  2226   000B20  C08A  F084         	movff	efgtoa@u+2,efgtoa@g+2
  2227   000B24  C08B  F085         	movff	efgtoa@u+3,efgtoa@g+3
  2228                           
  2229                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  2230   000B28  EFED  F005         	goto	l1215
  2231   000B2C                     l5301:
  2232                           
  2233                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  2234   000B2C  C088  F006         	movff	efgtoa@u,___fldiv@b
  2235   000B30  C089  F007         	movff	efgtoa@u+1,___fldiv@b+1
  2236   000B34  C08A  F008         	movff	efgtoa@u+2,___fldiv@b+2
  2237   000B38  C08B  F009         	movff	efgtoa@u+3,___fldiv@b+3
  2238   000B3C  0E00               	movlw	0
  2239   000B3E  6E0A               	movwf	___fldiv@a^0,c
  2240   000B40  0E00               	movlw	0
  2241   000B42  6E0B               	movwf	(___fldiv@a+1)^0,c
  2242   000B44  0E20               	movlw	32
  2243   000B46  6E0C               	movwf	(___fldiv@a+2)^0,c
  2244   000B48  0E41               	movlw	65
  2245   000B4A  6E0D               	movwf	(___fldiv@a+3)^0,c
  2246   000B4C  EC96  F00D         	call	___fldiv	;wreg free
  2247   000B50  C006  F088         	movff	?___fldiv,efgtoa@u
  2248   000B54  C007  F089         	movff	?___fldiv+1,efgtoa@u+1
  2249   000B58  C008  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2250   000B5C  C009  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2251   000B60                     
  2252                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  2253   000B60  0100               	movlb	0	; () banked
  2254   000B62  076F               	decf	efgtoa@e& (0+255),f,b
  2255   000B64  A0D8               	btfss	status,0,c
  2256   000B66  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  2257   000B68                     
  2258                           ; BSR set to: 0
  2259                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  2260   000B68  5188               	movf	efgtoa@u& (0+255),w,b
  2261   000B6A  5D82               	subwf	efgtoa@g& (0+255),w,b
  2262   000B6C  6E06               	movwf	labs@a^0,c
  2263   000B6E  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2264   000B70  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2265   000B72  6E07               	movwf	(labs@a+1)^0,c
  2266   000B74  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2267   000B76  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2268   000B78  6E08               	movwf	(labs@a+2)^0,c
  2269   000B7A  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2270   000B7C  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2271   000B7E  6E09               	movwf	(labs@a+3)^0,c
  2272   000B80  EC51  F017         	call	_labs	;wreg free
  2273   000B84  BE09               	btfsc	(?_labs+3)^0,7,c
  2274   000B86  EFD2  F005         	goto	u5940
  2275   000B8A  5009               	movf	(?_labs+3)^0,w,c
  2276   000B8C  1008               	iorwf	(?_labs+2)^0,w,c
  2277   000B8E  1007               	iorwf	(?_labs+1)^0,w,c
  2278   000B90  E107               	bnz	u5941
  2279   000B92  0E02               	movlw	2
  2280   000B94  5C06               	subwf	?_labs^0,w,c
  2281   000B96  B0D8               	btfsc	status,0,c
  2282   000B98  EFD0  F005         	goto	u5941
  2283   000B9C  EFD2  F005         	goto	u5940
  2284   000BA0                     u5941:
  2285   000BA0  EFD4  F005         	goto	l5309
  2286   000BA4                     u5940:
  2287   000BA4  EF8C  F005         	goto	l5299
  2288   000BA8                     l5309:
  2289                           
  2290                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  2291   000BA8  C082  F02D         	movff	efgtoa@g,___flge@ff1
  2292   000BAC  C083  F02E         	movff	efgtoa@g+1,___flge@ff1+1
  2293   000BB0  C084  F02F         	movff	efgtoa@g+2,___flge@ff1+2
  2294   000BB4  C085  F030         	movff	efgtoa@g+3,___flge@ff1+3
  2295   000BB8  C088  F031         	movff	efgtoa@u,___flge@ff2
  2296   000BBC  C089  F032         	movff	efgtoa@u+1,___flge@ff2+1
  2297   000BC0  C08A  F033         	movff	efgtoa@u+2,___flge@ff2+2
  2298   000BC4  C08B  F034         	movff	efgtoa@u+3,___flge@ff2+3
  2299   000BC8  ECF9  F013         	call	___flge	;wreg free
  2300   000BCC  A0D8               	btfss	status,0,c
  2301   000BCE  EFEB  F005         	goto	u5951
  2302   000BD2  EFED  F005         	goto	u5950
  2303   000BD6                     u5951:
  2304   000BD6  EF96  F005         	goto	l5301
  2305   000BDA                     u5950:
  2306   000BDA                     l1215:
  2307                           
  2308                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  2309   000BDA  C03F  F069         	movff	efgtoa@c,efgtoa@mode
  2310                           
  2311                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  2312   000BDE  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  2313   000BE2                     
  2314                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  2315   000BE2  0100               	movlb	0	; () banked
  2316   000BE4  BFF1               	btfsc	(_prec+1)& (0+255),7,b
  2317   000BE6  EFF7  F005         	goto	u5961
  2318   000BEA  EFF9  F005         	goto	u5960
  2319   000BEE                     u5961:
  2320   000BEE  EFFF  F005         	goto	l5315
  2321   000BF2                     u5960:
  2322   000BF2                     
  2323                           ; BSR set to: 0
  2324   000BF2  C0F0  F062         	movff	_prec,efgtoa@p
  2325   000BF6  C0F1  F063         	movff	_prec+1,efgtoa@p+1
  2326   000BFA  EF03  F006         	goto	l5317
  2327   000BFE                     l5315:
  2328                           
  2329                           ; BSR set to: 0
  2330   000BFE  0E00               	movlw	0
  2331   000C00  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  2332   000C02  0E06               	movlw	6
  2333   000C04  6F62               	movwf	efgtoa@p& (0+255),b
  2334   000C06                     l5317:
  2335                           
  2336                           ; BSR set to: 0
  2337                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  2338   000C06  C062  F06D         	movff	efgtoa@p,efgtoa@m
  2339   000C0A  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  2340   000C0E                     
  2341                           ; BSR set to: 0
  2342                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  2343   000C0E  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2344   000C10  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2345   000C12                     
  2346                           ; BSR set to: 0
  2347                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  2348   000C12  0E66               	movlw	102
  2349   000C14  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2350   000C16  A4D8               	btfss	status,2,c
  2351   000C18  EF10  F006         	goto	u5971
  2352   000C1C  EF12  F006         	goto	u5970
  2353   000C20                     u5971:
  2354   000C20  EF32  F006         	goto	l5331
  2355   000C24                     u5970:
  2356   000C24                     
  2357                           ; BSR set to: 0
  2358                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  2359   000C24  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2360   000C26  EF19  F006         	goto	u5980
  2361   000C2A  EF17  F006         	goto	u5981
  2362   000C2E                     u5981:
  2363   000C2E  EF25  F006         	goto	l5327
  2364   000C32                     u5980:
  2365   000C32                     
  2366                           ; BSR set to: 0
  2367                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  2368   000C32  0E00               	movlw	0
  2369   000C34  6F88               	movwf	efgtoa@u& (0+255),b
  2370   000C36  0E00               	movlw	0
  2371   000C38  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2372   000C3A  0E80               	movlw	128
  2373   000C3C  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2374   000C3E  0E3F               	movlw	63
  2375   000C40  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2376                           
  2377                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  2378   000C42  0E00               	movlw	0
  2379   000C44  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2380   000C46  0E00               	movlw	0
  2381   000C48  6F6F               	movwf	efgtoa@e& (0+255),b
  2382   000C4A                     l5327:
  2383                           
  2384                           ; BSR set to: 0
  2385                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  2386   000C4A  0E67               	movlw	103
  2387   000C4C  1969               	xorwf	efgtoa@mode& (0+255),w,b
  2388   000C4E  B4D8               	btfsc	status,2,c
  2389   000C50  EF2C  F006         	goto	u5991
  2390   000C54  EF2E  F006         	goto	u5990
  2391   000C58                     u5991:
  2392   000C58  EF32  F006         	goto	l5331
  2393   000C5C                     u5990:
  2394   000C5C                     
  2395                           ; BSR set to: 0
  2396                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  2397   000C5C  516F               	movf	efgtoa@e& (0+255),w,b
  2398   000C5E  276D               	addwf	efgtoa@m& (0+255),f,b
  2399   000C60  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  2400   000C62  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2401   000C64                     l5331:
  2402                           
  2403                           ; BSR set to: 0
  2404                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  2405   000C64  0E00               	movlw	0
  2406   000C66  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2407   000C68  0E00               	movlw	0
  2408   000C6A  6F77               	movwf	efgtoa@i& (0+255),b
  2409   000C6C                     
  2410                           ; BSR set to: 0
  2411                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  2412   000C6C  C082  F079         	movff	efgtoa@g,efgtoa@h
  2413   000C70  C083  F07A         	movff	efgtoa@g+1,efgtoa@h+1
  2414   000C74  C084  F07B         	movff	efgtoa@g+2,efgtoa@h+2
  2415   000C78  C085  F07C         	movff	efgtoa@g+3,efgtoa@h+3
  2416   000C7C                     
  2417                           ; BSR set to: 0
  2418                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  2419   000C7C  C088  F073         	movff	efgtoa@u,efgtoa@ou
  2420   000C80  C089  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  2421   000C84  C08A  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  2422   000C88  C08B  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  2423                           
  2424                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  2425   000C8C  EFC3  F006         	goto	l5345
  2426   000C90                     l5337:
  2427                           
  2428                           ; BSR set to: 0
  2429                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  2430   000C90  C079  F006         	movff	efgtoa@h,___fldiv@b
  2431   000C94  C07A  F007         	movff	efgtoa@h+1,___fldiv@b+1
  2432   000C98  C07B  F008         	movff	efgtoa@h+2,___fldiv@b+2
  2433   000C9C  C07C  F009         	movff	efgtoa@h+3,___fldiv@b+3
  2434   000CA0  C088  F00A         	movff	efgtoa@u,___fldiv@a
  2435   000CA4  C089  F00B         	movff	efgtoa@u+1,___fldiv@a+1
  2436   000CA8  C08A  F00C         	movff	efgtoa@u+2,___fldiv@a+2
  2437   000CAC  C08B  F00D         	movff	efgtoa@u+3,___fldiv@a+3
  2438   000CB0  EC96  F00D         	call	___fldiv	;wreg free
  2439   000CB4  C006  F01F         	movff	?___fldiv,floorf@x
  2440   000CB8  C007  F020         	movff	?___fldiv+1,floorf@x+1
  2441   000CBC  C008  F021         	movff	?___fldiv+2,floorf@x+2
  2442   000CC0  C009  F022         	movff	?___fldiv+3,floorf@x+3
  2443   000CC4  ECEE  F010         	call	_floorf	;wreg free
  2444   000CC8  C01F  F07D         	movff	?_floorf,efgtoa@l
  2445   000CCC  C020  F07E         	movff	?_floorf+1,efgtoa@l+1
  2446   000CD0  C021  F07F         	movff	?_floorf+2,efgtoa@l+2
  2447   000CD4  C022  F080         	movff	?_floorf+3,efgtoa@l+3
  2448                           
  2449                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  2450   000CD8  C07D  F006         	movff	efgtoa@l,___fltol@f1
  2451   000CDC  C07E  F007         	movff	efgtoa@l+1,___fltol@f1+1
  2452   000CE0  C07F  F008         	movff	efgtoa@l+2,___fltol@f1+2
  2453   000CE4  C080  F009         	movff	efgtoa@l+3,___fltol@f1+3
  2454   000CE8  EC76  F013         	call	___fltol	;wreg free
  2455   000CEC  C006  F06B         	movff	?___fltol,efgtoa@d
  2456   000CF0  C007  F06C         	movff	?___fltol+1,efgtoa@d+1
  2457   000CF4                     
  2458                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  2459   000CF4  C079  F02D         	movff	efgtoa@h,___flsub@b
  2460   000CF8  C07A  F02E         	movff	efgtoa@h+1,___flsub@b+1
  2461   000CFC  C07B  F02F         	movff	efgtoa@h+2,___flsub@b+2
  2462   000D00  C07C  F030         	movff	efgtoa@h+3,___flsub@b+3
  2463   000D04  C07D  F018         	movff	efgtoa@l,___flmul@a
  2464   000D08  C07E  F019         	movff	efgtoa@l+1,___flmul@a+1
  2465   000D0C  C07F  F01A         	movff	efgtoa@l+2,___flmul@a+2
  2466   000D10  C080  F01B         	movff	efgtoa@l+3,___flmul@a+3
  2467   000D14  C088  F014         	movff	efgtoa@u,___flmul@b
  2468   000D18  C089  F015         	movff	efgtoa@u+1,___flmul@b+1
  2469   000D1C  C08A  F016         	movff	efgtoa@u+2,___flmul@b+2
  2470   000D20  C08B  F017         	movff	efgtoa@u+3,___flmul@b+3
  2471   000D24  EC81  F00B         	call	___flmul	;wreg free
  2472   000D28  C014  F031         	movff	?___flmul,___flsub@a
  2473   000D2C  C015  F032         	movff	?___flmul+1,___flsub@a+1
  2474   000D30  C016  F033         	movff	?___flmul+2,___flsub@a+2
  2475   000D34  C017  F034         	movff	?___flmul+3,___flsub@a+3
  2476   000D38  EC2C  F018         	call	___flsub	;wreg free
  2477   000D3C  C02D  F079         	movff	?___flsub,efgtoa@h
  2478   000D40  C02E  F07A         	movff	?___flsub+1,efgtoa@h+1
  2479   000D44  C02F  F07B         	movff	?___flsub+2,efgtoa@h+2
  2480   000D48  C030  F07C         	movff	?___flsub+3,efgtoa@h+3
  2481   000D4C                     
  2482                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  2483   000D4C  C088  F006         	movff	efgtoa@u,___fldiv@b
  2484   000D50  C089  F007         	movff	efgtoa@u+1,___fldiv@b+1
  2485   000D54  C08A  F008         	movff	efgtoa@u+2,___fldiv@b+2
  2486   000D58  C08B  F009         	movff	efgtoa@u+3,___fldiv@b+3
  2487   000D5C  0E00               	movlw	0
  2488   000D5E  6E0A               	movwf	___fldiv@a^0,c
  2489   000D60  0E00               	movlw	0
  2490   000D62  6E0B               	movwf	(___fldiv@a+1)^0,c
  2491   000D64  0E20               	movlw	32
  2492   000D66  6E0C               	movwf	(___fldiv@a+2)^0,c
  2493   000D68  0E41               	movlw	65
  2494   000D6A  6E0D               	movwf	(___fldiv@a+3)^0,c
  2495   000D6C  EC96  F00D         	call	___fldiv	;wreg free
  2496   000D70  C006  F088         	movff	?___fldiv,efgtoa@u
  2497   000D74  C007  F089         	movff	?___fldiv+1,efgtoa@u+1
  2498   000D78  C008  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2499   000D7C  C009  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2500   000D80                     
  2501                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  2502   000D80  0100               	movlb	0	; () banked
  2503   000D82  4B77               	infsnz	efgtoa@i& (0+255),f,b
  2504   000D84  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  2505   000D86                     l5345:
  2506                           
  2507                           ; BSR set to: 0
  2508                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  2509   000D86  516D               	movf	efgtoa@m& (0+255),w,b
  2510   000D88  5D77               	subwf	efgtoa@i& (0+255),w,b
  2511   000D8A  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2512   000D8C  0A80               	xorlw	128
  2513   000D8E  6E40               	movwf	??_efgtoa^0,c
  2514   000D90  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  2515   000D92  0A80               	xorlw	128
  2516   000D94  5840               	subwfb	??_efgtoa^0,w,c
  2517   000D96  A0D8               	btfss	status,0,c
  2518   000D98  EFD0  F006         	goto	u6001
  2519   000D9C  EFD2  F006         	goto	u6000
  2520   000DA0                     u6001:
  2521   000DA0  EF48  F006         	goto	l5337
  2522   000DA4                     u6000:
  2523   000DA4                     
  2524                           ; BSR set to: 0
  2525                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  2526   000DA4  C088  F014         	movff	efgtoa@u,___flmul@b
  2527   000DA8  C089  F015         	movff	efgtoa@u+1,___flmul@b+1
  2528   000DAC  C08A  F016         	movff	efgtoa@u+2,___flmul@b+2
  2529   000DB0  C08B  F017         	movff	efgtoa@u+3,___flmul@b+3
  2530   000DB4  0E00               	movlw	0
  2531   000DB6  6E18               	movwf	___flmul@a^0,c
  2532   000DB8  0E00               	movlw	0
  2533   000DBA  6E19               	movwf	(___flmul@a+1)^0,c
  2534   000DBC  0EA0               	movlw	160
  2535   000DBE  6E1A               	movwf	(___flmul@a+2)^0,c
  2536   000DC0  0E40               	movlw	64
  2537   000DC2  6E1B               	movwf	(___flmul@a+3)^0,c
  2538   000DC4  EC81  F00B         	call	___flmul	;wreg free
  2539   000DC8  C014  F07D         	movff	?___flmul,efgtoa@l
  2540   000DCC  C015  F07E         	movff	?___flmul+1,efgtoa@l+1
  2541   000DD0  C016  F07F         	movff	?___flmul+2,efgtoa@l+2
  2542   000DD4  C017  F080         	movff	?___flmul+3,efgtoa@l+3
  2543   000DD8                     
  2544                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  2545   000DD8  C079  F02D         	movff	efgtoa@h,___flge@ff1
  2546   000DDC  C07A  F02E         	movff	efgtoa@h+1,___flge@ff1+1
  2547   000DE0  C07B  F02F         	movff	efgtoa@h+2,___flge@ff1+2
  2548   000DE4  C07C  F030         	movff	efgtoa@h+3,___flge@ff1+3
  2549   000DE8  C07D  F031         	movff	efgtoa@l,___flge@ff2
  2550   000DEC  C07E  F032         	movff	efgtoa@l+1,___flge@ff2+1
  2551   000DF0  C07F  F033         	movff	efgtoa@l+2,___flge@ff2+2
  2552   000DF4  C080  F034         	movff	efgtoa@l+3,___flge@ff2+3
  2553   000DF8  ECF9  F013         	call	___flge	;wreg free
  2554   000DFC  B0D8               	btfsc	status,0,c
  2555   000DFE  EF03  F007         	goto	u6011
  2556   000E02  EF05  F007         	goto	u6010
  2557   000E06                     u6011:
  2558   000E06  EF10  F007         	goto	l5353
  2559   000E0A                     u6010:
  2560   000E0A                     
  2561                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  2562   000E0A  0E00               	movlw	0
  2563   000E0C  0100               	movlb	0	; () banked
  2564   000E0E  6F7D               	movwf	efgtoa@l& (0+255),b
  2565   000E10  0E00               	movlw	0
  2566   000E12  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  2567   000E14  0E00               	movlw	0
  2568   000E16  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  2569   000E18  0E00               	movlw	0
  2570   000E1A  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  2571                           
  2572                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  2573   000E1C  EF39  F007         	goto	l5359
  2574   000E20                     l5353:
  2575                           
  2576                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  2577   000E20  C079  F006         	movff	efgtoa@h,___fleq@ff1
  2578   000E24  C07A  F007         	movff	efgtoa@h+1,___fleq@ff1+1
  2579   000E28  C07B  F008         	movff	efgtoa@h+2,___fleq@ff1+2
  2580   000E2C  C07C  F009         	movff	efgtoa@h+3,___fleq@ff1+3
  2581   000E30  C07D  F00A         	movff	efgtoa@l,___fleq@ff2
  2582   000E34  C07E  F00B         	movff	efgtoa@l+1,___fleq@ff2+1
  2583   000E38  C07F  F00C         	movff	efgtoa@l+2,___fleq@ff2+2
  2584   000E3C  C080  F00D         	movff	efgtoa@l+3,___fleq@ff2+3
  2585   000E40  EC3A  F016         	call	___fleq	;wreg free
  2586   000E44  A0D8               	btfss	status,0,c
  2587   000E46  EF27  F007         	goto	u6021
  2588   000E4A  EF29  F007         	goto	u6020
  2589   000E4E                     u6021:
  2590   000E4E  EF39  F007         	goto	l5359
  2591   000E52                     u6020:
  2592   000E52  0100               	movlb	0	; () banked
  2593   000E54  B16B               	btfsc	efgtoa@d& (0+255),0,b
  2594   000E56  EF2F  F007         	goto	u6031
  2595   000E5A  EF31  F007         	goto	u6030
  2596   000E5E                     u6031:
  2597   000E5E  EF39  F007         	goto	l5359
  2598   000E62                     u6030:
  2599   000E62                     
  2600                           ; BSR set to: 0
  2601                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  2602   000E62  0E00               	movlw	0
  2603   000E64  6F7D               	movwf	efgtoa@l& (0+255),b
  2604   000E66  0E00               	movlw	0
  2605   000E68  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  2606   000E6A  0E00               	movlw	0
  2607   000E6C  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  2608   000E6E  0E00               	movlw	0
  2609   000E70  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  2610   000E72                     l5359:
  2611                           
  2612                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  2613   000E72  C082  F006         	movff	efgtoa@g,___fladd@b
  2614   000E76  C083  F007         	movff	efgtoa@g+1,___fladd@b+1
  2615   000E7A  C084  F008         	movff	efgtoa@g+2,___fladd@b+2
  2616   000E7E  C085  F009         	movff	efgtoa@g+3,___fladd@b+3
  2617   000E82  C07D  F00A         	movff	efgtoa@l,___fladd@a
  2618   000E86  C07E  F00B         	movff	efgtoa@l+1,___fladd@a+1
  2619   000E8A  C07F  F00C         	movff	efgtoa@l+2,___fladd@a+2
  2620   000E8E  C080  F00D         	movff	efgtoa@l+3,___fladd@a+3
  2621   000E92  EC21  F009         	call	___fladd	;wreg free
  2622   000E96  C006  F079         	movff	?___fladd,efgtoa@h
  2623   000E9A  C007  F07A         	movff	?___fladd+1,efgtoa@h+1
  2624   000E9E  C008  F07B         	movff	?___fladd+2,efgtoa@h+2
  2625   000EA2  C009  F07C         	movff	?___fladd+3,efgtoa@h+3
  2626   000EA6                     
  2627                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  2628   000EA6  C079  F02D         	movff	efgtoa@h,___flge@ff1
  2629   000EAA  C07A  F02E         	movff	efgtoa@h+1,___flge@ff1+1
  2630   000EAE  C07B  F02F         	movff	efgtoa@h+2,___flge@ff1+2
  2631   000EB2  C07C  F030         	movff	efgtoa@h+3,___flge@ff1+3
  2632   000EB6  0E00               	movlw	0
  2633   000EB8  6E18               	movwf	___flmul@a^0,c
  2634   000EBA  0E00               	movlw	0
  2635   000EBC  6E19               	movwf	(___flmul@a+1)^0,c
  2636   000EBE  0E20               	movlw	32
  2637   000EC0  6E1A               	movwf	(___flmul@a+2)^0,c
  2638   000EC2  0E41               	movlw	65
  2639   000EC4  6E1B               	movwf	(___flmul@a+3)^0,c
  2640   000EC6  C073  F014         	movff	efgtoa@ou,___flmul@b
  2641   000ECA  C074  F015         	movff	efgtoa@ou+1,___flmul@b+1
  2642   000ECE  C075  F016         	movff	efgtoa@ou+2,___flmul@b+2
  2643   000ED2  C076  F017         	movff	efgtoa@ou+3,___flmul@b+3
  2644   000ED6  EC81  F00B         	call	___flmul	;wreg free
  2645   000EDA  C014  F031         	movff	?___flmul,___flge@ff2
  2646   000EDE  C015  F032         	movff	?___flmul+1,___flge@ff2+1
  2647   000EE2  C016  F033         	movff	?___flmul+2,___flge@ff2+2
  2648   000EE6  C017  F034         	movff	?___flmul+3,___flge@ff2+3
  2649   000EEA  ECF9  F013         	call	___flge	;wreg free
  2650   000EEE  A0D8               	btfss	status,0,c
  2651   000EF0  EF7C  F007         	goto	u6041
  2652   000EF4  EF7E  F007         	goto	u6040
  2653   000EF8                     u6041:
  2654   000EF8  EFA7  F007         	goto	l5371
  2655   000EFC                     u6040:
  2656   000EFC                     
  2657                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  2658   000EFC  0100               	movlb	0	; () banked
  2659   000EFE  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2660   000F00  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2661   000F02                     
  2662                           ; BSR set to: 0
  2663                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  2664   000F02  C073  F014         	movff	efgtoa@ou,___flmul@b
  2665   000F06  C074  F015         	movff	efgtoa@ou+1,___flmul@b+1
  2666   000F0A  C075  F016         	movff	efgtoa@ou+2,___flmul@b+2
  2667   000F0E  C076  F017         	movff	efgtoa@ou+3,___flmul@b+3
  2668   000F12  0E00               	movlw	0
  2669   000F14  6E18               	movwf	___flmul@a^0,c
  2670   000F16  0E00               	movlw	0
  2671   000F18  6E19               	movwf	(___flmul@a+1)^0,c
  2672   000F1A  0E20               	movlw	32
  2673   000F1C  6E1A               	movwf	(___flmul@a+2)^0,c
  2674   000F1E  0E41               	movlw	65
  2675   000F20  6E1B               	movwf	(___flmul@a+3)^0,c
  2676   000F22  EC81  F00B         	call	___flmul	;wreg free
  2677   000F26  C014  F073         	movff	?___flmul,efgtoa@ou
  2678   000F2A  C015  F074         	movff	?___flmul+1,efgtoa@ou+1
  2679   000F2E  C016  F075         	movff	?___flmul+2,efgtoa@ou+2
  2680   000F32  C017  F076         	movff	?___flmul+3,efgtoa@ou+3
  2681   000F36                     
  2682                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  2683   000F36  0E66               	movlw	102
  2684   000F38  0100               	movlb	0	; () banked
  2685   000F3A  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2686   000F3C  A4D8               	btfss	status,2,c
  2687   000F3E  EFA3  F007         	goto	u6051
  2688   000F42  EFA5  F007         	goto	u6050
  2689   000F46                     u6051:
  2690   000F46  EFA7  F007         	goto	l5371
  2691   000F4A                     u6050:
  2692   000F4A                     
  2693                           ; BSR set to: 0
  2694                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  2695   000F4A  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2696   000F4C  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2697   000F4E                     l5371:
  2698                           
  2699                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  2700   000F4E  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2701   000F52  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2702   000F56  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2703   000F5A  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2704   000F5E                     
  2705                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  2706   000F5E  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  2707   000F62  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  2708   000F66                     
  2709                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  2710   000F66  0E00               	movlw	0
  2711   000F68  0100               	movlb	0	; () banked
  2712   000F6A  6F68               	movwf	efgtoa@pp& (0+255),b
  2713   000F6C                     
  2714                           ; BSR set to: 0
  2715                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  2716   000F6C  0E00               	movlw	0
  2717   000F6E  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  2718   000F70  0E00               	movlw	0
  2719   000F72  6F64               	movwf	efgtoa@t& (0+255),b
  2720   000F74                     
  2721                           ; BSR set to: 0
  2722                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  2723   000F74  0E00               	movlw	0
  2724   000F76  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2725   000F78  0E00               	movlw	0
  2726   000F7A  6F77               	movwf	efgtoa@i& (0+255),b
  2727                           
  2728                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2729   000F7C  EFA5  F008         	goto	l5421
  2730   000F80                     l5381:
  2731                           
  2732                           ; BSR set to: 0
  2733                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  2734   000F80  C079  F006         	movff	efgtoa@h,___fldiv@b
  2735   000F84  C07A  F007         	movff	efgtoa@h+1,___fldiv@b+1
  2736   000F88  C07B  F008         	movff	efgtoa@h+2,___fldiv@b+2
  2737   000F8C  C07C  F009         	movff	efgtoa@h+3,___fldiv@b+3
  2738   000F90  C088  F00A         	movff	efgtoa@u,___fldiv@a
  2739   000F94  C089  F00B         	movff	efgtoa@u+1,___fldiv@a+1
  2740   000F98  C08A  F00C         	movff	efgtoa@u+2,___fldiv@a+2
  2741   000F9C  C08B  F00D         	movff	efgtoa@u+3,___fldiv@a+3
  2742   000FA0  EC96  F00D         	call	___fldiv	;wreg free
  2743   000FA4  C006  F01F         	movff	?___fldiv,floorf@x
  2744   000FA8  C007  F020         	movff	?___fldiv+1,floorf@x+1
  2745   000FAC  C008  F021         	movff	?___fldiv+2,floorf@x+2
  2746   000FB0  C009  F022         	movff	?___fldiv+3,floorf@x+3
  2747   000FB4  ECEE  F010         	call	_floorf	;wreg free
  2748   000FB8  C01F  F07D         	movff	?_floorf,efgtoa@l
  2749   000FBC  C020  F07E         	movff	?_floorf+1,efgtoa@l+1
  2750   000FC0  C021  F07F         	movff	?_floorf+2,efgtoa@l+2
  2751   000FC4  C022  F080         	movff	?_floorf+3,efgtoa@l+3
  2752                           
  2753                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  2754   000FC8  C07D  F006         	movff	efgtoa@l,___fltol@f1
  2755   000FCC  C07E  F007         	movff	efgtoa@l+1,___fltol@f1+1
  2756   000FD0  C07F  F008         	movff	efgtoa@l+2,___fltol@f1+2
  2757   000FD4  C080  F009         	movff	efgtoa@l+3,___fltol@f1+3
  2758   000FD8  EC76  F013         	call	___fltol	;wreg free
  2759   000FDC  BE07               	btfsc	(?___fltol+1)^0,7,c
  2760   000FDE  EFFC  F007         	goto	u6060
  2761   000FE2  5007               	movf	(?___fltol+1)^0,w,c
  2762   000FE4  E107               	bnz	u6061
  2763   000FE6  0E0A               	movlw	10
  2764   000FE8  5C06               	subwf	?___fltol^0,w,c
  2765   000FEA  B0D8               	btfsc	status,0,c
  2766   000FEC  EFFA  F007         	goto	u6061
  2767   000FF0  EFFC  F007         	goto	u6060
  2768   000FF4                     u6061:
  2769   000FF4  EF0C  F008         	goto	l5385
  2770   000FF8                     u6060:
  2771   000FF8  C07D  F006         	movff	efgtoa@l,___fltol@f1
  2772   000FFC  C07E  F007         	movff	efgtoa@l+1,___fltol@f1+1
  2773   001000  C07F  F008         	movff	efgtoa@l+2,___fltol@f1+2
  2774   001004  C080  F009         	movff	efgtoa@l+3,___fltol@f1+3
  2775   001008  EC76  F013         	call	___fltol	;wreg free
  2776   00100C  C006  F06B         	movff	?___fltol,efgtoa@d
  2777   001010  C007  F06C         	movff	?___fltol+1,efgtoa@d+1
  2778   001014  EF11  F008         	goto	l1245
  2779   001018                     l5385:
  2780   001018  0E00               	movlw	0
  2781   00101A  0100               	movlb	0	; () banked
  2782   00101C  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  2783   00101E  0E09               	movlw	9
  2784   001020  6F6B               	movwf	efgtoa@d& (0+255),b
  2785   001022                     l1245:
  2786                           
  2787                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  2788   001022  0100               	movlb	0	; () banked
  2789   001024  5168               	movf	efgtoa@pp& (0+255),w,b
  2790   001026  A4D8               	btfss	status,2,c
  2791   001028  EF18  F008         	goto	u6071
  2792   00102C  EF1A  F008         	goto	u6070
  2793   001030                     u6071:
  2794   001030  EF42  F008         	goto	l5405
  2795   001034                     u6070:
  2796   001034                     
  2797                           ; BSR set to: 0
  2798   001034  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  2799   001036  EF21  F008         	goto	u6080
  2800   00103A  EF1F  F008         	goto	u6081
  2801   00103E                     u6081:
  2802   00103E  EF42  F008         	goto	l5405
  2803   001042                     u6080:
  2804   001042                     
  2805                           ; BSR set to: 0
  2806                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  2807   001042  0E30               	movlw	low _dbuf
  2808   001044  2586               	addwf	efgtoa@n& (0+255),w,b
  2809   001046  6ED9               	movwf	fsr2l,c
  2810   001048  0E01               	movlw	high _dbuf
  2811   00104A  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2812   00104C  6EDA               	movwf	fsr2h,c
  2813   00104E  0E2E               	movlw	46
  2814   001050  6EDF               	movwf	indf2,c
  2815   001052                     
  2816                           ; BSR set to: 0
  2817   001052  4B86               	infsnz	efgtoa@n& (0+255),f,b
  2818   001054  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  2819   001056                     
  2820                           ; BSR set to: 0
  2821                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  2822   001056  0771               	decf	efgtoa@w& (0+255),f,b
  2823   001058  A0D8               	btfss	status,0,c
  2824   00105A  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2825   00105C                     
  2826                           ; BSR set to: 0
  2827                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  2828   00105C  0E01               	movlw	1
  2829   00105E  6F68               	movwf	efgtoa@pp& (0+255),b
  2830   001060  EF42  F008         	goto	l5405
  2831   001064                     l5397:
  2832                           
  2833                           ; BSR set to: 0
  2834                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  2835   001064  0E30               	movlw	low _dbuf
  2836   001066  2586               	addwf	efgtoa@n& (0+255),w,b
  2837   001068  6ED9               	movwf	fsr2l,c
  2838   00106A  0E01               	movlw	high _dbuf
  2839   00106C  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2840   00106E  6EDA               	movwf	fsr2h,c
  2841   001070  0E30               	movlw	48
  2842   001072  6EDF               	movwf	indf2,c
  2843   001074                     
  2844                           ; BSR set to: 0
  2845   001074  4B86               	infsnz	efgtoa@n& (0+255),f,b
  2846   001076  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  2847   001078                     
  2848                           ; BSR set to: 0
  2849                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  2850   001078  0771               	decf	efgtoa@w& (0+255),f,b
  2851   00107A  A0D8               	btfss	status,0,c
  2852   00107C  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2853   00107E                     
  2854                           ; BSR set to: 0
  2855                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  2856   00107E  0764               	decf	efgtoa@t& (0+255),f,b
  2857   001080  A0D8               	btfss	status,0,c
  2858   001082  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  2859   001084                     l5405:
  2860                           
  2861                           ; BSR set to: 0
  2862                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  2863   001084  5164               	movf	efgtoa@t& (0+255),w,b
  2864   001086  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  2865   001088  A4D8               	btfss	status,2,c
  2866   00108A  EF49  F008         	goto	u6091
  2867   00108E  EF4B  F008         	goto	u6090
  2868   001092                     u6091:
  2869   001092  EF32  F008         	goto	l5397
  2870   001096                     u6090:
  2871   001096                     
  2872                           ; BSR set to: 0
  2873                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  2874   001096  0E30               	movlw	low _dbuf
  2875   001098  2586               	addwf	efgtoa@n& (0+255),w,b
  2876   00109A  6ED9               	movwf	fsr2l,c
  2877   00109C  0E01               	movlw	high _dbuf
  2878   00109E  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2879   0010A0  6EDA               	movwf	fsr2h,c
  2880   0010A2  516B               	movf	efgtoa@d& (0+255),w,b
  2881   0010A4  0F30               	addlw	48
  2882   0010A6  6EDF               	movwf	indf2,c
  2883   0010A8                     
  2884                           ; BSR set to: 0
  2885   0010A8  4B86               	infsnz	efgtoa@n& (0+255),f,b
  2886   0010AA  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  2887   0010AC                     
  2888                           ; BSR set to: 0
  2889                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  2890   0010AC  0771               	decf	efgtoa@w& (0+255),f,b
  2891   0010AE  A0D8               	btfss	status,0,c
  2892   0010B0  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2893   0010B2                     
  2894                           ; BSR set to: 0
  2895                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  2896   0010B2  C079  F02D         	movff	efgtoa@h,___flsub@b
  2897   0010B6  C07A  F02E         	movff	efgtoa@h+1,___flsub@b+1
  2898   0010BA  C07B  F02F         	movff	efgtoa@h+2,___flsub@b+2
  2899   0010BE  C07C  F030         	movff	efgtoa@h+3,___flsub@b+3
  2900   0010C2  C07D  F018         	movff	efgtoa@l,___flmul@a
  2901   0010C6  C07E  F019         	movff	efgtoa@l+1,___flmul@a+1
  2902   0010CA  C07F  F01A         	movff	efgtoa@l+2,___flmul@a+2
  2903   0010CE  C080  F01B         	movff	efgtoa@l+3,___flmul@a+3
  2904   0010D2  C088  F014         	movff	efgtoa@u,___flmul@b
  2905   0010D6  C089  F015         	movff	efgtoa@u+1,___flmul@b+1
  2906   0010DA  C08A  F016         	movff	efgtoa@u+2,___flmul@b+2
  2907   0010DE  C08B  F017         	movff	efgtoa@u+3,___flmul@b+3
  2908   0010E2  EC81  F00B         	call	___flmul	;wreg free
  2909   0010E6  C014  F031         	movff	?___flmul,___flsub@a
  2910   0010EA  C015  F032         	movff	?___flmul+1,___flsub@a+1
  2911   0010EE  C016  F033         	movff	?___flmul+2,___flsub@a+2
  2912   0010F2  C017  F034         	movff	?___flmul+3,___flsub@a+3
  2913   0010F6  EC2C  F018         	call	___flsub	;wreg free
  2914   0010FA  C02D  F079         	movff	?___flsub,efgtoa@h
  2915   0010FE  C02E  F07A         	movff	?___flsub+1,efgtoa@h+1
  2916   001102  C02F  F07B         	movff	?___flsub+2,efgtoa@h+2
  2917   001106  C030  F07C         	movff	?___flsub+3,efgtoa@h+3
  2918   00110A                     
  2919                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  2920   00110A  C088  F006         	movff	efgtoa@u,___fldiv@b
  2921   00110E  C089  F007         	movff	efgtoa@u+1,___fldiv@b+1
  2922   001112  C08A  F008         	movff	efgtoa@u+2,___fldiv@b+2
  2923   001116  C08B  F009         	movff	efgtoa@u+3,___fldiv@b+3
  2924   00111A  0E00               	movlw	0
  2925   00111C  6E0A               	movwf	___fldiv@a^0,c
  2926   00111E  0E00               	movlw	0
  2927   001120  6E0B               	movwf	(___fldiv@a+1)^0,c
  2928   001122  0E20               	movlw	32
  2929   001124  6E0C               	movwf	(___fldiv@a+2)^0,c
  2930   001126  0E41               	movlw	65
  2931   001128  6E0D               	movwf	(___fldiv@a+3)^0,c
  2932   00112A  EC96  F00D         	call	___fldiv	;wreg free
  2933   00112E  C006  F088         	movff	?___fldiv,efgtoa@u
  2934   001132  C007  F089         	movff	?___fldiv+1,efgtoa@u+1
  2935   001136  C008  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2936   00113A  C009  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2937   00113E                     
  2938                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  2939   00113E  0100               	movlb	0	; () banked
  2940   001140  0760               	decf	efgtoa@ne& (0+255),f,b
  2941   001142  A0D8               	btfss	status,0,c
  2942   001144  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  2943   001146                     
  2944                           ; BSR set to: 0
  2945                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  2946   001146  4B77               	infsnz	efgtoa@i& (0+255),f,b
  2947   001148  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  2948   00114A                     l5421:
  2949                           
  2950                           ; BSR set to: 0
  2951                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2952   00114A  516D               	movf	efgtoa@m& (0+255),w,b
  2953   00114C  5D77               	subwf	efgtoa@i& (0+255),w,b
  2954   00114E  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2955   001150  0A80               	xorlw	128
  2956   001152  6E40               	movwf	??_efgtoa^0,c
  2957   001154  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  2958   001156  0A80               	xorlw	128
  2959   001158  5840               	subwfb	??_efgtoa^0,w,c
  2960   00115A  B0D8               	btfsc	status,0,c
  2961   00115C  EFB2  F008         	goto	u6101
  2962   001160  EFB4  F008         	goto	u6100
  2963   001164                     u6101:
  2964   001164  EFC2  F008         	goto	l5425
  2965   001168                     u6100:
  2966   001168                     
  2967                           ; BSR set to: 0
  2968   001168  BF87               	btfsc	(efgtoa@n+1)& (0+255),7,b
  2969   00116A  EFC0  F008         	goto	u6111
  2970   00116E  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  2971   001170  E109               	bnz	u6110
  2972   001172  0E4B               	movlw	75
  2973   001174  5D86               	subwf	efgtoa@n& (0+255),w,b
  2974   001176  A0D8               	btfss	status,0,c
  2975   001178  EFC0  F008         	goto	u6111
  2976   00117C  EFC2  F008         	goto	u6110
  2977   001180                     u6111:
  2978   001180  EFC0  F007         	goto	l5381
  2979   001184                     u6110:
  2980   001184                     l5425:
  2981                           
  2982                           ; BSR set to: 0
  2983                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  2984   001184  0E00               	movlw	0
  2985   001186  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2986   001188  0E4F               	movlw	79
  2987   00118A  6F77               	movwf	efgtoa@i& (0+255),b
  2988   00118C                     
  2989                           ; BSR set to: 0
  2990                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  2991   00118C  0E30               	movlw	low _dbuf
  2992   00118E  2577               	addwf	efgtoa@i& (0+255),w,b
  2993   001190  6ED9               	movwf	fsr2l,c
  2994   001192  0E01               	movlw	high _dbuf
  2995   001194  2178               	addwfc	(efgtoa@i+1)& (0+255),w,b
  2996   001196  6EDA               	movwf	fsr2h,c
  2997   001198  0E00               	movlw	0
  2998   00119A  6EDF               	movwf	indf2,c
  2999   00119C                     
  3000                           ; BSR set to: 0
  3001                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  3002   00119C  0E30               	movlw	low _dbuf
  3003   00119E  6E40               	movwf	??_efgtoa^0,c
  3004   0011A0  0E01               	movlw	high _dbuf
  3005   0011A2  6E41               	movwf	(??_efgtoa+1)^0,c
  3006   0011A4  5186               	movf	efgtoa@n& (0+255),w,b
  3007   0011A6  5E40               	subwf	??_efgtoa^0,f,c
  3008   0011A8  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3009   0011AA  5A41               	subwfb	(??_efgtoa+1)^0,f,c
  3010   0011AC  5177               	movf	efgtoa@i& (0+255),w,b
  3011   0011AE  2440               	addwf	??_efgtoa^0,w,c
  3012   0011B0  6E06               	movwf	memcpy@d1^0,c
  3013   0011B2  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3014   0011B4  2041               	addwfc	(??_efgtoa+1)^0,w,c
  3015   0011B6  6E07               	movwf	(memcpy@d1+1)^0,c
  3016   0011B8  0E30               	movlw	low _dbuf
  3017   0011BA  6E08               	movwf	memcpy@s1^0,c
  3018   0011BC  0E01               	movlw	high _dbuf
  3019   0011BE  6E09               	movwf	(memcpy@s1+1)^0,c
  3020   0011C0  C086  F00A         	movff	efgtoa@n,memcpy@n
  3021   0011C4  C087  F00B         	movff	efgtoa@n+1,memcpy@n+1
  3022   0011C8  EC04  F018         	call	_memcpy	;wreg free
  3023   0011CC                     
  3024                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  3025   0011CC  0100               	movlb	0	; () banked
  3026   0011CE  5186               	movf	efgtoa@n& (0+255),w,b
  3027   0011D0  5D77               	subwf	efgtoa@i& (0+255),w,b
  3028   0011D2  6F86               	movwf	efgtoa@n& (0+255),b
  3029   0011D4  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3030   0011D6  5978               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3031   0011D8  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  3032   0011DA                     
  3033                           ; BSR set to: 0
  3034                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  3035   0011DA  5181               	movf	efgtoa@sign& (0+255),w,b
  3036   0011DC  A4D8               	btfss	status,2,c
  3037   0011DE  EFF3  F008         	goto	u6121
  3038   0011E2  EFF6  F008         	goto	u6120
  3039   0011E6                     u6121:
  3040   0011E6  0E01               	movlw	1
  3041   0011E8  EFF7  F008         	goto	u6130
  3042   0011EC                     u6120:
  3043   0011EC  0E00               	movlw	0
  3044   0011EE                     u6130:
  3045   0011EE  6F77               	movwf	efgtoa@i& (0+255),b
  3046   0011F0  6B78               	clrf	(efgtoa@i+1)& (0+255),b
  3047   0011F2                     
  3048                           ; BSR set to: 0
  3049                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  3050   0011F2  5181               	movf	efgtoa@sign& (0+255),w,b
  3051   0011F4  B4D8               	btfsc	status,2,c
  3052   0011F6  EFFF  F008         	goto	u6141
  3053   0011FA  EF01  F009         	goto	u6140
  3054   0011FE                     u6141:
  3055   0011FE  EF0C  F009         	goto	l5439
  3056   001202                     u6140:
  3057   001202                     
  3058                           ; BSR set to: 0
  3059                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  3060   001202  0786               	decf	efgtoa@n& (0+255),f,b
  3061   001204  A0D8               	btfss	status,0,c
  3062   001206  0787               	decf	(efgtoa@n+1)& (0+255),f,b
  3063   001208  0E30               	movlw	low _dbuf
  3064   00120A  2586               	addwf	efgtoa@n& (0+255),w,b
  3065   00120C  6ED9               	movwf	fsr2l,c
  3066   00120E  0E01               	movlw	high _dbuf
  3067   001210  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3068   001212  6EDA               	movwf	fsr2h,c
  3069   001214  C081  FFDF         	movff	efgtoa@sign,indf2
  3070   001218                     l5439:
  3071                           
  3072                           ; BSR set to: 0
  3073                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  3074   001218  5177               	movf	efgtoa@i& (0+255),w,b
  3075   00121A  5F71               	subwf	efgtoa@w& (0+255),f,b
  3076   00121C  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3077   00121E  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3078   001220                     
  3079                           ; BSR set to: 0
  3080                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3081   001220  C039  F018         	movff	efgtoa@fp,pad@fp
  3082   001224  C03A  F019         	movff	efgtoa@fp+1,pad@fp+1
  3083   001228  0E30               	movlw	low _dbuf
  3084   00122A  2586               	addwf	efgtoa@n& (0+255),w,b
  3085   00122C  6E1A               	movwf	pad@buf^0,c
  3086   00122E  0E01               	movlw	high _dbuf
  3087   001230  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3088   001232  6E1B               	movwf	(pad@buf+1)^0,c
  3089   001234  C071  F01C         	movff	efgtoa@w,pad@p
  3090   001238  C072  F01D         	movff	efgtoa@w+1,pad@p+1
  3091   00123C  ECDA  F016         	call	_pad	;wreg free
  3092   001240                     l1212:
  3093   001240  0012               	return		;funcret
  3094   001242                     __end_of_efgtoa:
  3095                           	callstack 0
  3096                           
  3097 ;; *************** function _strcpy *****************
  3098 ;; Defined at:
  3099 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  3100 ;; Parameters:    Size  Location     Type
  3101 ;;  dest            2    5[COMRAM] PTR unsigned char 
  3102 ;;		 -> dbuf(80), 
  3103 ;;  src             2    7[COMRAM] PTR const unsigned char 
  3104 ;;		 -> STR_5(4), STR_2(4), 
  3105 ;; Auto vars:     Size  Location     Type
  3106 ;;  d               2   11[COMRAM] PTR unsigned char 
  3107 ;;		 -> dbuf(80), 
  3108 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3109 ;;		 -> STR_5(4), STR_2(4), 
  3110 ;; Return value:  Size  Location     Type
  3111 ;;                  2    5[COMRAM] PTR unsigned char 
  3112 ;; Registers used:
  3113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/0
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3119 ;;      Params:         4       0       0       0       0       0       0       0       0
  3120 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3121 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3122 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3123 ;;Total ram usage:        8 bytes
  3124 ;; Hardware stack levels used: 1
  3125 ;; Hardware stack levels required when called: 4
  3126 ;; This function calls:
  3127 ;;		Nothing
  3128 ;; This function is called by:
  3129 ;;		_efgtoa
  3130 ;; This function uses a non-reentrant model
  3131 ;;
  3132                           
  3133                           	psect	text5
  3134   00316A                     __ptext5:
  3135                           	callstack 0
  3136   00316A                     _strcpy:
  3137                           	callstack 22
  3138   00316A  C008  F00A         	movff	strcpy@src,strcpy@s
  3139   00316E  C009  F00B         	movff	strcpy@src+1,strcpy@s+1
  3140   003172  C006  F00C         	movff	strcpy@dest,strcpy@d
  3141   003176  C007  F00D         	movff	strcpy@dest+1,strcpy@d+1
  3142   00317A                     l5161:
  3143   00317A  C00A  FFF6         	movff	strcpy@s,tblptrl
  3144   00317E  C00B  FFF7         	movff	strcpy@s+1,tblptrh
  3145   003182  4A0A               	infsnz	strcpy@s^0,f,c
  3146   003184  2A0B               	incf	(strcpy@s+1)^0,f,c
  3147   003186                     	if	0	;tblptru may be non-zero
  3148   003186                     	endif
  3149   003186                     	if	0	;tblptru may be non-zero
  3150   003186                     	endif
  3151   003186  C00C  FFD9         	movff	strcpy@d,fsr2l
  3152   00318A  C00D  FFDA         	movff	strcpy@d+1,fsr2h
  3153   00318E  4A0C               	infsnz	strcpy@d^0,f,c
  3154   003190  2A0D               	incf	(strcpy@d+1)^0,f,c
  3155   003192  0008               	tblrd		*
  3156   003194  CFF5 FFDF          	movff	tablat,indf2
  3157   003198  50DF               	movf	indf2,w,c
  3158   00319A  A4D8               	btfss	status,2,c
  3159   00319C  EFD2  F018         	goto	u5661
  3160   0031A0  EFD4  F018         	goto	u5660
  3161   0031A4                     u5661:
  3162   0031A4  EFBD  F018         	goto	l5161
  3163   0031A8                     u5660:
  3164   0031A8  0012               	return		;funcret
  3165   0031AA                     __end_of_strcpy:
  3166                           	callstack 0
  3167                           
  3168 ;; *************** function _pad *****************
  3169 ;; Defined at:
  3170 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3171 ;; Parameters:    Size  Location     Type
  3172 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  3173 ;;		 -> NULL(0), 
  3174 ;;  buf             2   25[COMRAM] PTR unsigned char 
  3175 ;;		 -> dbuf(80), 
  3176 ;;  p               2   27[COMRAM] int 
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;  w               2   32[COMRAM] int 
  3179 ;;  i               2   30[COMRAM] int 
  3180 ;; Return value:  Size  Location     Type
  3181 ;;                  1    wreg      void 
  3182 ;; Registers used:
  3183 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3184 ;; Tracked objects:
  3185 ;;		On entry : 0/0
  3186 ;;		On exit  : 0/0
  3187 ;;		Unchanged: 0/0
  3188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3189 ;;      Params:         6       0       0       0       0       0       0       0       0
  3190 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3191 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3192 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3193 ;;Total ram usage:       11 bytes
  3194 ;; Hardware stack levels used: 1
  3195 ;; Hardware stack levels required when called: 8
  3196 ;; This function calls:
  3197 ;;		_fputc
  3198 ;;		_fputs
  3199 ;; This function is called by:
  3200 ;;		_efgtoa
  3201 ;; This function uses a non-reentrant model
  3202 ;;
  3203                           
  3204                           	psect	text6
  3205   002DB4                     __ptext6:
  3206                           	callstack 0
  3207   002DB4                     _pad:
  3208                           	callstack 18
  3209   002DB4                     
  3210                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  3211   002DB4  BE1D               	btfsc	(pad@p+1)^0,7,c
  3212   002DB6  EFDF  F016         	goto	u5571
  3213   002DBA  EFE1  F016         	goto	u5570
  3214   002DBE                     u5571:
  3215   002DBE  EFE7  F016         	goto	l5127
  3216   002DC2                     u5570:
  3217   002DC2  C01C  F021         	movff	pad@p,pad@w
  3218   002DC6  C01D  F022         	movff	pad@p+1,pad@w+1
  3219   002DCA  EFEB  F016         	goto	l1197
  3220   002DCE                     l5127:
  3221   002DCE  0E00               	movlw	0
  3222   002DD0  6E22               	movwf	(pad@w+1)^0,c
  3223   002DD2  0E00               	movlw	0
  3224   002DD4  6E21               	movwf	pad@w^0,c
  3225   002DD6                     l1197:
  3226                           
  3227                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  3228   002DD6  0E00               	movlw	0
  3229   002DD8  6E20               	movwf	(pad@i+1)^0,c
  3230   002DDA  0E00               	movlw	0
  3231   002DDC  6E1F               	movwf	pad@i^0,c
  3232                           
  3233                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3234   002DDE  EFFD  F016         	goto	l5133
  3235   002DE2                     l5129:
  3236                           
  3237                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  3238   002DE2  0E00               	movlw	0
  3239   002DE4  6E09               	movwf	(fputc@c+1)^0,c
  3240   002DE6  0E20               	movlw	32
  3241   002DE8  6E08               	movwf	fputc@c^0,c
  3242   002DEA  C018  F00A         	movff	pad@fp,fputc@fp
  3243   002DEE  C019  F00B         	movff	pad@fp+1,fputc@fp+1
  3244   002DF2  EC8F  F016         	call	_fputc	;wreg free
  3245   002DF6                     
  3246                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  3247   002DF6  4A1F               	infsnz	pad@i^0,f,c
  3248   002DF8  2A20               	incf	(pad@i+1)^0,f,c
  3249   002DFA                     l5133:
  3250                           
  3251                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3252   002DFA  5021               	movf	pad@w^0,w,c
  3253   002DFC  5C1F               	subwf	pad@i^0,w,c
  3254   002DFE  5020               	movf	(pad@i+1)^0,w,c
  3255   002E00  0A80               	xorlw	128
  3256   002E02  6E1E               	movwf	??_pad^0,c
  3257   002E04  5022               	movf	(pad@w+1)^0,w,c
  3258   002E06  0A80               	xorlw	128
  3259   002E08  581E               	subwfb	??_pad^0,w,c
  3260   002E0A  A0D8               	btfss	status,0,c
  3261   002E0C  EF0A  F017         	goto	u5581
  3262   002E10  EF0C  F017         	goto	u5580
  3263   002E14                     u5581:
  3264   002E14  EFF1  F016         	goto	l5129
  3265   002E18                     u5580:
  3266   002E18                     
  3267                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  3268   002E18  C01A  F011         	movff	pad@buf,fputs@s
  3269   002E1C  C01B  F012         	movff	pad@buf+1,fputs@s+1
  3270   002E20  C018  F013         	movff	pad@fp,fputs@fp
  3271   002E24  C019  F014         	movff	pad@fp+1,fputs@fp+1
  3272   002E28  EC72  F018         	call	_fputs	;wreg free
  3273   002E2C  0012               	return		;funcret
  3274   002E2E                     __end_of_pad:
  3275                           	callstack 0
  3276                           
  3277 ;; *************** function _fputs *****************
  3278 ;; Defined at:
  3279 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  3280 ;; Parameters:    Size  Location     Type
  3281 ;;  s               2   16[COMRAM] PTR const unsigned char 
  3282 ;;		 -> dbuf(80), 
  3283 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  3284 ;;		 -> NULL(0), 
  3285 ;; Auto vars:     Size  Location     Type
  3286 ;;  i               2   21[COMRAM] int 
  3287 ;;  c               1   20[COMRAM] unsigned char 
  3288 ;; Return value:  Size  Location     Type
  3289 ;;                  2   16[COMRAM] int 
  3290 ;; Registers used:
  3291 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3292 ;; Tracked objects:
  3293 ;;		On entry : 0/0
  3294 ;;		On exit  : 0/0
  3295 ;;		Unchanged: 0/0
  3296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3297 ;;      Params:         4       0       0       0       0       0       0       0       0
  3298 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3299 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3300 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3301 ;;Total ram usage:        7 bytes
  3302 ;; Hardware stack levels used: 1
  3303 ;; Hardware stack levels required when called: 7
  3304 ;; This function calls:
  3305 ;;		_fputc
  3306 ;; This function is called by:
  3307 ;;		_pad
  3308 ;; This function uses a non-reentrant model
  3309 ;;
  3310                           
  3311                           	psect	text7
  3312   0030E4                     __ptext7:
  3313                           	callstack 0
  3314   0030E4                     _fputs:
  3315                           	callstack 18
  3316   0030E4  0E00               	movlw	0
  3317   0030E6  6E17               	movwf	(fputs@i+1)^0,c
  3318   0030E8  0E00               	movlw	0
  3319   0030EA  6E16               	movwf	fputs@i^0,c
  3320   0030EC  EF83  F018         	goto	l4751
  3321   0030F0                     l4747:
  3322   0030F0  C015  F008         	movff	fputs@c,fputc@c
  3323   0030F4  6A09               	clrf	(fputc@c+1)^0,c
  3324   0030F6  C013  F00A         	movff	fputs@fp,fputc@fp
  3325   0030FA  C014  F00B         	movff	fputs@fp+1,fputc@fp+1
  3326   0030FE  EC8F  F016         	call	_fputc	;wreg free
  3327   003102  4A16               	infsnz	fputs@i^0,f,c
  3328   003104  2A17               	incf	(fputs@i+1)^0,f,c
  3329   003106                     l4751:
  3330   003106  5016               	movf	fputs@i^0,w,c
  3331   003108  2411               	addwf	fputs@s^0,w,c
  3332   00310A  6ED9               	movwf	fsr2l,c
  3333   00310C  5017               	movf	(fputs@i+1)^0,w,c
  3334   00310E  2012               	addwfc	(fputs@s+1)^0,w,c
  3335   003110  6EDA               	movwf	fsr2h,c
  3336   003112  50DF               	movf	indf2,w,c
  3337   003114  6E15               	movwf	fputs@c^0,c
  3338   003116  5015               	movf	fputs@c^0,w,c
  3339   003118  A4D8               	btfss	status,2,c
  3340   00311A  EF91  F018         	goto	u4981
  3341   00311E  EF93  F018         	goto	u4980
  3342   003122                     u4981:
  3343   003122  EF78  F018         	goto	l4747
  3344   003126                     u4980:
  3345   003126  0012               	return		;funcret
  3346   003128                     __end_of_fputs:
  3347                           	callstack 0
  3348                           
  3349 ;; *************** function _fputc *****************
  3350 ;; Defined at:
  3351 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;  c               2    7[COMRAM] int 
  3354 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  3355 ;;		 -> NULL(0), 
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;		None
  3358 ;; Return value:  Size  Location     Type
  3359 ;;                  2    7[COMRAM] int 
  3360 ;; Registers used:
  3361 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3367 ;;      Params:         4       0       0       0       0       0       0       0       0
  3368 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3369 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3370 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3371 ;;Total ram usage:        9 bytes
  3372 ;; Hardware stack levels used: 1
  3373 ;; Hardware stack levels required when called: 6
  3374 ;; This function calls:
  3375 ;;		_putch
  3376 ;; This function is called by:
  3377 ;;		_pad
  3378 ;;		_vfpfcnvrt
  3379 ;;		_fputs
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383                           	psect	text8
  3384   002D1E                     __ptext8:
  3385                           	callstack 0
  3386   002D1E                     _fputc:
  3387                           	callstack 21
  3388   002D1E  500A               	movf	fputc@fp^0,w,c
  3389   002D20  100B               	iorwf	(fputc@fp+1)^0,w,c
  3390   002D22  B4D8               	btfsc	status,2,c
  3391   002D24  EF96  F016         	goto	u4551
  3392   002D28  EF98  F016         	goto	u4550
  3393   002D2C                     u4551:
  3394   002D2C  EFA1  F016         	goto	l4533
  3395   002D30                     u4550:
  3396   002D30  500A               	movf	fputc@fp^0,w,c
  3397   002D32  100B               	iorwf	(fputc@fp+1)^0,w,c
  3398   002D34  A4D8               	btfss	status,2,c
  3399   002D36  EF9F  F016         	goto	u4561
  3400   002D3A  EFA1  F016         	goto	u4560
  3401   002D3E                     u4561:
  3402   002D3E  EFA6  F016         	goto	l4535
  3403   002D42                     u4560:
  3404   002D42                     l4533:
  3405   002D42  5008               	movf	fputc@c^0,w,c
  3406   002D44  EC99  F01A         	call	_putch
  3407   002D48  EFD9  F016         	goto	l1375
  3408   002D4C                     l4535:
  3409   002D4C  EE20 F009          	lfsr	2,9
  3410   002D50  500A               	movf	fputc@fp^0,w,c
  3411   002D52  26D9               	addwf	fsr2l,f,c
  3412   002D54  500B               	movf	(fputc@fp+1)^0,w,c
  3413   002D56  22DA               	addwfc	fsr2h,f,c
  3414   002D58  50DE               	movf	postinc2,w,c
  3415   002D5A  10DE               	iorwf	postinc2,w,c
  3416   002D5C  B4D8               	btfsc	status,2,c
  3417   002D5E  EFB3  F016         	goto	u4571
  3418   002D62  EFB5  F016         	goto	u4570
  3419   002D66                     u4571:
  3420   002D66  EFD0  F016         	goto	l4539
  3421   002D6A                     u4570:
  3422   002D6A  EE20 F009          	lfsr	2,9
  3423   002D6E  500A               	movf	fputc@fp^0,w,c
  3424   002D70  26D9               	addwf	fsr2l,f,c
  3425   002D72  500B               	movf	(fputc@fp+1)^0,w,c
  3426   002D74  22DA               	addwfc	fsr2h,f,c
  3427   002D76  EE10 F003          	lfsr	1,3
  3428   002D7A  500A               	movf	fputc@fp^0,w,c
  3429   002D7C  26E1               	addwf	fsr1l,f,c
  3430   002D7E  500B               	movf	(fputc@fp+1)^0,w,c
  3431   002D80  22E2               	addwfc	fsr1h,f,c
  3432   002D82  50DE               	movf	postinc2,w,c
  3433   002D84  5CE6               	subwf	postinc1,w,c
  3434   002D86  50E6               	movf	postinc1,w,c
  3435   002D88  0A80               	xorlw	128
  3436   002D8A  6E10               	movwf	(??_fputc+4)^0,c
  3437   002D8C  50DE               	movf	postinc2,w,c
  3438   002D8E  0A80               	xorlw	128
  3439   002D90  5810               	subwfb	(??_fputc+4)^0,w,c
  3440   002D92  B0D8               	btfsc	status,0,c
  3441   002D94  EFCE  F016         	goto	u4581
  3442   002D98  EFD0  F016         	goto	u4580
  3443   002D9C                     u4581:
  3444   002D9C  EFD9  F016         	goto	l1375
  3445   002DA0                     u4580:
  3446   002DA0                     l4539:
  3447   002DA0  EE20 F003          	lfsr	2,3
  3448   002DA4  500A               	movf	fputc@fp^0,w,c
  3449   002DA6  26D9               	addwf	fsr2l,f,c
  3450   002DA8  500B               	movf	(fputc@fp+1)^0,w,c
  3451   002DAA  22DA               	addwfc	fsr2h,f,c
  3452   002DAC  2ADE               	incf	postinc2,f,c
  3453   002DAE  0E00               	movlw	0
  3454   002DB0  22DD               	addwfc	postdec2,f,c
  3455   002DB2                     l1375:
  3456   002DB2  0012               	return		;funcret
  3457   002DB4                     __end_of_fputc:
  3458                           	callstack 0
  3459                           
  3460 ;; *************** function _putch *****************
  3461 ;; Defined at:
  3462 ;;		line 201 in file "mcc_generated_files/eusart1.c"
  3463 ;; Parameters:    Size  Location     Type
  3464 ;;  txData          1    wreg     unsigned char 
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;  txData          1    6[COMRAM] unsigned char 
  3467 ;; Return value:  Size  Location     Type
  3468 ;;                  1    wreg      void 
  3469 ;; Registers used:
  3470 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3471 ;; Tracked objects:
  3472 ;;		On entry : 0/0
  3473 ;;		On exit  : 0/0
  3474 ;;		Unchanged: 0/0
  3475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3476 ;;      Params:         0       0       0       0       0       0       0       0       0
  3477 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3478 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3479 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3480 ;;Total ram usage:        1 bytes
  3481 ;; Hardware stack levels used: 1
  3482 ;; Hardware stack levels required when called: 5
  3483 ;; This function calls:
  3484 ;;		_EUSART1_Write
  3485 ;; This function is called by:
  3486 ;;		_fputc
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489                           
  3490                           	psect	text9
  3491   003532                     __ptext9:
  3492                           	callstack 0
  3493   003532                     _putch:
  3494                           	callstack 21
  3495                           
  3496                           ;incstack = 0
  3497                           ;putch@txData stored from wreg
  3498   003532  6E07               	movwf	putch@txData^0,c
  3499   003534                     
  3500                           ;mcc_generated_files/eusart1.c: 201: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 202: {;mcc_generated_files/eusart1.c: 203:     EUSART1_Write(txData);
  3501   003534  5007               	movf	putch@txData^0,w,c
  3502   003536  ECB0  F017         	call	_EUSART1_Write
  3503   00353A  0012               	return		;funcret
  3504   00353C                     __end_of_putch:
  3505                           	callstack 0
  3506                           
  3507 ;; *************** function _EUSART1_Write *****************
  3508 ;; Defined at:
  3509 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  3510 ;; Parameters:    Size  Location     Type
  3511 ;;  txData          1    wreg     unsigned char 
  3512 ;; Auto vars:     Size  Location     Type
  3513 ;;  txData          1    5[COMRAM] unsigned char 
  3514 ;; Return value:  Size  Location     Type
  3515 ;;                  1    wreg      void 
  3516 ;; Registers used:
  3517 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3518 ;; Tracked objects:
  3519 ;;		On entry : 0/0
  3520 ;;		On exit  : 0/0
  3521 ;;		Unchanged: 0/0
  3522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3523 ;;      Params:         0       0       0       0       0       0       0       0       0
  3524 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3525 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3526 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3527 ;;Total ram usage:        1 bytes
  3528 ;; Hardware stack levels used: 1
  3529 ;; Hardware stack levels required when called: 4
  3530 ;; This function calls:
  3531 ;;		Nothing
  3532 ;; This function is called by:
  3533 ;;		_putch
  3534 ;; This function uses a non-reentrant model
  3535 ;;
  3536                           
  3537                           	psect	text10
  3538   002F60                     __ptext10:
  3539                           	callstack 0
  3540   002F60                     _EUSART1_Write:
  3541                           	callstack 21
  3542                           
  3543                           ;incstack = 0
  3544                           ;EUSART1_Write@txData stored from wreg
  3545   002F60  6E06               	movwf	EUSART1_Write@txData^0,c
  3546   002F62                     l4511:
  3547                           
  3548                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
  3549   002F62  5058               	movf	_eusart1TxBufferRemaining^0,w,c	;volatile
  3550   002F64  B4D8               	btfsc	status,2,c
  3551   002F66  EFB7  F017         	goto	u4521
  3552   002F6A  EFB9  F017         	goto	u4520
  3553   002F6E                     u4521:
  3554   002F6E  EFB1  F017         	goto	l4511
  3555   002F72                     u4520:
  3556   002F72                     
  3557                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE1bits.TX1IE)
  3558   002F72  B89D               	btfsc	157,4,c	;volatile
  3559   002F74  EFBE  F017         	goto	u4531
  3560   002F78  EFC0  F017         	goto	u4530
  3561   002F7C                     u4531:
  3562   002F7C  EFC4  F017         	goto	l276
  3563   002F80                     u4530:
  3564   002F80                     
  3565                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          XREG1 = txData;
  3566   002F80  C006  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  3567                           
  3568                           ;mcc_generated_files/eusart1.c: 182:     }
  3569   002F84  EFD9  F017         	goto	l4525
  3570   002F88                     l276:
  3571                           
  3572                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE1bits.TX1IE = 0;
  3573   002F88  989D               	bcf	157,4,c	;volatile
  3574   002F8A                     
  3575                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
  3576   002F8A  0E20               	movlw	low _eusart1TxBuffer
  3577   002F8C  2455               	addwf	_eusart1TxHead^0,w,c	;volatile
  3578   002F8E  6ED9               	movwf	fsr2l,c
  3579   002F90  6ADA               	clrf	fsr2h,c
  3580   002F92  0E01               	movlw	high _eusart1TxBuffer
  3581   002F94  22DA               	addwfc	fsr2h,f,c
  3582   002F96  C006  FFDF         	movff	EUSART1_Write@txData,indf2
  3583   002F9A  2A55               	incf	_eusart1TxHead^0,f,c	;volatile
  3584   002F9C                     
  3585                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  3586   002F9C  0E0F               	movlw	15
  3587   002F9E  6455               	cpfsgt	_eusart1TxHead^0,c	;volatile
  3588   002FA0  EFD4  F017         	goto	u4541
  3589   002FA4  EFD6  F017         	goto	u4540
  3590   002FA8                     u4541:
  3591   002FA8  EFD8  F017         	goto	l4523
  3592   002FAC                     u4540:
  3593   002FAC                     
  3594                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
  3595   002FAC  0E00               	movlw	0
  3596   002FAE  6E55               	movwf	_eusart1TxHead^0,c	;volatile
  3597   002FB0                     l4523:
  3598                           
  3599                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
  3600   002FB0  0658               	decf	_eusart1TxBufferRemaining^0,f,c	;volatile
  3601   002FB2                     l4525:
  3602                           
  3603                           ;mcc_generated_files/eusart1.c: 193:     PIE1bits.TX1IE = 1;
  3604   002FB2  889D               	bsf	157,4,c	;volatile
  3605   002FB4  0012               	return		;funcret
  3606   002FB6                     __end_of_EUSART1_Write:
  3607                           	callstack 0
  3608                           
  3609 ;; *************** function _memcpy *****************
  3610 ;; Defined at:
  3611 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  3612 ;; Parameters:    Size  Location     Type
  3613 ;;  d1              2    5[COMRAM] PTR void 
  3614 ;;		 -> dbuf(80), 
  3615 ;;  s1              2    7[COMRAM] PTR const void 
  3616 ;;		 -> dbuf(80), 
  3617 ;;  n               2    9[COMRAM] unsigned int 
  3618 ;; Auto vars:     Size  Location     Type
  3619 ;;  s               2   14[COMRAM] PTR const unsigned char 
  3620 ;;		 -> dbuf(80), 
  3621 ;;  d               2   12[COMRAM] PTR unsigned char 
  3622 ;;		 -> dbuf(80), 
  3623 ;;  tmp             1   11[COMRAM] unsigned char 
  3624 ;; Return value:  Size  Location     Type
  3625 ;;                  2    5[COMRAM] PTR void 
  3626 ;; Registers used:
  3627 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3628 ;; Tracked objects:
  3629 ;;		On entry : 0/0
  3630 ;;		On exit  : 0/0
  3631 ;;		Unchanged: 0/0
  3632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3633 ;;      Params:         6       0       0       0       0       0       0       0       0
  3634 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3635 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3636 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3637 ;;Total ram usage:       11 bytes
  3638 ;; Hardware stack levels used: 1
  3639 ;; Hardware stack levels required when called: 4
  3640 ;; This function calls:
  3641 ;;		Nothing
  3642 ;; This function is called by:
  3643 ;;		_efgtoa
  3644 ;; This function uses a non-reentrant model
  3645 ;;
  3646                           
  3647                           	psect	text11
  3648   003008                     __ptext11:
  3649                           	callstack 0
  3650   003008                     _memcpy:
  3651                           	callstack 22
  3652   003008  C008  F00F         	movff	memcpy@s1,memcpy@s
  3653   00300C  C009  F010         	movff	memcpy@s1+1,memcpy@s+1
  3654   003010  C006  F00D         	movff	memcpy@d1,memcpy@d
  3655   003014  C007  F00E         	movff	memcpy@d1+1,memcpy@d+1
  3656   003018  EF1E  F018         	goto	l5205
  3657   00301C                     l5197:
  3658   00301C  C00F  FFD9         	movff	memcpy@s,fsr2l
  3659   003020  C010  FFDA         	movff	memcpy@s+1,fsr2h
  3660   003024  50DF               	movf	indf2,w,c
  3661   003026  6E0C               	movwf	memcpy@tmp^0,c
  3662   003028  4A0F               	infsnz	memcpy@s^0,f,c
  3663   00302A  2A10               	incf	(memcpy@s+1)^0,f,c
  3664   00302C  C00D  FFD9         	movff	memcpy@d,fsr2l
  3665   003030  C00E  FFDA         	movff	memcpy@d+1,fsr2h
  3666   003034  C00C  FFDF         	movff	memcpy@tmp,indf2
  3667   003038  4A0D               	infsnz	memcpy@d^0,f,c
  3668   00303A  2A0E               	incf	(memcpy@d+1)^0,f,c
  3669   00303C                     l5205:
  3670   00303C  060A               	decf	memcpy@n^0,f,c
  3671   00303E  A0D8               	btfss	status,0,c
  3672   003040  060B               	decf	(memcpy@n+1)^0,f,c
  3673   003042  280A               	incf	memcpy@n^0,w,c
  3674   003044  E106               	bnz	u5781
  3675   003046  280B               	incf	(memcpy@n+1)^0,w,c
  3676   003048  A4D8               	btfss	status,2,c
  3677   00304A  EF29  F018         	goto	u5781
  3678   00304E  EF2B  F018         	goto	u5780
  3679   003052                     u5781:
  3680   003052  EF0E  F018         	goto	l5197
  3681   003056                     u5780:
  3682   003056  0012               	return		;funcret
  3683   003058                     __end_of_memcpy:
  3684                           	callstack 0
  3685                           
  3686 ;; *************** function _labs *****************
  3687 ;; Defined at:
  3688 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  3689 ;; Parameters:    Size  Location     Type
  3690 ;;  a               4    5[COMRAM] long 
  3691 ;; Auto vars:     Size  Location     Type
  3692 ;;		None
  3693 ;; Return value:  Size  Location     Type
  3694 ;;                  4    5[COMRAM] long 
  3695 ;; Registers used:
  3696 ;;		wreg, status,2, status,0
  3697 ;; Tracked objects:
  3698 ;;		On entry : 0/0
  3699 ;;		On exit  : 0/0
  3700 ;;		Unchanged: 0/0
  3701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3702 ;;      Params:         4       0       0       0       0       0       0       0       0
  3703 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3704 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3705 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3706 ;;Total ram usage:        8 bytes
  3707 ;; Hardware stack levels used: 1
  3708 ;; Hardware stack levels required when called: 4
  3709 ;; This function calls:
  3710 ;;		Nothing
  3711 ;; This function is called by:
  3712 ;;		_efgtoa
  3713 ;; This function uses a non-reentrant model
  3714 ;;
  3715                           
  3716                           	psect	text12
  3717   002EA2                     __ptext12:
  3718                           	callstack 0
  3719   002EA2                     _labs:
  3720                           	callstack 22
  3721   002EA2  BE09               	btfsc	(labs@a+3)^0,7,c
  3722   002EA4  EF60  F017         	goto	u5670
  3723   002EA8  5009               	movf	(labs@a+3)^0,w,c
  3724   002EAA  1008               	iorwf	(labs@a+2)^0,w,c
  3725   002EAC  1007               	iorwf	(labs@a+1)^0,w,c
  3726   002EAE  E106               	bnz	u5671
  3727   002EB0  0406               	decf	labs@a^0,w,c
  3728   002EB2  B0D8               	btfsc	status,0,c
  3729   002EB4  EF5E  F017         	goto	u5671
  3730   002EB8  EF60  F017         	goto	u5670
  3731   002EBC                     u5671:
  3732   002EBC  EF7B  F017         	goto	l1354
  3733   002EC0                     u5670:
  3734   002EC0  C006  F00A         	movff	labs@a,??_labs
  3735   002EC4  C007  F00B         	movff	labs@a+1,??_labs+1
  3736   002EC8  C008  F00C         	movff	labs@a+2,??_labs+2
  3737   002ECC  C009  F00D         	movff	labs@a+3,??_labs+3
  3738   002ED0  1E0A               	comf	??_labs^0,f,c
  3739   002ED2  1E0B               	comf	(??_labs+1)^0,f,c
  3740   002ED4  1E0C               	comf	(??_labs+2)^0,f,c
  3741   002ED6  1E0D               	comf	(??_labs+3)^0,f,c
  3742   002ED8  2A0A               	incf	??_labs^0,f,c
  3743   002EDA  0E00               	movlw	0
  3744   002EDC  220B               	addwfc	(??_labs+1)^0,f,c
  3745   002EDE  220C               	addwfc	(??_labs+2)^0,f,c
  3746   002EE0  220D               	addwfc	(??_labs+3)^0,f,c
  3747   002EE2  C00A  F006         	movff	??_labs,?_labs
  3748   002EE6  C00B  F007         	movff	??_labs+1,?_labs+1
  3749   002EEA  C00C  F008         	movff	??_labs+2,?_labs+2
  3750   002EEE  C00D  F009         	movff	??_labs+3,?_labs+3
  3751   002EF2  EF83  F017         	goto	l1357
  3752   002EF6                     l1354:
  3753   002EF6  C006  F006         	movff	labs@a,?_labs
  3754   002EFA  C007  F007         	movff	labs@a+1,?_labs+1
  3755   002EFE  C008  F008         	movff	labs@a+2,?_labs+2
  3756   002F02  C009  F009         	movff	labs@a+3,?_labs+3
  3757   002F06                     l1357:
  3758   002F06  0012               	return		;funcret
  3759   002F08                     __end_of_labs:
  3760                           	callstack 0
  3761                           
  3762 ;; *************** function _floorf *****************
  3763 ;; Defined at:
  3764 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;  x               4   30[COMRAM] float 
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;  u               4   46[COMRAM] struct .
  3769 ;;  m               4   40[COMRAM] unsigned long 
  3770 ;;  e               2   44[COMRAM] int 
  3771 ;; Return value:  Size  Location     Type
  3772 ;;                  4   30[COMRAM] float 
  3773 ;; Registers used:
  3774 ;;		wreg, status,2, status,0
  3775 ;; Tracked objects:
  3776 ;;		On entry : 0/0
  3777 ;;		On exit  : 0/0
  3778 ;;		Unchanged: 0/0
  3779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3780 ;;      Params:         4       0       0       0       0       0       0       0       0
  3781 ;;      Locals:        10       0       0       0       0       0       0       0       0
  3782 ;;      Temps:          6       0       0       0       0       0       0       0       0
  3783 ;;      Totals:        20       0       0       0       0       0       0       0       0
  3784 ;;Total ram usage:       20 bytes
  3785 ;; Hardware stack levels used: 1
  3786 ;; Hardware stack levels required when called: 4
  3787 ;; This function calls:
  3788 ;;		Nothing
  3789 ;; This function is called by:
  3790 ;;		_efgtoa
  3791 ;; This function uses a non-reentrant model
  3792 ;;
  3793                           
  3794                           	psect	text13
  3795   0021DC                     __ptext13:
  3796                           	callstack 0
  3797   0021DC                     _floorf:
  3798                           	callstack 22
  3799   0021DC  C0E6  F02F         	movff	floorf@F526,floorf@u
  3800   0021E0  C0E7  F030         	movff	floorf@F526+1,floorf@u+1
  3801   0021E4  C0E8  F031         	movff	floorf@F526+2,floorf@u+2
  3802   0021E8  C0E9  F032         	movff	floorf@F526+3,floorf@u+3
  3803   0021EC  C01F  F02F         	movff	floorf@x,floorf@u
  3804   0021F0  C020  F030         	movff	floorf@x+1,floorf@u+1
  3805   0021F4  C021  F031         	movff	floorf@x+2,floorf@u+2
  3806   0021F8  C022  F032         	movff	floorf@x+3,floorf@u+3
  3807   0021FC  0E81               	movlw	129
  3808   0021FE  6E23               	movwf	??_floorf^0,c
  3809   002200  0EFF               	movlw	255
  3810   002202  6E24               	movwf	(??_floorf+1)^0,c
  3811   002204  C02F  F025         	movff	floorf@u,??_floorf+2
  3812   002208  C030  F026         	movff	floorf@u+1,??_floorf+3
  3813   00220C  C031  F027         	movff	floorf@u+2,??_floorf+4
  3814   002210  C032  F028         	movff	floorf@u+3,??_floorf+5
  3815   002214  0E18               	movlw	24
  3816   002216  EF12  F011         	goto	u5680
  3817   00221A                     u5685:
  3818   00221A  90D8               	bcf	status,0,c
  3819   00221C  3228               	rrcf	(??_floorf+5)^0,f,c
  3820   00221E  3227               	rrcf	(??_floorf+4)^0,f,c
  3821   002220  3226               	rrcf	(??_floorf+3)^0,f,c
  3822   002222  3225               	rrcf	(??_floorf+2)^0,f,c
  3823   002224                     u5680:
  3824   002224  2EE8               	decfsz	wreg,f,c
  3825   002226  EF0D  F011         	goto	u5685
  3826   00222A  5025               	movf	(??_floorf+2)^0,w,c
  3827   00222C  2423               	addwf	??_floorf^0,w,c
  3828   00222E  6E2D               	movwf	floorf@e^0,c
  3829   002230  0E00               	movlw	0
  3830   002232  2024               	addwfc	(??_floorf+1)^0,w,c
  3831   002234  6E2E               	movwf	(floorf@e+1)^0,c
  3832   002236  BE2E               	btfsc	(floorf@e+1)^0,7,c
  3833   002238  EF27  F011         	goto	u5691
  3834   00223C  502E               	movf	(floorf@e+1)^0,w,c
  3835   00223E  E109               	bnz	u5690
  3836   002240  0E17               	movlw	23
  3837   002242  5C2D               	subwf	floorf@e^0,w,c
  3838   002244  A0D8               	btfss	status,0,c
  3839   002246  EF27  F011         	goto	u5691
  3840   00224A  EF29  F011         	goto	u5690
  3841   00224E                     u5691:
  3842   00224E  EF33  F011         	goto	l5173
  3843   002252                     u5690:
  3844   002252                     l5171:
  3845   002252  C01F  F01F         	movff	floorf@x,?_floorf
  3846   002256  C020  F020         	movff	floorf@x+1,?_floorf+1
  3847   00225A  C021  F021         	movff	floorf@x+2,?_floorf+2
  3848   00225E  C022  F022         	movff	floorf@x+3,?_floorf+3
  3849   002262  EFF6  F011         	goto	l1329
  3850   002266                     l5173:
  3851   002266  BE2E               	btfsc	(floorf@e+1)^0,7,c
  3852   002268  EF38  F011         	goto	u5701
  3853   00226C  EF3A  F011         	goto	u5700
  3854   002270                     u5701:
  3855   002270  EFAA  F011         	goto	l5183
  3856   002274                     u5700:
  3857   002274  C02D  F023         	movff	floorf@e,??_floorf
  3858   002278  0EFF               	movlw	255
  3859   00227A  6E24               	movwf	(??_floorf+1)^0,c
  3860   00227C  0EFF               	movlw	255
  3861   00227E  6E25               	movwf	(??_floorf+2)^0,c
  3862   002280  0E7F               	movlw	127
  3863   002282  6E26               	movwf	(??_floorf+3)^0,c
  3864   002284  0E00               	movlw	0
  3865   002286  6E27               	movwf	(??_floorf+4)^0,c
  3866   002288                     u5715:
  3867   002288  6623               	tstfsz	??_floorf^0,c
  3868   00228A  EF49  F011         	goto	u5716
  3869   00228E  EF51  F011         	goto	u5717
  3870   002292                     u5716:
  3871   002292  3427               	rlcf	(??_floorf+4)^0,w,c
  3872   002294  3227               	rrcf	(??_floorf+4)^0,f,c
  3873   002296  3226               	rrcf	(??_floorf+3)^0,f,c
  3874   002298  3225               	rrcf	(??_floorf+2)^0,f,c
  3875   00229A  3224               	rrcf	(??_floorf+1)^0,f,c
  3876   00229C  2E23               	decfsz	??_floorf^0,f,c
  3877   00229E  EF44  F011         	goto	u5715
  3878   0022A2                     u5717:
  3879   0022A2  C024  F029         	movff	??_floorf+1,floorf@m
  3880   0022A6  C025  F02A         	movff	??_floorf+2,floorf@m+1
  3881   0022AA  C026  F02B         	movff	??_floorf+3,floorf@m+2
  3882   0022AE  C027  F02C         	movff	??_floorf+4,floorf@m+3
  3883   0022B2  5029               	movf	floorf@m^0,w,c
  3884   0022B4  142F               	andwf	floorf@u^0,w,c
  3885   0022B6  6E23               	movwf	??_floorf^0,c
  3886   0022B8  502A               	movf	(floorf@m+1)^0,w,c
  3887   0022BA  1430               	andwf	(floorf@u+1)^0,w,c
  3888   0022BC  6E24               	movwf	(??_floorf+1)^0,c
  3889   0022BE  502B               	movf	(floorf@m+2)^0,w,c
  3890   0022C0  1431               	andwf	(floorf@u+2)^0,w,c
  3891   0022C2  6E25               	movwf	(??_floorf+2)^0,c
  3892   0022C4  502C               	movf	(floorf@m+3)^0,w,c
  3893   0022C6  1432               	andwf	(floorf@u+3)^0,w,c
  3894   0022C8  6E26               	movwf	(??_floorf+3)^0,c
  3895   0022CA  5023               	movf	??_floorf^0,w,c
  3896   0022CC  1024               	iorwf	(??_floorf+1)^0,w,c
  3897   0022CE  1025               	iorwf	(??_floorf+2)^0,w,c
  3898   0022D0  1026               	iorwf	(??_floorf+3)^0,w,c
  3899   0022D2  A4D8               	btfss	status,2,c
  3900   0022D4  EF6E  F011         	goto	u5721
  3901   0022D8  EF70  F011         	goto	u5720
  3902   0022DC                     u5721:
  3903   0022DC  EF72  F011         	goto	l5179
  3904   0022E0                     u5720:
  3905   0022E0  EF29  F011         	goto	l5171
  3906   0022E4                     l5179:
  3907   0022E4  C02F  F023         	movff	floorf@u,??_floorf
  3908   0022E8  C030  F024         	movff	floorf@u+1,??_floorf+1
  3909   0022EC  C031  F025         	movff	floorf@u+2,??_floorf+2
  3910   0022F0  C032  F026         	movff	floorf@u+3,??_floorf+3
  3911   0022F4  0E20               	movlw	32
  3912   0022F6  EF82  F011         	goto	u5730
  3913   0022FA                     u5735:
  3914   0022FA  90D8               	bcf	status,0,c
  3915   0022FC  3226               	rrcf	(??_floorf+3)^0,f,c
  3916   0022FE  3225               	rrcf	(??_floorf+2)^0,f,c
  3917   002300  3224               	rrcf	(??_floorf+1)^0,f,c
  3918   002302  3223               	rrcf	??_floorf^0,f,c
  3919   002304                     u5730:
  3920   002304  2EE8               	decfsz	wreg,f,c
  3921   002306  EF7D  F011         	goto	u5735
  3922   00230A  5023               	movf	??_floorf^0,w,c
  3923   00230C  1024               	iorwf	(??_floorf+1)^0,w,c
  3924   00230E  1025               	iorwf	(??_floorf+2)^0,w,c
  3925   002310  1026               	iorwf	(??_floorf+3)^0,w,c
  3926   002312  B4D8               	btfsc	status,2,c
  3927   002314  EF8E  F011         	goto	u5741
  3928   002318  EF90  F011         	goto	u5740
  3929   00231C                     u5741:
  3930   00231C  EF98  F011         	goto	l1332
  3931   002320                     u5740:
  3932   002320  5029               	movf	floorf@m^0,w,c
  3933   002322  262F               	addwf	floorf@u^0,f,c
  3934   002324  502A               	movf	(floorf@m+1)^0,w,c
  3935   002326  2230               	addwfc	(floorf@u+1)^0,f,c
  3936   002328  502B               	movf	(floorf@m+2)^0,w,c
  3937   00232A  2231               	addwfc	(floorf@u+2)^0,f,c
  3938   00232C  502C               	movf	(floorf@m+3)^0,w,c
  3939   00232E  2232               	addwfc	(floorf@u+3)^0,f,c
  3940   002330                     l1332:
  3941   002330  1C29               	comf	floorf@m^0,w,c
  3942   002332  6E23               	movwf	??_floorf^0,c
  3943   002334  1C2A               	comf	(floorf@m+1)^0,w,c
  3944   002336  6E24               	movwf	(??_floorf+1)^0,c
  3945   002338  1C2B               	comf	(floorf@m+2)^0,w,c
  3946   00233A  6E25               	movwf	(??_floorf+2)^0,c
  3947   00233C  1C2C               	comf	(floorf@m+3)^0,w,c
  3948   00233E  6E26               	movwf	(??_floorf+3)^0,c
  3949   002340  5023               	movf	??_floorf^0,w,c
  3950   002342  162F               	andwf	floorf@u^0,f,c
  3951   002344  5024               	movf	(??_floorf+1)^0,w,c
  3952   002346  1630               	andwf	(floorf@u+1)^0,f,c
  3953   002348  5025               	movf	(??_floorf+2)^0,w,c
  3954   00234A  1631               	andwf	(floorf@u+2)^0,f,c
  3955   00234C  5026               	movf	(??_floorf+3)^0,w,c
  3956   00234E  1632               	andwf	(floorf@u+3)^0,f,c
  3957   002350  EFEE  F011         	goto	l5191
  3958   002354                     l5183:
  3959   002354  C02F  F023         	movff	floorf@u,??_floorf
  3960   002358  C030  F024         	movff	floorf@u+1,??_floorf+1
  3961   00235C  C031  F025         	movff	floorf@u+2,??_floorf+2
  3962   002360  C032  F026         	movff	floorf@u+3,??_floorf+3
  3963   002364  0E20               	movlw	32
  3964   002366  EFBA  F011         	goto	u5750
  3965   00236A                     u5755:
  3966   00236A  90D8               	bcf	status,0,c
  3967   00236C  3226               	rrcf	(??_floorf+3)^0,f,c
  3968   00236E  3225               	rrcf	(??_floorf+2)^0,f,c
  3969   002370  3224               	rrcf	(??_floorf+1)^0,f,c
  3970   002372  3223               	rrcf	??_floorf^0,f,c
  3971   002374                     u5750:
  3972   002374  2EE8               	decfsz	wreg,f,c
  3973   002376  EFB5  F011         	goto	u5755
  3974   00237A  5023               	movf	??_floorf^0,w,c
  3975   00237C  1024               	iorwf	(??_floorf+1)^0,w,c
  3976   00237E  1025               	iorwf	(??_floorf+2)^0,w,c
  3977   002380  1026               	iorwf	(??_floorf+3)^0,w,c
  3978   002382  A4D8               	btfss	status,2,c
  3979   002384  EFC6  F011         	goto	u5761
  3980   002388  EFC8  F011         	goto	u5760
  3981   00238C                     u5761:
  3982   00238C  EFD2  F011         	goto	l5187
  3983   002390                     u5760:
  3984   002390  0E00               	movlw	0
  3985   002392  6E2F               	movwf	floorf@u^0,c
  3986   002394  0E00               	movlw	0
  3987   002396  6E30               	movwf	(floorf@u+1)^0,c
  3988   002398  0E00               	movlw	0
  3989   00239A  6E31               	movwf	(floorf@u+2)^0,c
  3990   00239C  0E00               	movlw	0
  3991   00239E  6E32               	movwf	(floorf@u+3)^0,c
  3992   0023A0  EFEE  F011         	goto	l5191
  3993   0023A4                     l5187:
  3994   0023A4  90D8               	bcf	status,0,c
  3995   0023A6  342F               	rlcf	floorf@u^0,w,c
  3996   0023A8  6E23               	movwf	??_floorf^0,c
  3997   0023AA  3430               	rlcf	(floorf@u+1)^0,w,c
  3998   0023AC  6E24               	movwf	(??_floorf+1)^0,c
  3999   0023AE  3431               	rlcf	(floorf@u+2)^0,w,c
  4000   0023B0  6E25               	movwf	(??_floorf+2)^0,c
  4001   0023B2  3432               	rlcf	(floorf@u+3)^0,w,c
  4002   0023B4  6E26               	movwf	(??_floorf+3)^0,c
  4003   0023B6  5023               	movf	??_floorf^0,w,c
  4004   0023B8  1024               	iorwf	(??_floorf+1)^0,w,c
  4005   0023BA  1025               	iorwf	(??_floorf+2)^0,w,c
  4006   0023BC  1026               	iorwf	(??_floorf+3)^0,w,c
  4007   0023BE  B4D8               	btfsc	status,2,c
  4008   0023C0  EFE4  F011         	goto	u5771
  4009   0023C4  EFE6  F011         	goto	u5770
  4010   0023C8                     u5771:
  4011   0023C8  EFEE  F011         	goto	l5191
  4012   0023CC                     u5770:
  4013   0023CC  0E00               	movlw	0
  4014   0023CE  6E2F               	movwf	floorf@u^0,c
  4015   0023D0  0E00               	movlw	0
  4016   0023D2  6E30               	movwf	(floorf@u+1)^0,c
  4017   0023D4  0E80               	movlw	128
  4018   0023D6  6E31               	movwf	(floorf@u+2)^0,c
  4019   0023D8  0EBF               	movlw	191
  4020   0023DA  6E32               	movwf	(floorf@u+3)^0,c
  4021   0023DC                     l5191:
  4022   0023DC  C02F  F01F         	movff	floorf@u,?_floorf
  4023   0023E0  C030  F020         	movff	floorf@u+1,?_floorf+1
  4024   0023E4  C031  F021         	movff	floorf@u+2,?_floorf+2
  4025   0023E8  C032  F022         	movff	floorf@u+3,?_floorf+3
  4026   0023EC                     l1329:
  4027   0023EC  0012               	return		;funcret
  4028   0023EE                     __end_of_floorf:
  4029                           	callstack 0
  4030                           
  4031 ;; *************** function ___fpclassifyf *****************
  4032 ;; Defined at:
  4033 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  4034 ;; Parameters:    Size  Location     Type
  4035 ;;  x               4    5[COMRAM] float 
  4036 ;; Auto vars:     Size  Location     Type
  4037 ;;  u               4   15[COMRAM] struct .
  4038 ;;  e               2   13[COMRAM] int 
  4039 ;; Return value:  Size  Location     Type
  4040 ;;                  2    5[COMRAM] int 
  4041 ;; Registers used:
  4042 ;;		wreg, status,2, status,0
  4043 ;; Tracked objects:
  4044 ;;		On entry : 0/0
  4045 ;;		On exit  : 0/0
  4046 ;;		Unchanged: 0/0
  4047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4048 ;;      Params:         4       0       0       0       0       0       0       0       0
  4049 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4050 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4051 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4052 ;;Total ram usage:       14 bytes
  4053 ;; Hardware stack levels used: 1
  4054 ;; Hardware stack levels required when called: 4
  4055 ;; This function calls:
  4056 ;;		Nothing
  4057 ;; This function is called by:
  4058 ;;		_efgtoa
  4059 ;; This function uses a non-reentrant model
  4060 ;;
  4061                           
  4062                           	psect	text14
  4063   0028F6                     __ptext14:
  4064                           	callstack 0
  4065   0028F6                     ___fpclassifyf:
  4066                           	callstack 22
  4067   0028F6  C0EA  F010         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4068   0028FA  C0EB  F011         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4069   0028FE  C0EC  F012         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4070   002902  C0ED  F013         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4071   002906  C006  F010         	movff	___fpclassifyf@x,___fpclassifyf@u
  4072   00290A  C007  F011         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4073   00290E  C008  F012         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4074   002912  C009  F013         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4075   002916  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
  4076   00291A  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4077   00291E  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4078   002922  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4079   002926  0E18               	movlw	24
  4080   002928  EF9B  F014         	goto	u5590
  4081   00292C                     u5595:
  4082   00292C  90D8               	bcf	status,0,c
  4083   00292E  320D               	rrcf	(??___fpclassifyf+3)^0,f,c
  4084   002930  320C               	rrcf	(??___fpclassifyf+2)^0,f,c
  4085   002932  320B               	rrcf	(??___fpclassifyf+1)^0,f,c
  4086   002934  320A               	rrcf	??___fpclassifyf^0,f,c
  4087   002936                     u5590:
  4088   002936  2EE8               	decfsz	wreg,f,c
  4089   002938  EF96  F014         	goto	u5595
  4090   00293C  500A               	movf	??___fpclassifyf^0,w,c
  4091   00293E  6E0E               	movwf	___fpclassifyf@e^0,c
  4092   002940  6A0F               	clrf	(___fpclassifyf@e+1)^0,c
  4093   002942  500E               	movf	___fpclassifyf@e^0,w,c
  4094   002944  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4095   002946  A4D8               	btfss	status,2,c
  4096   002948  EFA8  F014         	goto	u5601
  4097   00294C  EFAA  F014         	goto	u5600
  4098   002950                     u5601:
  4099   002950  EFCA  F014         	goto	l5149
  4100   002954                     u5600:
  4101   002954  90D8               	bcf	status,0,c
  4102   002956  3410               	rlcf	___fpclassifyf@u^0,w,c
  4103   002958  6E0A               	movwf	??___fpclassifyf^0,c
  4104   00295A  3411               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4105   00295C  6E0B               	movwf	(??___fpclassifyf+1)^0,c
  4106   00295E  3412               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4107   002960  6E0C               	movwf	(??___fpclassifyf+2)^0,c
  4108   002962  3413               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4109   002964  6E0D               	movwf	(??___fpclassifyf+3)^0,c
  4110   002966  500A               	movf	??___fpclassifyf^0,w,c
  4111   002968  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
  4112   00296A  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
  4113   00296C  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
  4114   00296E  A4D8               	btfss	status,2,c
  4115   002970  EFBC  F014         	goto	u5611
  4116   002974  EFBE  F014         	goto	u5610
  4117   002978                     u5611:
  4118   002978  EFC4  F014         	goto	l5145
  4119   00297C                     u5610:
  4120   00297C  0E00               	movlw	0
  4121   00297E  6E07               	movwf	(?___fpclassifyf+1)^0,c
  4122   002980  0E02               	movlw	2
  4123   002982  6E06               	movwf	?___fpclassifyf^0,c
  4124   002984  EFF9  F014         	goto	l1297
  4125   002988                     l5145:
  4126   002988  0E00               	movlw	0
  4127   00298A  6E07               	movwf	(?___fpclassifyf+1)^0,c
  4128   00298C  0E03               	movlw	3
  4129   00298E  6E06               	movwf	?___fpclassifyf^0,c
  4130   002990  EFF9  F014         	goto	l1297
  4131   002994                     l5149:
  4132   002994  280E               	incf	___fpclassifyf@e^0,w,c
  4133   002996  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4134   002998  A4D8               	btfss	status,2,c
  4135   00299A  EFD1  F014         	goto	u5621
  4136   00299E  EFD3  F014         	goto	u5620
  4137   0029A2                     u5621:
  4138   0029A2  EFF5  F014         	goto	l5155
  4139   0029A6                     u5620:
  4140   0029A6  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
  4141   0029AA  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4142   0029AE  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4143   0029B2  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4144   0029B6  0E09               	movlw	9
  4145   0029B8                     u5635:
  4146   0029B8  90D8               	bcf	status,0,c
  4147   0029BA  360A               	rlcf	??___fpclassifyf^0,f,c
  4148   0029BC  360B               	rlcf	(??___fpclassifyf+1)^0,f,c
  4149   0029BE  360C               	rlcf	(??___fpclassifyf+2)^0,f,c
  4150   0029C0  360D               	rlcf	(??___fpclassifyf+3)^0,f,c
  4151   0029C2  2EE8               	decfsz	wreg,f,c
  4152   0029C4  EFDC  F014         	goto	u5635
  4153   0029C8  500A               	movf	??___fpclassifyf^0,w,c
  4154   0029CA  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
  4155   0029CC  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
  4156   0029CE  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
  4157   0029D0  B4D8               	btfsc	status,2,c
  4158   0029D2  EFED  F014         	goto	u5641
  4159   0029D6  EFF0  F014         	goto	u5640
  4160   0029DA                     u5641:
  4161   0029DA  0E01               	movlw	1
  4162   0029DC  EFF1  F014         	goto	u5650
  4163   0029E0                     u5640:
  4164   0029E0  0E00               	movlw	0
  4165   0029E2                     u5650:
  4166   0029E2  6E06               	movwf	?___fpclassifyf^0,c
  4167   0029E4  6A07               	clrf	(?___fpclassifyf+1)^0,c
  4168   0029E6  EFF9  F014         	goto	l1297
  4169   0029EA                     l5155:
  4170   0029EA  0E00               	movlw	0
  4171   0029EC  6E07               	movwf	(?___fpclassifyf+1)^0,c
  4172   0029EE  0E04               	movlw	4
  4173   0029F0  6E06               	movwf	?___fpclassifyf^0,c
  4174   0029F2                     l1297:
  4175   0029F2  0012               	return		;funcret
  4176   0029F4                     __end_of___fpclassifyf:
  4177                           	callstack 0
  4178                           
  4179 ;; *************** function ___fltol *****************
  4180 ;; Defined at:
  4181 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;  f1              4    5[COMRAM] int 
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;  exp1            1   14[COMRAM] unsigned char 
  4186 ;;  sign1           1   13[COMRAM] unsigned char 
  4187 ;; Return value:  Size  Location     Type
  4188 ;;                  4    5[COMRAM] long 
  4189 ;; Registers used:
  4190 ;;		wreg, status,2, status,0
  4191 ;; Tracked objects:
  4192 ;;		On entry : 0/0
  4193 ;;		On exit  : 0/0
  4194 ;;		Unchanged: 0/0
  4195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4196 ;;      Params:         4       0       0       0       0       0       0       0       0
  4197 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4198 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4199 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4200 ;;Total ram usage:       10 bytes
  4201 ;; Hardware stack levels used: 1
  4202 ;; Hardware stack levels required when called: 4
  4203 ;; This function calls:
  4204 ;;		Nothing
  4205 ;; This function is called by:
  4206 ;;		_efgtoa
  4207 ;; This function uses a non-reentrant model
  4208 ;;
  4209                           
  4210                           	psect	text15
  4211   0026EC                     __ptext15:
  4212                           	callstack 0
  4213   0026EC                     ___fltol:
  4214                           	callstack 22
  4215   0026EC  3408               	rlcf	(___fltol@f1+2)^0,w,c
  4216   0026EE  3409               	rlcf	(___fltol@f1+3)^0,w,c
  4217   0026F0  6E0F               	movwf	___fltol@exp1^0,c
  4218   0026F2  500F               	movf	___fltol@exp1^0,w,c
  4219   0026F4  A4D8               	btfss	status,2,c
  4220   0026F6  EF7F  F013         	goto	u5501
  4221   0026FA  EF81  F013         	goto	u5500
  4222   0026FE                     u5501:
  4223   0026FE  EF8B  F013         	goto	l5085
  4224   002702                     u5500:
  4225   002702                     l5081:
  4226   002702  0E00               	movlw	0
  4227   002704  6E06               	movwf	?___fltol^0,c
  4228   002706  0E00               	movlw	0
  4229   002708  6E07               	movwf	(?___fltol+1)^0,c
  4230   00270A  0E00               	movlw	0
  4231   00270C  6E08               	movwf	(?___fltol+2)^0,c
  4232   00270E  0E00               	movlw	0
  4233   002710  6E09               	movwf	(?___fltol+3)^0,c
  4234   002712  EFF8  F013         	goto	l782
  4235   002716                     l5085:
  4236   002716  C006  F00A         	movff	___fltol@f1,??___fltol
  4237   00271A  C007  F00B         	movff	___fltol@f1+1,??___fltol+1
  4238   00271E  C008  F00C         	movff	___fltol@f1+2,??___fltol+2
  4239   002722  C009  F00D         	movff	___fltol@f1+3,??___fltol+3
  4240   002726  0E20               	movlw	32
  4241   002728  EF9B  F013         	goto	u5510
  4242   00272C                     u5515:
  4243   00272C  90D8               	bcf	status,0,c
  4244   00272E  320D               	rrcf	(??___fltol+3)^0,f,c
  4245   002730  320C               	rrcf	(??___fltol+2)^0,f,c
  4246   002732  320B               	rrcf	(??___fltol+1)^0,f,c
  4247   002734  320A               	rrcf	??___fltol^0,f,c
  4248   002736                     u5510:
  4249   002736  2EE8               	decfsz	wreg,f,c
  4250   002738  EF96  F013         	goto	u5515
  4251   00273C  500A               	movf	??___fltol^0,w,c
  4252   00273E  6E0E               	movwf	___fltol@sign1^0,c
  4253   002740  8E08               	bsf	(___fltol@f1+2)^0,7,c
  4254   002742  0EFF               	movlw	255
  4255   002744  1606               	andwf	___fltol@f1^0,f,c
  4256   002746  0EFF               	movlw	255
  4257   002748  1607               	andwf	(___fltol@f1+1)^0,f,c
  4258   00274A  0EFF               	movlw	255
  4259   00274C  1608               	andwf	(___fltol@f1+2)^0,f,c
  4260   00274E  0E00               	movlw	0
  4261   002750  1609               	andwf	(___fltol@f1+3)^0,f,c
  4262   002752  0E96               	movlw	150
  4263   002754  5E0F               	subwf	___fltol@exp1^0,f,c
  4264   002756  BE0F               	btfsc	___fltol@exp1^0,7,c
  4265   002758  EFB2  F013         	goto	u5520
  4266   00275C  EFB0  F013         	goto	u5521
  4267   002760                     u5521:
  4268   002760  EFC8  F013         	goto	l5105
  4269   002764                     u5520:
  4270   002764  500F               	movf	___fltol@exp1^0,w,c
  4271   002766  0A80               	xorlw	128
  4272   002768  0F97               	addlw	151
  4273   00276A  B0D8               	btfsc	status,0,c
  4274   00276C  EFBA  F013         	goto	u5531
  4275   002770  EFBC  F013         	goto	u5530
  4276   002774                     u5531:
  4277   002774  EFBE  F013         	goto	l5101
  4278   002778                     u5530:
  4279   002778  EF81  F013         	goto	l5081
  4280   00277C                     l5101:
  4281   00277C  90D8               	bcf	status,0,c
  4282   00277E  3209               	rrcf	(___fltol@f1+3)^0,f,c
  4283   002780  3208               	rrcf	(___fltol@f1+2)^0,f,c
  4284   002782  3207               	rrcf	(___fltol@f1+1)^0,f,c
  4285   002784  3206               	rrcf	___fltol@f1^0,f,c
  4286   002786  3E0F               	incfsz	___fltol@exp1^0,f,c
  4287   002788  EFBE  F013         	goto	l5101
  4288   00278C  EFE0  F013         	goto	l5115
  4289   002790                     l5105:
  4290   002790  0E1F               	movlw	31
  4291   002792  640F               	cpfsgt	___fltol@exp1^0,c
  4292   002794  EFCE  F013         	goto	u5541
  4293   002798  EFD0  F013         	goto	u5540
  4294   00279C                     u5541:
  4295   00279C  EFD8  F013         	goto	l5113
  4296   0027A0                     u5540:
  4297   0027A0  EF81  F013         	goto	l5081
  4298   0027A4                     l5111:
  4299   0027A4  90D8               	bcf	status,0,c
  4300   0027A6  3606               	rlcf	___fltol@f1^0,f,c
  4301   0027A8  3607               	rlcf	(___fltol@f1+1)^0,f,c
  4302   0027AA  3608               	rlcf	(___fltol@f1+2)^0,f,c
  4303   0027AC  3609               	rlcf	(___fltol@f1+3)^0,f,c
  4304   0027AE  060F               	decf	___fltol@exp1^0,f,c
  4305   0027B0                     l5113:
  4306   0027B0  500F               	movf	___fltol@exp1^0,w,c
  4307   0027B2  A4D8               	btfss	status,2,c
  4308   0027B4  EFDE  F013         	goto	u5551
  4309   0027B8  EFE0  F013         	goto	u5550
  4310   0027BC                     u5551:
  4311   0027BC  EFD2  F013         	goto	l5111
  4312   0027C0                     u5550:
  4313   0027C0                     l5115:
  4314   0027C0  500E               	movf	___fltol@sign1^0,w,c
  4315   0027C2  B4D8               	btfsc	status,2,c
  4316   0027C4  EFE6  F013         	goto	u5561
  4317   0027C8  EFE8  F013         	goto	u5560
  4318   0027CC                     u5561:
  4319   0027CC  EFF0  F013         	goto	l5119
  4320   0027D0                     u5560:
  4321   0027D0  1E09               	comf	(___fltol@f1+3)^0,f,c
  4322   0027D2  1E08               	comf	(___fltol@f1+2)^0,f,c
  4323   0027D4  1E07               	comf	(___fltol@f1+1)^0,f,c
  4324   0027D6  6C06               	negf	___fltol@f1^0,c
  4325   0027D8  0E00               	movlw	0
  4326   0027DA  2207               	addwfc	(___fltol@f1+1)^0,f,c
  4327   0027DC  2208               	addwfc	(___fltol@f1+2)^0,f,c
  4328   0027DE  2209               	addwfc	(___fltol@f1+3)^0,f,c
  4329   0027E0                     l5119:
  4330   0027E0  C006  F006         	movff	___fltol@f1,?___fltol
  4331   0027E4  C007  F007         	movff	___fltol@f1+1,?___fltol+1
  4332   0027E8  C008  F008         	movff	___fltol@f1+2,?___fltol+2
  4333   0027EC  C009  F009         	movff	___fltol@f1+3,?___fltol+3
  4334   0027F0                     l782:
  4335   0027F0  0012               	return		;funcret
  4336   0027F2                     __end_of___fltol:
  4337                           	callstack 0
  4338                           
  4339 ;; *************** function ___flsub *****************
  4340 ;; Defined at:
  4341 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  4342 ;; Parameters:    Size  Location     Type
  4343 ;;  b               4   44[COMRAM] long 
  4344 ;;  a               4   48[COMRAM] long 
  4345 ;; Auto vars:     Size  Location     Type
  4346 ;;		None
  4347 ;; Return value:  Size  Location     Type
  4348 ;;                  4   44[COMRAM] long 
  4349 ;; Registers used:
  4350 ;;		wreg, status,2, status,0, cstack
  4351 ;; Tracked objects:
  4352 ;;		On entry : 0/0
  4353 ;;		On exit  : 0/0
  4354 ;;		Unchanged: 0/0
  4355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4356 ;;      Params:         8       0       0       0       0       0       0       0       0
  4357 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4358 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4359 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4360 ;;Total ram usage:        8 bytes
  4361 ;; Hardware stack levels used: 1
  4362 ;; Hardware stack levels required when called: 5
  4363 ;; This function calls:
  4364 ;;		___fladd
  4365 ;; This function is called by:
  4366 ;;		_efgtoa
  4367 ;; This function uses a non-reentrant model
  4368 ;;
  4369                           
  4370                           	psect	text16
  4371   003058                     __ptext16:
  4372                           	callstack 0
  4373   003058                     ___flsub:
  4374                           	callstack 21
  4375   003058  0E00               	movlw	0
  4376   00305A  1A31               	xorwf	___flsub@a^0,f,c
  4377   00305C  0E00               	movlw	0
  4378   00305E  1A32               	xorwf	(___flsub@a+1)^0,f,c
  4379   003060  0E00               	movlw	0
  4380   003062  1A33               	xorwf	(___flsub@a+2)^0,f,c
  4381   003064  0E80               	movlw	128
  4382   003066  1A34               	xorwf	(___flsub@a+3)^0,f,c
  4383   003068  C02D  F006         	movff	___flsub@b,___fladd@b
  4384   00306C  C02E  F007         	movff	___flsub@b+1,___fladd@b+1
  4385   003070  C02F  F008         	movff	___flsub@b+2,___fladd@b+2
  4386   003074  C030  F009         	movff	___flsub@b+3,___fladd@b+3
  4387   003078  C031  F00A         	movff	___flsub@a,___fladd@a
  4388   00307C  C032  F00B         	movff	___flsub@a+1,___fladd@a+1
  4389   003080  C033  F00C         	movff	___flsub@a+2,___fladd@a+2
  4390   003084  C034  F00D         	movff	___flsub@a+3,___fladd@a+3
  4391   003088  EC21  F009         	call	___fladd	;wreg free
  4392   00308C  C006  F02D         	movff	?___fladd,?___flsub
  4393   003090  C007  F02E         	movff	?___fladd+1,?___flsub+1
  4394   003094  C008  F02F         	movff	?___fladd+2,?___flsub+2
  4395   003098  C009  F030         	movff	?___fladd+3,?___flsub+3
  4396   00309C  0012               	return		;funcret
  4397   00309E                     __end_of___flsub:
  4398                           	callstack 0
  4399                           
  4400 ;; *************** function ___fladd *****************
  4401 ;; Defined at:
  4402 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  4403 ;; Parameters:    Size  Location     Type
  4404 ;;  b               4    5[COMRAM] long 
  4405 ;;  a               4    9[COMRAM] long 
  4406 ;; Auto vars:     Size  Location     Type
  4407 ;;  grs             1   20[COMRAM] unsigned char 
  4408 ;;  bexp            1   19[COMRAM] unsigned char 
  4409 ;;  aexp            1   18[COMRAM] unsigned char 
  4410 ;;  signs           1   17[COMRAM] unsigned char 
  4411 ;; Return value:  Size  Location     Type
  4412 ;;                  4    5[COMRAM] unsigned char 
  4413 ;; Registers used:
  4414 ;;		wreg, status,2, status,0
  4415 ;; Tracked objects:
  4416 ;;		On entry : 0/0
  4417 ;;		On exit  : 0/0
  4418 ;;		Unchanged: 0/0
  4419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4420 ;;      Params:         8       0       0       0       0       0       0       0       0
  4421 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4422 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4423 ;;      Totals:        16       0       0       0       0       0       0       0       0
  4424 ;;Total ram usage:       16 bytes
  4425 ;; Hardware stack levels used: 1
  4426 ;; Hardware stack levels required when called: 4
  4427 ;; This function calls:
  4428 ;;		Nothing
  4429 ;; This function is called by:
  4430 ;;		___flsub
  4431 ;;		_efgtoa
  4432 ;; This function uses a non-reentrant model
  4433 ;;
  4434                           
  4435                           	psect	text17
  4436   001242                     __ptext17:
  4437                           	callstack 0
  4438   001242                     ___fladd:
  4439                           	callstack 21
  4440   001242  5009               	movf	(___fladd@b+3)^0,w,c
  4441   001244  0B80               	andlw	128
  4442   001246  6E12               	movwf	___fladd@signs^0,c
  4443   001248  5009               	movf	(___fladd@b+3)^0,w,c
  4444   00124A  2409               	addwf	(___fladd@b+3)^0,w,c
  4445   00124C  6E14               	movwf	___fladd@bexp^0,c
  4446   00124E  AE08               	btfss	(___fladd@b+2)^0,7,c
  4447   001250  EF2C  F009         	goto	u4591
  4448   001254  EF2E  F009         	goto	u4590
  4449   001258                     u4591:
  4450   001258  EF2F  F009         	goto	l4549
  4451   00125C                     u4590:
  4452   00125C  8014               	bsf	___fladd@bexp^0,0,c
  4453   00125E                     l4549:
  4454   00125E  5014               	movf	___fladd@bexp^0,w,c
  4455   001260  B4D8               	btfsc	status,2,c
  4456   001262  EF35  F009         	goto	u4601
  4457   001266  EF37  F009         	goto	u4600
  4458   00126A                     u4601:
  4459   00126A  EF4C  F009         	goto	l4559
  4460   00126E                     u4600:
  4461   00126E  2814               	incf	___fladd@bexp^0,w,c
  4462   001270  A4D8               	btfss	status,2,c
  4463   001272  EF3D  F009         	goto	u4611
  4464   001276  EF3F  F009         	goto	u4610
  4465   00127A                     u4611:
  4466   00127A  EF47  F009         	goto	l4555
  4467   00127E                     u4610:
  4468   00127E  0E00               	movlw	0
  4469   001280  6E06               	movwf	___fladd@b^0,c
  4470   001282  0E00               	movlw	0
  4471   001284  6E07               	movwf	(___fladd@b+1)^0,c
  4472   001286  0E00               	movlw	0
  4473   001288  6E08               	movwf	(___fladd@b+2)^0,c
  4474   00128A  0E00               	movlw	0
  4475   00128C  6E09               	movwf	(___fladd@b+3)^0,c
  4476   00128E                     l4555:
  4477   00128E  8E08               	bsf	(___fladd@b+2)^0,7,c
  4478   001290  0E00               	movlw	0
  4479   001292  6E09               	movwf	(___fladd@b+3)^0,c
  4480   001294  EF54  F009         	goto	l4561
  4481   001298                     l4559:
  4482   001298  0E00               	movlw	0
  4483   00129A  6E06               	movwf	___fladd@b^0,c
  4484   00129C  0E00               	movlw	0
  4485   00129E  6E07               	movwf	(___fladd@b+1)^0,c
  4486   0012A0  0E00               	movlw	0
  4487   0012A2  6E08               	movwf	(___fladd@b+2)^0,c
  4488   0012A4  0E00               	movlw	0
  4489   0012A6  6E09               	movwf	(___fladd@b+3)^0,c
  4490   0012A8                     l4561:
  4491   0012A8  500D               	movf	(___fladd@a+3)^0,w,c
  4492   0012AA  0B80               	andlw	128
  4493   0012AC  6E13               	movwf	___fladd@aexp^0,c
  4494   0012AE  5012               	movf	___fladd@signs^0,w,c
  4495   0012B0  1813               	xorwf	___fladd@aexp^0,w,c
  4496   0012B2  B4D8               	btfsc	status,2,c
  4497   0012B4  EF5E  F009         	goto	u4621
  4498   0012B8  EF60  F009         	goto	u4620
  4499   0012BC                     u4621:
  4500   0012BC  EF61  F009         	goto	l4567
  4501   0012C0                     u4620:
  4502   0012C0  8C12               	bsf	___fladd@signs^0,6,c
  4503   0012C2                     l4567:
  4504   0012C2  500D               	movf	(___fladd@a+3)^0,w,c
  4505   0012C4  240D               	addwf	(___fladd@a+3)^0,w,c
  4506   0012C6  6E13               	movwf	___fladd@aexp^0,c
  4507   0012C8  AE0C               	btfss	(___fladd@a+2)^0,7,c
  4508   0012CA  EF69  F009         	goto	u4631
  4509   0012CE  EF6B  F009         	goto	u4630
  4510   0012D2                     u4631:
  4511   0012D2  EF6C  F009         	goto	l4573
  4512   0012D6                     u4630:
  4513   0012D6  8013               	bsf	___fladd@aexp^0,0,c
  4514   0012D8                     l4573:
  4515   0012D8  5013               	movf	___fladd@aexp^0,w,c
  4516   0012DA  B4D8               	btfsc	status,2,c
  4517   0012DC  EF72  F009         	goto	u4641
  4518   0012E0  EF74  F009         	goto	u4640
  4519   0012E4                     u4641:
  4520   0012E4  EF89  F009         	goto	l4583
  4521   0012E8                     u4640:
  4522   0012E8  2813               	incf	___fladd@aexp^0,w,c
  4523   0012EA  A4D8               	btfss	status,2,c
  4524   0012EC  EF7A  F009         	goto	u4651
  4525   0012F0  EF7C  F009         	goto	u4650
  4526   0012F4                     u4651:
  4527   0012F4  EF84  F009         	goto	l4579
  4528   0012F8                     u4650:
  4529   0012F8  0E00               	movlw	0
  4530   0012FA  6E0A               	movwf	___fladd@a^0,c
  4531   0012FC  0E00               	movlw	0
  4532   0012FE  6E0B               	movwf	(___fladd@a+1)^0,c
  4533   001300  0E00               	movlw	0
  4534   001302  6E0C               	movwf	(___fladd@a+2)^0,c
  4535   001304  0E00               	movlw	0
  4536   001306  6E0D               	movwf	(___fladd@a+3)^0,c
  4537   001308                     l4579:
  4538   001308  8E0C               	bsf	(___fladd@a+2)^0,7,c
  4539   00130A  0E00               	movlw	0
  4540   00130C  6E0D               	movwf	(___fladd@a+3)^0,c
  4541   00130E  EF91  F009         	goto	l4585
  4542   001312                     l4583:
  4543   001312  0E00               	movlw	0
  4544   001314  6E0A               	movwf	___fladd@a^0,c
  4545   001316  0E00               	movlw	0
  4546   001318  6E0B               	movwf	(___fladd@a+1)^0,c
  4547   00131A  0E00               	movlw	0
  4548   00131C  6E0C               	movwf	(___fladd@a+2)^0,c
  4549   00131E  0E00               	movlw	0
  4550   001320  6E0D               	movwf	(___fladd@a+3)^0,c
  4551   001322                     l4585:
  4552   001322  5014               	movf	___fladd@bexp^0,w,c
  4553   001324  5C13               	subwf	___fladd@aexp^0,w,c
  4554   001326  B0D8               	btfsc	status,0,c
  4555   001328  EF98  F009         	goto	u4661
  4556   00132C  EF9A  F009         	goto	u4660
  4557   001330                     u4661:
  4558   001330  EFC1  F009         	goto	l4621
  4559   001334                     u4660:
  4560   001334  AC12               	btfss	___fladd@signs^0,6,c
  4561   001336  EF9F  F009         	goto	u4671
  4562   00133A  EFA1  F009         	goto	u4670
  4563   00133E                     u4671:
  4564   00133E  EFA3  F009         	goto	l4591
  4565   001342                     u4670:
  4566   001342  0E80               	movlw	128
  4567   001344  1A12               	xorwf	___fladd@signs^0,f,c
  4568   001346                     l4591:
  4569   001346  C014  F015         	movff	___fladd@bexp,___fladd@grs
  4570   00134A  C013  F014         	movff	___fladd@aexp,___fladd@bexp
  4571   00134E  C015  F013         	movff	___fladd@grs,___fladd@aexp
  4572   001352  C006  F015         	movff	___fladd@b,___fladd@grs
  4573   001356  C00A  F006         	movff	___fladd@a,___fladd@b
  4574   00135A  C015  F00A         	movff	___fladd@grs,___fladd@a
  4575   00135E  C007  F015         	movff	___fladd@b+1,___fladd@grs
  4576   001362  C00B  F007         	movff	___fladd@a+1,___fladd@b+1
  4577   001366  C015  F00B         	movff	___fladd@grs,___fladd@a+1
  4578   00136A  C008  F015         	movff	___fladd@b+2,___fladd@grs
  4579   00136E  C00C  F008         	movff	___fladd@a+2,___fladd@b+2
  4580   001372  C015  F00C         	movff	___fladd@grs,___fladd@a+2
  4581   001376  C009  F015         	movff	___fladd@b+3,___fladd@grs
  4582   00137A  C00D  F009         	movff	___fladd@a+3,___fladd@b+3
  4583   00137E  C015  F00D         	movff	___fladd@grs,___fladd@a+3
  4584   001382                     l4621:
  4585   001382  0E00               	movlw	0
  4586   001384  6E15               	movwf	___fladd@grs^0,c
  4587   001386  5014               	movf	___fladd@bexp^0,w,c
  4588   001388  C013  F00E         	movff	___fladd@aexp,??___fladd
  4589   00138C  6A0F               	clrf	(??___fladd+1)^0,c
  4590   00138E  5E0E               	subwf	??___fladd^0,f,c
  4591   001390  0E00               	movlw	0
  4592   001392  5A0F               	subwfb	(??___fladd+1)^0,f,c
  4593   001394  BE0F               	btfsc	(??___fladd+1)^0,7,c
  4594   001396  EFD6  F009         	goto	u4681
  4595   00139A  500F               	movf	(??___fladd+1)^0,w,c
  4596   00139C  E109               	bnz	u4680
  4597   00139E  0E1A               	movlw	26
  4598   0013A0  5C0E               	subwf	??___fladd^0,w,c
  4599   0013A2  A0D8               	btfss	status,0,c
  4600   0013A4  EFD6  F009         	goto	u4681
  4601   0013A8  EFD8  F009         	goto	u4680
  4602   0013AC                     u4681:
  4603   0013AC  EF0F  F00A         	goto	l1014
  4604   0013B0                     u4680:
  4605   0013B0  5006               	movf	___fladd@b^0,w,c
  4606   0013B2  1007               	iorwf	(___fladd@b+1)^0,w,c
  4607   0013B4  1008               	iorwf	(___fladd@b+2)^0,w,c
  4608   0013B6  1009               	iorwf	(___fladd@b+3)^0,w,c
  4609   0013B8  A4D8               	btfss	status,2,c
  4610   0013BA  EFE1  F009         	goto	u4691
  4611   0013BE  EFE4  F009         	goto	u4690
  4612   0013C2                     u4691:
  4613   0013C2  0E01               	movlw	1
  4614   0013C4  EFE5  F009         	goto	u4700
  4615   0013C8                     u4690:
  4616   0013C8  0E00               	movlw	0
  4617   0013CA                     u4700:
  4618   0013CA  6E15               	movwf	___fladd@grs^0,c
  4619   0013CC  0E00               	movlw	0
  4620   0013CE  6E06               	movwf	___fladd@b^0,c
  4621   0013D0  0E00               	movlw	0
  4622   0013D2  6E07               	movwf	(___fladd@b+1)^0,c
  4623   0013D4  0E00               	movlw	0
  4624   0013D6  6E08               	movwf	(___fladd@b+2)^0,c
  4625   0013D8  0E00               	movlw	0
  4626   0013DA  6E09               	movwf	(___fladd@b+3)^0,c
  4627   0013DC  C013  F014         	movff	___fladd@aexp,___fladd@bexp
  4628   0013E0  EF18  F00A         	goto	l1013
  4629   0013E4                     l1015:
  4630   0013E4  A015               	btfss	___fladd@grs^0,0,c
  4631   0013E6  EFF7  F009         	goto	u4711
  4632   0013EA  EFF9  F009         	goto	u4710
  4633   0013EE                     u4711:
  4634   0013EE  EFFF  F009         	goto	l4633
  4635   0013F2                     u4710:
  4636   0013F2  90D8               	bcf	status,0,c
  4637   0013F4  3015               	rrcf	___fladd@grs^0,w,c
  4638   0013F6  0901               	iorlw	1
  4639   0013F8  6E15               	movwf	___fladd@grs^0,c
  4640   0013FA  EF01  F00A         	goto	l4635
  4641   0013FE                     l4633:
  4642   0013FE  90D8               	bcf	status,0,c
  4643   001400  3215               	rrcf	___fladd@grs^0,f,c
  4644   001402                     l4635:
  4645   001402  A006               	btfss	___fladd@b^0,0,c
  4646   001404  EF06  F00A         	goto	u4721
  4647   001408  EF08  F00A         	goto	u4720
  4648   00140C                     u4721:
  4649   00140C  EF09  F00A         	goto	l4639
  4650   001410                     u4720:
  4651   001410  8E15               	bsf	___fladd@grs^0,7,c
  4652   001412                     l4639:
  4653   001412  3409               	rlcf	(___fladd@b+3)^0,w,c
  4654   001414  3209               	rrcf	(___fladd@b+3)^0,f,c
  4655   001416  3208               	rrcf	(___fladd@b+2)^0,f,c
  4656   001418  3207               	rrcf	(___fladd@b+1)^0,f,c
  4657   00141A  3206               	rrcf	___fladd@b^0,f,c
  4658   00141C  2A14               	incf	___fladd@bexp^0,f,c
  4659   00141E                     l1014:
  4660   00141E  5013               	movf	___fladd@aexp^0,w,c
  4661   001420  5C14               	subwf	___fladd@bexp^0,w,c
  4662   001422  A0D8               	btfss	status,0,c
  4663   001424  EF16  F00A         	goto	u4731
  4664   001428  EF18  F00A         	goto	u4730
  4665   00142C                     u4731:
  4666   00142C  EFF2  F009         	goto	l1015
  4667   001430                     u4730:
  4668   001430                     l1013:
  4669   001430  BC12               	btfsc	___fladd@signs^0,6,c
  4670   001432  EF1D  F00A         	goto	u4741
  4671   001436  EF1F  F00A         	goto	u4740
  4672   00143A                     u4741:
  4673   00143A  EF5F  F00A         	goto	l4667
  4674   00143E                     u4740:
  4675   00143E  5014               	movf	___fladd@bexp^0,w,c
  4676   001440  A4D8               	btfss	status,2,c
  4677   001442  EF25  F00A         	goto	u4751
  4678   001446  EF27  F00A         	goto	u4750
  4679   00144A                     u4751:
  4680   00144A  EF31  F00A         	goto	l4649
  4681   00144E                     u4750:
  4682   00144E  0E00               	movlw	0
  4683   001450  6E06               	movwf	?___fladd^0,c
  4684   001452  0E00               	movlw	0
  4685   001454  6E07               	movwf	(?___fladd+1)^0,c
  4686   001456  0E00               	movlw	0
  4687   001458  6E08               	movwf	(?___fladd+2)^0,c
  4688   00145A  0E00               	movlw	0
  4689   00145C  6E09               	movwf	(?___fladd+3)^0,c
  4690   00145E  EF80  F00B         	goto	l1022
  4691   001462                     l4649:
  4692   001462  500A               	movf	___fladd@a^0,w,c
  4693   001464  2606               	addwf	___fladd@b^0,f,c
  4694   001466  500B               	movf	(___fladd@a+1)^0,w,c
  4695   001468  2207               	addwfc	(___fladd@b+1)^0,f,c
  4696   00146A  500C               	movf	(___fladd@a+2)^0,w,c
  4697   00146C  2208               	addwfc	(___fladd@b+2)^0,f,c
  4698   00146E  500D               	movf	(___fladd@a+3)^0,w,c
  4699   001470  2209               	addwfc	(___fladd@b+3)^0,f,c
  4700   001472  A009               	btfss	(___fladd@b+3)^0,0,c
  4701   001474  EF3E  F00A         	goto	u4761
  4702   001478  EF40  F00A         	goto	u4760
  4703   00147C                     u4761:
  4704   00147C  EFEC  F00A         	goto	l4703
  4705   001480                     u4760:
  4706   001480  A015               	btfss	___fladd@grs^0,0,c
  4707   001482  EF45  F00A         	goto	u4771
  4708   001486  EF47  F00A         	goto	u4770
  4709   00148A                     u4771:
  4710   00148A  EF4D  F00A         	goto	l4657
  4711   00148E                     u4770:
  4712   00148E  90D8               	bcf	status,0,c
  4713   001490  3015               	rrcf	___fladd@grs^0,w,c
  4714   001492  0901               	iorlw	1
  4715   001494  6E15               	movwf	___fladd@grs^0,c
  4716   001496  EF4F  F00A         	goto	l4659
  4717   00149A                     l4657:
  4718   00149A  90D8               	bcf	status,0,c
  4719   00149C  3215               	rrcf	___fladd@grs^0,f,c
  4720   00149E                     l4659:
  4721   00149E  A006               	btfss	___fladd@b^0,0,c
  4722   0014A0  EF54  F00A         	goto	u4781
  4723   0014A4  EF56  F00A         	goto	u4780
  4724   0014A8                     u4781:
  4725   0014A8  EF57  F00A         	goto	l4663
  4726   0014AC                     u4780:
  4727   0014AC  8E15               	bsf	___fladd@grs^0,7,c
  4728   0014AE                     l4663:
  4729   0014AE  3409               	rlcf	(___fladd@b+3)^0,w,c
  4730   0014B0  3209               	rrcf	(___fladd@b+3)^0,f,c
  4731   0014B2  3208               	rrcf	(___fladd@b+2)^0,f,c
  4732   0014B4  3207               	rrcf	(___fladd@b+1)^0,f,c
  4733   0014B6  3206               	rrcf	___fladd@b^0,f,c
  4734   0014B8  2A14               	incf	___fladd@bexp^0,f,c
  4735   0014BA  EFEC  F00A         	goto	l4703
  4736   0014BE                     l4667:
  4737   0014BE  500A               	movf	___fladd@a^0,w,c
  4738   0014C0  5C06               	subwf	___fladd@b^0,w,c
  4739   0014C2  500B               	movf	(___fladd@a+1)^0,w,c
  4740   0014C4  5807               	subwfb	(___fladd@b+1)^0,w,c
  4741   0014C6  500C               	movf	(___fladd@a+2)^0,w,c
  4742   0014C8  5808               	subwfb	(___fladd@b+2)^0,w,c
  4743   0014CA  5009               	movf	(___fladd@b+3)^0,w,c
  4744   0014CC  0A80               	xorlw	128
  4745   0014CE  6E0E               	movwf	??___fladd^0,c
  4746   0014D0  500D               	movf	(___fladd@a+3)^0,w,c
  4747   0014D2  0A80               	xorlw	128
  4748   0014D4  580E               	subwfb	??___fladd^0,w,c
  4749   0014D6  B0D8               	btfsc	status,0,c
  4750   0014D8  EF70  F00A         	goto	u4791
  4751   0014DC  EF72  F00A         	goto	u4790
  4752   0014E0                     u4791:
  4753   0014E0  EF9D  F00A         	goto	l4677
  4754   0014E4                     u4790:
  4755   0014E4  5006               	movf	___fladd@b^0,w,c
  4756   0014E6  5C0A               	subwf	___fladd@a^0,w,c
  4757   0014E8  6E0E               	movwf	??___fladd^0,c
  4758   0014EA  5007               	movf	(___fladd@b+1)^0,w,c
  4759   0014EC  580B               	subwfb	(___fladd@a+1)^0,w,c
  4760   0014EE  6E0F               	movwf	(??___fladd+1)^0,c
  4761   0014F0  5008               	movf	(___fladd@b+2)^0,w,c
  4762   0014F2  580C               	subwfb	(___fladd@a+2)^0,w,c
  4763   0014F4  6E10               	movwf	(??___fladd+2)^0,c
  4764   0014F6  5009               	movf	(___fladd@b+3)^0,w,c
  4765   0014F8  580D               	subwfb	(___fladd@a+3)^0,w,c
  4766   0014FA  6E11               	movwf	(??___fladd+3)^0,c
  4767   0014FC  0EFF               	movlw	255
  4768   0014FE  240E               	addwf	??___fladd^0,w,c
  4769   001500  6E06               	movwf	___fladd@b^0,c
  4770   001502  0EFF               	movlw	255
  4771   001504  200F               	addwfc	(??___fladd+1)^0,w,c
  4772   001506  6E07               	movwf	(___fladd@b+1)^0,c
  4773   001508  0EFF               	movlw	255
  4774   00150A  2010               	addwfc	(??___fladd+2)^0,w,c
  4775   00150C  6E08               	movwf	(___fladd@b+2)^0,c
  4776   00150E  0EFF               	movlw	255
  4777   001510  2011               	addwfc	(??___fladd+3)^0,w,c
  4778   001512  6E09               	movwf	(___fladd@b+3)^0,c
  4779   001514  0E80               	movlw	128
  4780   001516  1A12               	xorwf	___fladd@signs^0,f,c
  4781   001518  6C15               	negf	___fladd@grs^0,c
  4782   00151A  5015               	movf	___fladd@grs^0,w,c
  4783   00151C  A4D8               	btfss	status,2,c
  4784   00151E  EF93  F00A         	goto	u4801
  4785   001522  EF95  F00A         	goto	u4800
  4786   001526                     u4801:
  4787   001526  EFA5  F00A         	goto	l1030
  4788   00152A                     u4800:
  4789   00152A  0E01               	movlw	1
  4790   00152C  2606               	addwf	___fladd@b^0,f,c
  4791   00152E  0E00               	movlw	0
  4792   001530  2207               	addwfc	(___fladd@b+1)^0,f,c
  4793   001532  2208               	addwfc	(___fladd@b+2)^0,f,c
  4794   001534  2209               	addwfc	(___fladd@b+3)^0,f,c
  4795   001536  EFA5  F00A         	goto	l1030
  4796   00153A                     l4677:
  4797   00153A  500A               	movf	___fladd@a^0,w,c
  4798   00153C  5E06               	subwf	___fladd@b^0,f,c
  4799   00153E  500B               	movf	(___fladd@a+1)^0,w,c
  4800   001540  5A07               	subwfb	(___fladd@b+1)^0,f,c
  4801   001542  500C               	movf	(___fladd@a+2)^0,w,c
  4802   001544  5A08               	subwfb	(___fladd@b+2)^0,f,c
  4803   001546  500D               	movf	(___fladd@a+3)^0,w,c
  4804   001548  5A09               	subwfb	(___fladd@b+3)^0,f,c
  4805   00154A                     l1030:
  4806   00154A  5006               	movf	___fladd@b^0,w,c
  4807   00154C  1007               	iorwf	(___fladd@b+1)^0,w,c
  4808   00154E  1008               	iorwf	(___fladd@b+2)^0,w,c
  4809   001550  1009               	iorwf	(___fladd@b+3)^0,w,c
  4810   001552  A4D8               	btfss	status,2,c
  4811   001554  EFAE  F00A         	goto	u4811
  4812   001558  EFB0  F00A         	goto	u4810
  4813   00155C                     u4811:
  4814   00155C  EFE5  F00A         	goto	l4701
  4815   001560                     u4810:
  4816   001560  5015               	movf	___fladd@grs^0,w,c
  4817   001562  A4D8               	btfss	status,2,c
  4818   001564  EFB6  F00A         	goto	u4821
  4819   001568  EFB8  F00A         	goto	u4820
  4820   00156C                     u4821:
  4821   00156C  EFE5  F00A         	goto	l4701
  4822   001570                     u4820:
  4823   001570  0E00               	movlw	0
  4824   001572  6E06               	movwf	?___fladd^0,c
  4825   001574  0E00               	movlw	0
  4826   001576  6E07               	movwf	(?___fladd+1)^0,c
  4827   001578  0E00               	movlw	0
  4828   00157A  6E08               	movwf	(?___fladd+2)^0,c
  4829   00157C  0E00               	movlw	0
  4830   00157E  6E09               	movwf	(?___fladd+3)^0,c
  4831   001580  EF80  F00B         	goto	l1022
  4832   001584                     l4685:
  4833   001584  90D8               	bcf	status,0,c
  4834   001586  3606               	rlcf	___fladd@b^0,f,c
  4835   001588  3607               	rlcf	(___fladd@b+1)^0,f,c
  4836   00158A  3608               	rlcf	(___fladd@b+2)^0,f,c
  4837   00158C  3609               	rlcf	(___fladd@b+3)^0,f,c
  4838   00158E  AE15               	btfss	___fladd@grs^0,7,c
  4839   001590  EFCC  F00A         	goto	u4831
  4840   001594  EFCE  F00A         	goto	u4830
  4841   001598                     u4831:
  4842   001598  EFCF  F00A         	goto	l4691
  4843   00159C                     u4830:
  4844   00159C  8006               	bsf	___fladd@b^0,0,c
  4845   00159E                     l4691:
  4846   00159E  A015               	btfss	___fladd@grs^0,0,c
  4847   0015A0  EFD4  F00A         	goto	u4841
  4848   0015A4  EFD6  F00A         	goto	u4840
  4849   0015A8                     u4841:
  4850   0015A8  EFDA  F00A         	goto	l4695
  4851   0015AC                     u4840:
  4852   0015AC  80D8               	bsf	status,0,c
  4853   0015AE  3615               	rlcf	___fladd@grs^0,f,c
  4854   0015B0  EFDC  F00A         	goto	l4697
  4855   0015B4                     l4695:
  4856   0015B4  90D8               	bcf	status,0,c
  4857   0015B6  3615               	rlcf	___fladd@grs^0,f,c
  4858   0015B8                     l4697:
  4859   0015B8  5014               	movf	___fladd@bexp^0,w,c
  4860   0015BA  B4D8               	btfsc	status,2,c
  4861   0015BC  EFE2  F00A         	goto	u4851
  4862   0015C0  EFE4  F00A         	goto	u4850
  4863   0015C4                     u4851:
  4864   0015C4  EFE5  F00A         	goto	l4701
  4865   0015C8                     u4850:
  4866   0015C8  0614               	decf	___fladd@bexp^0,f,c
  4867   0015CA                     l4701:
  4868   0015CA  AE08               	btfss	(___fladd@b+2)^0,7,c
  4869   0015CC  EFEA  F00A         	goto	u4861
  4870   0015D0  EFEC  F00A         	goto	u4860
  4871   0015D4                     u4861:
  4872   0015D4  EFC2  F00A         	goto	l4685
  4873   0015D8                     u4860:
  4874   0015D8                     l4703:
  4875   0015D8  0E00               	movlw	0
  4876   0015DA  6E13               	movwf	___fladd@aexp^0,c
  4877   0015DC  AE15               	btfss	___fladd@grs^0,7,c
  4878   0015DE  EFF3  F00A         	goto	u4871
  4879   0015E2  EFF5  F00A         	goto	u4870
  4880   0015E6                     u4871:
  4881   0015E6  EF0D  F00B         	goto	l1039
  4882   0015EA                     u4870:
  4883   0015EA  C015  F00E         	movff	___fladd@grs,??___fladd
  4884   0015EE  0E7F               	movlw	127
  4885   0015F0  160E               	andwf	??___fladd^0,f,c
  4886   0015F2  B4D8               	btfsc	status,2,c
  4887   0015F4  EFFE  F00A         	goto	u4881
  4888   0015F8  EF00  F00B         	goto	u4880
  4889   0015FC                     u4881:
  4890   0015FC  EF04  F00B         	goto	l1040
  4891   001600                     u4880:
  4892   001600                     l4709:
  4893   001600  0E01               	movlw	1
  4894   001602  6E13               	movwf	___fladd@aexp^0,c
  4895   001604  EF0D  F00B         	goto	l1039
  4896   001608                     l1040:
  4897   001608  A006               	btfss	___fladd@b^0,0,c
  4898   00160A  EF09  F00B         	goto	u4891
  4899   00160E  EF0B  F00B         	goto	u4890
  4900   001612                     u4891:
  4901   001612  EF0D  F00B         	goto	l1039
  4902   001616                     u4890:
  4903   001616  EF00  F00B         	goto	l4709
  4904   00161A                     l1039:
  4905   00161A  5013               	movf	___fladd@aexp^0,w,c
  4906   00161C  B4D8               	btfsc	status,2,c
  4907   00161E  EF13  F00B         	goto	u4901
  4908   001622  EF15  F00B         	goto	u4900
  4909   001626                     u4901:
  4910   001626  EF40  F00B         	goto	l4721
  4911   00162A                     u4900:
  4912   00162A  0E01               	movlw	1
  4913   00162C  2606               	addwf	___fladd@b^0,f,c
  4914   00162E  0E00               	movlw	0
  4915   001630  2207               	addwfc	(___fladd@b+1)^0,f,c
  4916   001632  2208               	addwfc	(___fladd@b+2)^0,f,c
  4917   001634  2209               	addwfc	(___fladd@b+3)^0,f,c
  4918   001636  A009               	btfss	(___fladd@b+3)^0,0,c
  4919   001638  EF20  F00B         	goto	u4911
  4920   00163C  EF22  F00B         	goto	u4910
  4921   001640                     u4911:
  4922   001640  EF40  F00B         	goto	l4721
  4923   001644                     u4910:
  4924   001644  C006  F00E         	movff	___fladd@b,??___fladd
  4925   001648  C007  F00F         	movff	___fladd@b+1,??___fladd+1
  4926   00164C  C008  F010         	movff	___fladd@b+2,??___fladd+2
  4927   001650  C009  F011         	movff	___fladd@b+3,??___fladd+3
  4928   001654  3411               	rlcf	(??___fladd+3)^0,w,c
  4929   001656  3211               	rrcf	(??___fladd+3)^0,f,c
  4930   001658  3210               	rrcf	(??___fladd+2)^0,f,c
  4931   00165A  320F               	rrcf	(??___fladd+1)^0,f,c
  4932   00165C  320E               	rrcf	??___fladd^0,f,c
  4933   00165E  C00E  F006         	movff	??___fladd,___fladd@b
  4934   001662  C00F  F007         	movff	??___fladd+1,___fladd@b+1
  4935   001666  C010  F008         	movff	??___fladd+2,___fladd@b+2
  4936   00166A  C011  F009         	movff	??___fladd+3,___fladd@b+3
  4937   00166E  2814               	incf	___fladd@bexp^0,w,c
  4938   001670  B4D8               	btfsc	status,2,c
  4939   001672  EF3D  F00B         	goto	u4921
  4940   001676  EF3F  F00B         	goto	u4920
  4941   00167A                     u4921:
  4942   00167A  EF40  F00B         	goto	l4721
  4943   00167E                     u4920:
  4944   00167E  2A14               	incf	___fladd@bexp^0,f,c
  4945   001680                     l4721:
  4946   001680  2814               	incf	___fladd@bexp^0,w,c
  4947   001682  B4D8               	btfsc	status,2,c
  4948   001684  EF46  F00B         	goto	u4931
  4949   001688  EF48  F00B         	goto	u4930
  4950   00168C                     u4931:
  4951   00168C  EF50  F00B         	goto	l4725
  4952   001690                     u4930:
  4953   001690  5014               	movf	___fladd@bexp^0,w,c
  4954   001692  A4D8               	btfss	status,2,c
  4955   001694  EF4E  F00B         	goto	u4941
  4956   001698  EF50  F00B         	goto	u4940
  4957   00169C                     u4941:
  4958   00169C  EF62  F00B         	goto	l4729
  4959   0016A0                     u4940:
  4960   0016A0                     l4725:
  4961   0016A0  0E00               	movlw	0
  4962   0016A2  6E06               	movwf	___fladd@b^0,c
  4963   0016A4  0E00               	movlw	0
  4964   0016A6  6E07               	movwf	(___fladd@b+1)^0,c
  4965   0016A8  0E00               	movlw	0
  4966   0016AA  6E08               	movwf	(___fladd@b+2)^0,c
  4967   0016AC  0E00               	movlw	0
  4968   0016AE  6E09               	movwf	(___fladd@b+3)^0,c
  4969   0016B0  5014               	movf	___fladd@bexp^0,w,c
  4970   0016B2  A4D8               	btfss	status,2,c
  4971   0016B4  EF5E  F00B         	goto	u4951
  4972   0016B8  EF60  F00B         	goto	u4950
  4973   0016BC                     u4951:
  4974   0016BC  EF62  F00B         	goto	l4729
  4975   0016C0                     u4950:
  4976   0016C0  0E00               	movlw	0
  4977   0016C2  6E12               	movwf	___fladd@signs^0,c
  4978   0016C4                     l4729:
  4979   0016C4  A014               	btfss	___fladd@bexp^0,0,c
  4980   0016C6  EF67  F00B         	goto	u4961
  4981   0016CA  EF69  F00B         	goto	u4960
  4982   0016CE                     u4961:
  4983   0016CE  EF6C  F00B         	goto	l4733
  4984   0016D2                     u4960:
  4985   0016D2  8E08               	bsf	(___fladd@b+2)^0,7,c
  4986   0016D4  EF6D  F00B         	goto	l4735
  4987   0016D8                     l4733:
  4988   0016D8  9E08               	bcf	(___fladd@b+2)^0,7,c
  4989   0016DA                     l4735:
  4990   0016DA  90D8               	bcf	status,0,c
  4991   0016DC  3014               	rrcf	___fladd@bexp^0,w,c
  4992   0016DE  6E09               	movwf	(___fladd@b+3)^0,c
  4993   0016E0  AE12               	btfss	___fladd@signs^0,7,c
  4994   0016E2  EF75  F00B         	goto	u4971
  4995   0016E6  EF77  F00B         	goto	u4970
  4996   0016EA                     u4971:
  4997   0016EA  EF78  F00B         	goto	l4741
  4998   0016EE                     u4970:
  4999   0016EE  8E09               	bsf	(___fladd@b+3)^0,7,c
  5000   0016F0                     l4741:
  5001   0016F0  C006  F006         	movff	___fladd@b,?___fladd
  5002   0016F4  C007  F007         	movff	___fladd@b+1,?___fladd+1
  5003   0016F8  C008  F008         	movff	___fladd@b+2,?___fladd+2
  5004   0016FC  C009  F009         	movff	___fladd@b+3,?___fladd+3
  5005   001700                     l1022:
  5006   001700  0012               	return		;funcret
  5007   001702                     __end_of___fladd:
  5008                           	callstack 0
  5009                           
  5010 ;; *************** function ___flneg *****************
  5011 ;; Defined at:
  5012 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  5013 ;; Parameters:    Size  Location     Type
  5014 ;;  f1              4    5[COMRAM] unsigned char 
  5015 ;; Auto vars:     Size  Location     Type
  5016 ;;		None
  5017 ;; Return value:  Size  Location     Type
  5018 ;;                  4    5[COMRAM] unsigned char 
  5019 ;; Registers used:
  5020 ;;		wreg, status,2, status,0
  5021 ;; Tracked objects:
  5022 ;;		On entry : 0/0
  5023 ;;		On exit  : 0/0
  5024 ;;		Unchanged: 0/0
  5025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5026 ;;      Params:         4       0       0       0       0       0       0       0       0
  5027 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5028 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5029 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5030 ;;Total ram usage:        4 bytes
  5031 ;; Hardware stack levels used: 1
  5032 ;; Hardware stack levels required when called: 4
  5033 ;; This function calls:
  5034 ;;		Nothing
  5035 ;; This function is called by:
  5036 ;;		_efgtoa
  5037 ;; This function uses a non-reentrant model
  5038 ;;
  5039                           
  5040                           	psect	text18
  5041   00322A                     __ptext18:
  5042                           	callstack 0
  5043   00322A                     ___flneg:
  5044                           	callstack 22
  5045   00322A  5006               	movf	___flneg@f1^0,w,c
  5046   00322C  1007               	iorwf	(___flneg@f1+1)^0,w,c
  5047   00322E  1008               	iorwf	(___flneg@f1+2)^0,w,c
  5048   003230  1009               	iorwf	(___flneg@f1+3)^0,w,c
  5049   003232  B4D8               	btfsc	status,2,c
  5050   003234  EF1E  F019         	goto	u5491
  5051   003238  EF20  F019         	goto	u5490
  5052   00323C                     u5491:
  5053   00323C  EF28  F019         	goto	l5075
  5054   003240                     u5490:
  5055   003240  0E00               	movlw	0
  5056   003242  1A06               	xorwf	___flneg@f1^0,f,c
  5057   003244  0E00               	movlw	0
  5058   003246  1A07               	xorwf	(___flneg@f1+1)^0,f,c
  5059   003248  0E00               	movlw	0
  5060   00324A  1A08               	xorwf	(___flneg@f1+2)^0,f,c
  5061   00324C  0E80               	movlw	128
  5062   00324E  1A09               	xorwf	(___flneg@f1+3)^0,f,c
  5063   003250                     l5075:
  5064   003250  C006  F006         	movff	___flneg@f1,?___flneg
  5065   003254  C007  F007         	movff	___flneg@f1+1,?___flneg+1
  5066   003258  C008  F008         	movff	___flneg@f1+2,?___flneg+2
  5067   00325C  C009  F009         	movff	___flneg@f1+3,?___flneg+3
  5068   003260  0012               	return		;funcret
  5069   003262                     __end_of___flneg:
  5070                           	callstack 0
  5071                           
  5072 ;; *************** function ___fleq *****************
  5073 ;; Defined at:
  5074 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;  ff1             4    5[COMRAM] unsigned char 
  5077 ;;  ff2             4    9[COMRAM] unsigned char 
  5078 ;; Auto vars:     Size  Location     Type
  5079 ;;		None
  5080 ;; Return value:  Size  Location     Type
  5081 ;;		None               void
  5082 ;; Registers used:
  5083 ;;		wreg, status,2, status,0
  5084 ;; Tracked objects:
  5085 ;;		On entry : 0/0
  5086 ;;		On exit  : 0/0
  5087 ;;		Unchanged: 0/0
  5088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5089 ;;      Params:         8       0       0       0       0       0       0       0       0
  5090 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5091 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5092 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5093 ;;Total ram usage:       12 bytes
  5094 ;; Hardware stack levels used: 1
  5095 ;; Hardware stack levels required when called: 4
  5096 ;; This function calls:
  5097 ;;		Nothing
  5098 ;; This function is called by:
  5099 ;;		_efgtoa
  5100 ;; This function uses a non-reentrant model
  5101 ;;
  5102                           
  5103                           	psect	text19
  5104   002C74                     __ptext19:
  5105                           	callstack 0
  5106   002C74                     ___fleq:
  5107                           	callstack 22
  5108   002C74  0E00               	movlw	0
  5109   002C76  1406               	andwf	___fleq@ff1^0,w,c
  5110   002C78  6E0E               	movwf	??___fleq^0,c
  5111   002C7A  0E00               	movlw	0
  5112   002C7C  1407               	andwf	(___fleq@ff1+1)^0,w,c
  5113   002C7E  6E0F               	movwf	(??___fleq+1)^0,c
  5114   002C80  0E80               	movlw	128
  5115   002C82  1408               	andwf	(___fleq@ff1+2)^0,w,c
  5116   002C84  6E10               	movwf	(??___fleq+2)^0,c
  5117   002C86  0E7F               	movlw	127
  5118   002C88  1409               	andwf	(___fleq@ff1+3)^0,w,c
  5119   002C8A  6E11               	movwf	(??___fleq+3)^0,c
  5120   002C8C  500E               	movf	??___fleq^0,w,c
  5121   002C8E  100F               	iorwf	(??___fleq+1)^0,w,c
  5122   002C90  1010               	iorwf	(??___fleq+2)^0,w,c
  5123   002C92  1011               	iorwf	(??___fleq+3)^0,w,c
  5124   002C94  A4D8               	btfss	status,2,c
  5125   002C96  EF4F  F016         	goto	u5411
  5126   002C9A  EF51  F016         	goto	u5410
  5127   002C9E                     u5411:
  5128   002C9E  EF59  F016         	goto	l5037
  5129   002CA2                     u5410:
  5130   002CA2  0E00               	movlw	0
  5131   002CA4  6E06               	movwf	___fleq@ff1^0,c
  5132   002CA6  0E00               	movlw	0
  5133   002CA8  6E07               	movwf	(___fleq@ff1+1)^0,c
  5134   002CAA  0E00               	movlw	0
  5135   002CAC  6E08               	movwf	(___fleq@ff1+2)^0,c
  5136   002CAE  0E00               	movlw	0
  5137   002CB0  6E09               	movwf	(___fleq@ff1+3)^0,c
  5138   002CB2                     l5037:
  5139   002CB2  0E00               	movlw	0
  5140   002CB4  140A               	andwf	___fleq@ff2^0,w,c
  5141   002CB6  6E0E               	movwf	??___fleq^0,c
  5142   002CB8  0E00               	movlw	0
  5143   002CBA  140B               	andwf	(___fleq@ff2+1)^0,w,c
  5144   002CBC  6E0F               	movwf	(??___fleq+1)^0,c
  5145   002CBE  0E80               	movlw	128
  5146   002CC0  140C               	andwf	(___fleq@ff2+2)^0,w,c
  5147   002CC2  6E10               	movwf	(??___fleq+2)^0,c
  5148   002CC4  0E7F               	movlw	127
  5149   002CC6  140D               	andwf	(___fleq@ff2+3)^0,w,c
  5150   002CC8  6E11               	movwf	(??___fleq+3)^0,c
  5151   002CCA  500E               	movf	??___fleq^0,w,c
  5152   002CCC  100F               	iorwf	(??___fleq+1)^0,w,c
  5153   002CCE  1010               	iorwf	(??___fleq+2)^0,w,c
  5154   002CD0  1011               	iorwf	(??___fleq+3)^0,w,c
  5155   002CD2  A4D8               	btfss	status,2,c
  5156   002CD4  EF6E  F016         	goto	u5421
  5157   002CD8  EF70  F016         	goto	u5420
  5158   002CDC                     u5421:
  5159   002CDC  EF78  F016         	goto	l5041
  5160   002CE0                     u5420:
  5161   002CE0  0E00               	movlw	0
  5162   002CE2  6E0A               	movwf	___fleq@ff2^0,c
  5163   002CE4  0E00               	movlw	0
  5164   002CE6  6E0B               	movwf	(___fleq@ff2+1)^0,c
  5165   002CE8  0E00               	movlw	0
  5166   002CEA  6E0C               	movwf	(___fleq@ff2+2)^0,c
  5167   002CEC  0E00               	movlw	0
  5168   002CEE  6E0D               	movwf	(___fleq@ff2+3)^0,c
  5169   002CF0                     l5041:
  5170   002CF0  500A               	movf	___fleq@ff2^0,w,c
  5171   002CF2  1806               	xorwf	___fleq@ff1^0,w,c
  5172   002CF4  E10F               	bnz	u5430
  5173   002CF6  500B               	movf	(___fleq@ff2+1)^0,w,c
  5174   002CF8  1807               	xorwf	(___fleq@ff1+1)^0,w,c
  5175   002CFA  E10C               	bnz	u5430
  5176   002CFC  500C               	movf	(___fleq@ff2+2)^0,w,c
  5177   002CFE  1808               	xorwf	(___fleq@ff1+2)^0,w,c
  5178   002D00  E109               	bnz	u5430
  5179   002D02  500D               	movf	(___fleq@ff2+3)^0,w,c
  5180   002D04  1809               	xorwf	(___fleq@ff1+3)^0,w,c
  5181   002D06  B4D8               	btfsc	status,2,c
  5182   002D08  EF88  F016         	goto	u5431
  5183   002D0C  EF8A  F016         	goto	u5430
  5184   002D10                     u5431:
  5185   002D10  EF8D  F016         	goto	l5045
  5186   002D14                     u5430:
  5187   002D14  90D8               	bcf	status,0,c
  5188   002D16  EF8E  F016         	goto	l744
  5189   002D1A                     l5045:
  5190   002D1A  80D8               	bsf	status,0,c
  5191   002D1C                     l744:
  5192   002D1C  0012               	return		;funcret
  5193   002D1E                     __end_of___fleq:
  5194                           	callstack 0
  5195                           
  5196 ;; *************** function ___fldiv *****************
  5197 ;; Defined at:
  5198 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  5199 ;; Parameters:    Size  Location     Type
  5200 ;;  b               4    5[COMRAM] unsigned char 
  5201 ;;  a               4    9[COMRAM] unsigned char 
  5202 ;; Auto vars:     Size  Location     Type
  5203 ;;  grs             4   24[COMRAM] unsigned long 
  5204 ;;  rem             4   17[COMRAM] unsigned long 
  5205 ;;  new_exp         2   22[COMRAM] short 
  5206 ;;  aexp            1   29[COMRAM] unsigned char 
  5207 ;;  bexp            1   28[COMRAM] unsigned char 
  5208 ;;  sign            1   21[COMRAM] unsigned char 
  5209 ;; Return value:  Size  Location     Type
  5210 ;;                  4    5[COMRAM] unsigned char 
  5211 ;; Registers used:
  5212 ;;		wreg, status,2, status,0
  5213 ;; Tracked objects:
  5214 ;;		On entry : 0/0
  5215 ;;		On exit  : 0/0
  5216 ;;		Unchanged: 0/0
  5217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5218 ;;      Params:         8       0       0       0       0       0       0       0       0
  5219 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5220 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5221 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5222 ;;Total ram usage:       25 bytes
  5223 ;; Hardware stack levels used: 1
  5224 ;; Hardware stack levels required when called: 4
  5225 ;; This function calls:
  5226 ;;		Nothing
  5227 ;; This function is called by:
  5228 ;;		_efgtoa
  5229 ;; This function uses a non-reentrant model
  5230 ;;
  5231                           
  5232                           	psect	text20
  5233   001B2C                     __ptext20:
  5234                           	callstack 0
  5235   001B2C                     ___fldiv:
  5236                           	callstack 22
  5237   001B2C  5009               	movf	(___fldiv@b+3)^0,w,c
  5238   001B2E  0B80               	andlw	128
  5239   001B30  6E16               	movwf	___fldiv@sign^0,c
  5240   001B32  5009               	movf	(___fldiv@b+3)^0,w,c
  5241   001B34  2409               	addwf	(___fldiv@b+3)^0,w,c
  5242   001B36  6E1D               	movwf	___fldiv@bexp^0,c
  5243   001B38  AE08               	btfss	(___fldiv@b+2)^0,7,c
  5244   001B3A  EFA1  F00D         	goto	u4991
  5245   001B3E  EFA3  F00D         	goto	u4990
  5246   001B42                     u4991:
  5247   001B42  EFA4  F00D         	goto	l4765
  5248   001B46                     u4990:
  5249   001B46  801D               	bsf	___fldiv@bexp^0,0,c
  5250   001B48                     l4765:
  5251   001B48  501D               	movf	___fldiv@bexp^0,w,c
  5252   001B4A  B4D8               	btfsc	status,2,c
  5253   001B4C  EFAA  F00D         	goto	u5001
  5254   001B50  EFAC  F00D         	goto	u5000
  5255   001B54                     u5001:
  5256   001B54  EFC1  F00D         	goto	l4775
  5257   001B58                     u5000:
  5258   001B58  281D               	incf	___fldiv@bexp^0,w,c
  5259   001B5A  A4D8               	btfss	status,2,c
  5260   001B5C  EFB2  F00D         	goto	u5011
  5261   001B60  EFB4  F00D         	goto	u5010
  5262   001B64                     u5011:
  5263   001B64  EFBC  F00D         	goto	l4771
  5264   001B68                     u5010:
  5265   001B68  0E00               	movlw	0
  5266   001B6A  6E06               	movwf	___fldiv@b^0,c
  5267   001B6C  0E00               	movlw	0
  5268   001B6E  6E07               	movwf	(___fldiv@b+1)^0,c
  5269   001B70  0E00               	movlw	0
  5270   001B72  6E08               	movwf	(___fldiv@b+2)^0,c
  5271   001B74  0E00               	movlw	0
  5272   001B76  6E09               	movwf	(___fldiv@b+3)^0,c
  5273   001B78                     l4771:
  5274   001B78  8E08               	bsf	(___fldiv@b+2)^0,7,c
  5275   001B7A  0E00               	movlw	0
  5276   001B7C  6E09               	movwf	(___fldiv@b+3)^0,c
  5277   001B7E  EFC9  F00D         	goto	l4777
  5278   001B82                     l4775:
  5279   001B82  0E00               	movlw	0
  5280   001B84  6E06               	movwf	___fldiv@b^0,c
  5281   001B86  0E00               	movlw	0
  5282   001B88  6E07               	movwf	(___fldiv@b+1)^0,c
  5283   001B8A  0E00               	movlw	0
  5284   001B8C  6E08               	movwf	(___fldiv@b+2)^0,c
  5285   001B8E  0E00               	movlw	0
  5286   001B90  6E09               	movwf	(___fldiv@b+3)^0,c
  5287   001B92                     l4777:
  5288   001B92  500D               	movf	(___fldiv@a+3)^0,w,c
  5289   001B94  0B80               	andlw	128
  5290   001B96  1A16               	xorwf	___fldiv@sign^0,f,c
  5291   001B98  500D               	movf	(___fldiv@a+3)^0,w,c
  5292   001B9A  240D               	addwf	(___fldiv@a+3)^0,w,c
  5293   001B9C  6E1E               	movwf	___fldiv@aexp^0,c
  5294   001B9E  AE0C               	btfss	(___fldiv@a+2)^0,7,c
  5295   001BA0  EFD4  F00D         	goto	u5021
  5296   001BA4  EFD6  F00D         	goto	u5020
  5297   001BA8                     u5021:
  5298   001BA8  EFD7  F00D         	goto	l4785
  5299   001BAC                     u5020:
  5300   001BAC  801E               	bsf	___fldiv@aexp^0,0,c
  5301   001BAE                     l4785:
  5302   001BAE  501E               	movf	___fldiv@aexp^0,w,c
  5303   001BB0  B4D8               	btfsc	status,2,c
  5304   001BB2  EFDD  F00D         	goto	u5031
  5305   001BB6  EFDF  F00D         	goto	u5030
  5306   001BBA                     u5031:
  5307   001BBA  EFF4  F00D         	goto	l4795
  5308   001BBE                     u5030:
  5309   001BBE  281E               	incf	___fldiv@aexp^0,w,c
  5310   001BC0  A4D8               	btfss	status,2,c
  5311   001BC2  EFE5  F00D         	goto	u5041
  5312   001BC6  EFE7  F00D         	goto	u5040
  5313   001BCA                     u5041:
  5314   001BCA  EFEF  F00D         	goto	l4791
  5315   001BCE                     u5040:
  5316   001BCE  0E00               	movlw	0
  5317   001BD0  6E0A               	movwf	___fldiv@a^0,c
  5318   001BD2  0E00               	movlw	0
  5319   001BD4  6E0B               	movwf	(___fldiv@a+1)^0,c
  5320   001BD6  0E00               	movlw	0
  5321   001BD8  6E0C               	movwf	(___fldiv@a+2)^0,c
  5322   001BDA  0E00               	movlw	0
  5323   001BDC  6E0D               	movwf	(___fldiv@a+3)^0,c
  5324   001BDE                     l4791:
  5325   001BDE  8E0C               	bsf	(___fldiv@a+2)^0,7,c
  5326   001BE0  0E00               	movlw	0
  5327   001BE2  6E0D               	movwf	(___fldiv@a+3)^0,c
  5328   001BE4  EFFC  F00D         	goto	l4797
  5329   001BE8                     l4795:
  5330   001BE8  0E00               	movlw	0
  5331   001BEA  6E0A               	movwf	___fldiv@a^0,c
  5332   001BEC  0E00               	movlw	0
  5333   001BEE  6E0B               	movwf	(___fldiv@a+1)^0,c
  5334   001BF0  0E00               	movlw	0
  5335   001BF2  6E0C               	movwf	(___fldiv@a+2)^0,c
  5336   001BF4  0E00               	movlw	0
  5337   001BF6  6E0D               	movwf	(___fldiv@a+3)^0,c
  5338   001BF8                     l4797:
  5339   001BF8  500A               	movf	___fldiv@a^0,w,c
  5340   001BFA  100B               	iorwf	(___fldiv@a+1)^0,w,c
  5341   001BFC  100C               	iorwf	(___fldiv@a+2)^0,w,c
  5342   001BFE  100D               	iorwf	(___fldiv@a+3)^0,w,c
  5343   001C00  A4D8               	btfss	status,2,c
  5344   001C02  EF05  F00E         	goto	u5051
  5345   001C06  EF07  F00E         	goto	u5050
  5346   001C0A                     u5051:
  5347   001C0A  EF1F  F00E         	goto	l4809
  5348   001C0E                     u5050:
  5349   001C0E  0E00               	movlw	0
  5350   001C10  6E06               	movwf	___fldiv@b^0,c
  5351   001C12  0E00               	movlw	0
  5352   001C14  6E07               	movwf	(___fldiv@b+1)^0,c
  5353   001C16  0E00               	movlw	0
  5354   001C18  6E08               	movwf	(___fldiv@b+2)^0,c
  5355   001C1A  0E00               	movlw	0
  5356   001C1C  6E09               	movwf	(___fldiv@b+3)^0,c
  5357   001C1E  0E80               	movlw	128
  5358   001C20  1208               	iorwf	(___fldiv@b+2)^0,f,c
  5359   001C22  0E7F               	movlw	127
  5360   001C24  1209               	iorwf	(___fldiv@b+3)^0,f,c
  5361   001C26                     l4803:
  5362   001C26  5016               	movf	___fldiv@sign^0,w,c
  5363   001C28  1209               	iorwf	(___fldiv@b+3)^0,f,c
  5364   001C2A  C006  F006         	movff	___fldiv@b,?___fldiv
  5365   001C2E  C007  F007         	movff	___fldiv@b+1,?___fldiv+1
  5366   001C32  C008  F008         	movff	___fldiv@b+2,?___fldiv+2
  5367   001C36  C009  F009         	movff	___fldiv@b+3,?___fldiv+3
  5368   001C3A  EF62  F00F         	goto	l1067
  5369   001C3E                     l4809:
  5370   001C3E  501D               	movf	___fldiv@bexp^0,w,c
  5371   001C40  A4D8               	btfss	status,2,c
  5372   001C42  EF25  F00E         	goto	u5061
  5373   001C46  EF27  F00E         	goto	u5060
  5374   001C4A                     u5061:
  5375   001C4A  EF31  F00E         	goto	l4817
  5376   001C4E                     u5060:
  5377   001C4E  0E00               	movlw	0
  5378   001C50  6E06               	movwf	?___fldiv^0,c
  5379   001C52  0E00               	movlw	0
  5380   001C54  6E07               	movwf	(?___fldiv+1)^0,c
  5381   001C56  0E00               	movlw	0
  5382   001C58  6E08               	movwf	(?___fldiv+2)^0,c
  5383   001C5A  0E00               	movlw	0
  5384   001C5C  6E09               	movwf	(?___fldiv+3)^0,c
  5385   001C5E  EF62  F00F         	goto	l1067
  5386   001C62                     l4817:
  5387   001C62  501E               	movf	___fldiv@aexp^0,w,c
  5388   001C64  C01D  F00E         	movff	___fldiv@bexp,??___fldiv
  5389   001C68  6A0F               	clrf	(??___fldiv+1)^0,c
  5390   001C6A  5E0E               	subwf	??___fldiv^0,f,c
  5391   001C6C  0E00               	movlw	0
  5392   001C6E  5A0F               	subwfb	(??___fldiv+1)^0,f,c
  5393   001C70  0E7F               	movlw	127
  5394   001C72  240E               	addwf	??___fldiv^0,w,c
  5395   001C74  6E17               	movwf	___fldiv@new_exp^0,c
  5396   001C76  0E00               	movlw	0
  5397   001C78  200F               	addwfc	(??___fldiv+1)^0,w,c
  5398   001C7A  6E18               	movwf	(___fldiv@new_exp+1)^0,c
  5399   001C7C  C006  F012         	movff	___fldiv@b,___fldiv@rem
  5400   001C80  C007  F013         	movff	___fldiv@b+1,___fldiv@rem+1
  5401   001C84  C008  F014         	movff	___fldiv@b+2,___fldiv@rem+2
  5402   001C88  C009  F015         	movff	___fldiv@b+3,___fldiv@rem+3
  5403   001C8C  0E00               	movlw	0
  5404   001C8E  6E06               	movwf	___fldiv@b^0,c
  5405   001C90  0E00               	movlw	0
  5406   001C92  6E07               	movwf	(___fldiv@b+1)^0,c
  5407   001C94  0E00               	movlw	0
  5408   001C96  6E08               	movwf	(___fldiv@b+2)^0,c
  5409   001C98  0E00               	movlw	0
  5410   001C9A  6E09               	movwf	(___fldiv@b+3)^0,c
  5411   001C9C  0E00               	movlw	0
  5412   001C9E  6E19               	movwf	___fldiv@grs^0,c
  5413   001CA0  0E00               	movlw	0
  5414   001CA2  6E1A               	movwf	(___fldiv@grs+1)^0,c
  5415   001CA4  0E00               	movlw	0
  5416   001CA6  6E1B               	movwf	(___fldiv@grs+2)^0,c
  5417   001CA8  0E00               	movlw	0
  5418   001CAA  6E1C               	movwf	(___fldiv@grs+3)^0,c
  5419   001CAC  0E00               	movlw	0
  5420   001CAE  6E1E               	movwf	___fldiv@aexp^0,c
  5421   001CB0  EF92  F00E         	goto	l1069
  5422   001CB4                     l4827:
  5423   001CB4  501E               	movf	___fldiv@aexp^0,w,c
  5424   001CB6  B4D8               	btfsc	status,2,c
  5425   001CB8  EF60  F00E         	goto	u5071
  5426   001CBC  EF62  F00E         	goto	u5070
  5427   001CC0                     u5071:
  5428   001CC0  EF79  F00E         	goto	l4835
  5429   001CC4                     u5070:
  5430   001CC4  90D8               	bcf	status,0,c
  5431   001CC6  3612               	rlcf	___fldiv@rem^0,f,c
  5432   001CC8  3613               	rlcf	(___fldiv@rem+1)^0,f,c
  5433   001CCA  3614               	rlcf	(___fldiv@rem+2)^0,f,c
  5434   001CCC  3615               	rlcf	(___fldiv@rem+3)^0,f,c
  5435   001CCE  90D8               	bcf	status,0,c
  5436   001CD0  3606               	rlcf	___fldiv@b^0,f,c
  5437   001CD2  3607               	rlcf	(___fldiv@b+1)^0,f,c
  5438   001CD4  3608               	rlcf	(___fldiv@b+2)^0,f,c
  5439   001CD6  3609               	rlcf	(___fldiv@b+3)^0,f,c
  5440   001CD8  AE1C               	btfss	(___fldiv@grs+3)^0,7,c
  5441   001CDA  EF71  F00E         	goto	u5081
  5442   001CDE  EF73  F00E         	goto	u5080
  5443   001CE2                     u5081:
  5444   001CE2  EF74  F00E         	goto	l1072
  5445   001CE6                     u5080:
  5446   001CE6  8006               	bsf	___fldiv@b^0,0,c
  5447   001CE8                     l1072:
  5448   001CE8  90D8               	bcf	status,0,c
  5449   001CEA  3619               	rlcf	___fldiv@grs^0,f,c
  5450   001CEC  361A               	rlcf	(___fldiv@grs+1)^0,f,c
  5451   001CEE  361B               	rlcf	(___fldiv@grs+2)^0,f,c
  5452   001CF0  361C               	rlcf	(___fldiv@grs+3)^0,f,c
  5453   001CF2                     l4835:
  5454   001CF2  500A               	movf	___fldiv@a^0,w,c
  5455   001CF4  5C12               	subwf	___fldiv@rem^0,w,c
  5456   001CF6  500B               	movf	(___fldiv@a+1)^0,w,c
  5457   001CF8  5813               	subwfb	(___fldiv@rem+1)^0,w,c
  5458   001CFA  500C               	movf	(___fldiv@a+2)^0,w,c
  5459   001CFC  5814               	subwfb	(___fldiv@rem+2)^0,w,c
  5460   001CFE  500D               	movf	(___fldiv@a+3)^0,w,c
  5461   001D00  5815               	subwfb	(___fldiv@rem+3)^0,w,c
  5462   001D02  A0D8               	btfss	status,0,c
  5463   001D04  EF86  F00E         	goto	u5091
  5464   001D08  EF88  F00E         	goto	u5090
  5465   001D0C                     u5091:
  5466   001D0C  EF91  F00E         	goto	l4841
  5467   001D10                     u5090:
  5468   001D10  8C1C               	bsf	(___fldiv@grs+3)^0,6,c
  5469   001D12  500A               	movf	___fldiv@a^0,w,c
  5470   001D14  5E12               	subwf	___fldiv@rem^0,f,c
  5471   001D16  500B               	movf	(___fldiv@a+1)^0,w,c
  5472   001D18  5A13               	subwfb	(___fldiv@rem+1)^0,f,c
  5473   001D1A  500C               	movf	(___fldiv@a+2)^0,w,c
  5474   001D1C  5A14               	subwfb	(___fldiv@rem+2)^0,f,c
  5475   001D1E  500D               	movf	(___fldiv@a+3)^0,w,c
  5476   001D20  5A15               	subwfb	(___fldiv@rem+3)^0,f,c
  5477   001D22                     l4841:
  5478   001D22  2A1E               	incf	___fldiv@aexp^0,f,c
  5479   001D24                     l1069:
  5480   001D24  0E19               	movlw	25
  5481   001D26  641E               	cpfsgt	___fldiv@aexp^0,c
  5482   001D28  EF98  F00E         	goto	u5101
  5483   001D2C  EF9A  F00E         	goto	u5100
  5484   001D30                     u5101:
  5485   001D30  EF5A  F00E         	goto	l4827
  5486   001D34                     u5100:
  5487   001D34  5012               	movf	___fldiv@rem^0,w,c
  5488   001D36  1013               	iorwf	(___fldiv@rem+1)^0,w,c
  5489   001D38  1014               	iorwf	(___fldiv@rem+2)^0,w,c
  5490   001D3A  1015               	iorwf	(___fldiv@rem+3)^0,w,c
  5491   001D3C  B4D8               	btfsc	status,2,c
  5492   001D3E  EFA3  F00E         	goto	u5111
  5493   001D42  EFA5  F00E         	goto	u5110
  5494   001D46                     u5111:
  5495   001D46  EFBD  F00E         	goto	l4853
  5496   001D4A                     u5110:
  5497   001D4A  8019               	bsf	___fldiv@grs^0,0,c
  5498   001D4C  EFBD  F00E         	goto	l4853
  5499   001D50                     l4847:
  5500   001D50  90D8               	bcf	status,0,c
  5501   001D52  3606               	rlcf	___fldiv@b^0,f,c
  5502   001D54  3607               	rlcf	(___fldiv@b+1)^0,f,c
  5503   001D56  3608               	rlcf	(___fldiv@b+2)^0,f,c
  5504   001D58  3609               	rlcf	(___fldiv@b+3)^0,f,c
  5505   001D5A  AE1C               	btfss	(___fldiv@grs+3)^0,7,c
  5506   001D5C  EFB2  F00E         	goto	u5121
  5507   001D60  EFB4  F00E         	goto	u5120
  5508   001D64                     u5121:
  5509   001D64  EFB5  F00E         	goto	l1078
  5510   001D68                     u5120:
  5511   001D68  8006               	bsf	___fldiv@b^0,0,c
  5512   001D6A                     l1078:
  5513   001D6A  90D8               	bcf	status,0,c
  5514   001D6C  3619               	rlcf	___fldiv@grs^0,f,c
  5515   001D6E  361A               	rlcf	(___fldiv@grs+1)^0,f,c
  5516   001D70  361B               	rlcf	(___fldiv@grs+2)^0,f,c
  5517   001D72  361C               	rlcf	(___fldiv@grs+3)^0,f,c
  5518   001D74  0617               	decf	___fldiv@new_exp^0,f,c
  5519   001D76  A0D8               	btfss	status,0,c
  5520   001D78  0618               	decf	(___fldiv@new_exp+1)^0,f,c
  5521   001D7A                     l4853:
  5522   001D7A  AE08               	btfss	(___fldiv@b+2)^0,7,c
  5523   001D7C  EFC2  F00E         	goto	u5131
  5524   001D80  EFC4  F00E         	goto	u5130
  5525   001D84                     u5131:
  5526   001D84  EFA8  F00E         	goto	l4847
  5527   001D88                     u5130:
  5528   001D88  0E00               	movlw	0
  5529   001D8A  6E1E               	movwf	___fldiv@aexp^0,c
  5530   001D8C  AE1C               	btfss	(___fldiv@grs+3)^0,7,c
  5531   001D8E  EFCB  F00E         	goto	u5141
  5532   001D92  EFCD  F00E         	goto	u5140
  5533   001D96                     u5141:
  5534   001D96  EFF1  F00E         	goto	l1080
  5535   001D9A                     u5140:
  5536   001D9A  0EFF               	movlw	255
  5537   001D9C  1419               	andwf	___fldiv@grs^0,w,c
  5538   001D9E  6E0E               	movwf	??___fldiv^0,c
  5539   001DA0  0EFF               	movlw	255
  5540   001DA2  141A               	andwf	(___fldiv@grs+1)^0,w,c
  5541   001DA4  6E0F               	movwf	(??___fldiv+1)^0,c
  5542   001DA6  0EFF               	movlw	255
  5543   001DA8  141B               	andwf	(___fldiv@grs+2)^0,w,c
  5544   001DAA  6E10               	movwf	(??___fldiv+2)^0,c
  5545   001DAC  0E7F               	movlw	127
  5546   001DAE  141C               	andwf	(___fldiv@grs+3)^0,w,c
  5547   001DB0  6E11               	movwf	(??___fldiv+3)^0,c
  5548   001DB2  500E               	movf	??___fldiv^0,w,c
  5549   001DB4  100F               	iorwf	(??___fldiv+1)^0,w,c
  5550   001DB6  1010               	iorwf	(??___fldiv+2)^0,w,c
  5551   001DB8  1011               	iorwf	(??___fldiv+3)^0,w,c
  5552   001DBA  B4D8               	btfsc	status,2,c
  5553   001DBC  EFE2  F00E         	goto	u5151
  5554   001DC0  EFE4  F00E         	goto	u5150
  5555   001DC4                     u5151:
  5556   001DC4  EFE8  F00E         	goto	l1081
  5557   001DC8                     u5150:
  5558   001DC8                     l4861:
  5559   001DC8  0E01               	movlw	1
  5560   001DCA  6E1E               	movwf	___fldiv@aexp^0,c
  5561   001DCC  EFF1  F00E         	goto	l1080
  5562   001DD0                     l1081:
  5563   001DD0  A006               	btfss	___fldiv@b^0,0,c
  5564   001DD2  EFED  F00E         	goto	u5161
  5565   001DD6  EFEF  F00E         	goto	u5160
  5566   001DDA                     u5161:
  5567   001DDA  EFF1  F00E         	goto	l1080
  5568   001DDE                     u5160:
  5569   001DDE  EFE4  F00E         	goto	l4861
  5570   001DE2                     l1080:
  5571   001DE2  501E               	movf	___fldiv@aexp^0,w,c
  5572   001DE4  B4D8               	btfsc	status,2,c
  5573   001DE6  EFF7  F00E         	goto	u5171
  5574   001DEA  EFF9  F00E         	goto	u5170
  5575   001DEE                     u5171:
  5576   001DEE  EF1D  F00F         	goto	l4873
  5577   001DF2                     u5170:
  5578   001DF2  0E01               	movlw	1
  5579   001DF4  2606               	addwf	___fldiv@b^0,f,c
  5580   001DF6  0E00               	movlw	0
  5581   001DF8  2207               	addwfc	(___fldiv@b+1)^0,f,c
  5582   001DFA  2208               	addwfc	(___fldiv@b+2)^0,f,c
  5583   001DFC  2209               	addwfc	(___fldiv@b+3)^0,f,c
  5584   001DFE  A009               	btfss	(___fldiv@b+3)^0,0,c
  5585   001E00  EF04  F00F         	goto	u5181
  5586   001E04  EF06  F00F         	goto	u5180
  5587   001E08                     u5181:
  5588   001E08  EF1D  F00F         	goto	l4873
  5589   001E0C                     u5180:
  5590   001E0C  C006  F00E         	movff	___fldiv@b,??___fldiv
  5591   001E10  C007  F00F         	movff	___fldiv@b+1,??___fldiv+1
  5592   001E14  C008  F010         	movff	___fldiv@b+2,??___fldiv+2
  5593   001E18  C009  F011         	movff	___fldiv@b+3,??___fldiv+3
  5594   001E1C  3411               	rlcf	(??___fldiv+3)^0,w,c
  5595   001E1E  3211               	rrcf	(??___fldiv+3)^0,f,c
  5596   001E20  3210               	rrcf	(??___fldiv+2)^0,f,c
  5597   001E22  320F               	rrcf	(??___fldiv+1)^0,f,c
  5598   001E24  320E               	rrcf	??___fldiv^0,f,c
  5599   001E26  C00E  F006         	movff	??___fldiv,___fldiv@b
  5600   001E2A  C00F  F007         	movff	??___fldiv+1,___fldiv@b+1
  5601   001E2E  C010  F008         	movff	??___fldiv+2,___fldiv@b+2
  5602   001E32  C011  F009         	movff	??___fldiv+3,___fldiv@b+3
  5603   001E36  4A17               	infsnz	___fldiv@new_exp^0,f,c
  5604   001E38  2A18               	incf	(___fldiv@new_exp+1)^0,f,c
  5605   001E3A                     l4873:
  5606   001E3A  BE18               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5607   001E3C  EF28  F00F         	goto	u5191
  5608   001E40  5018               	movf	(___fldiv@new_exp+1)^0,w,c
  5609   001E42  E108               	bnz	u5190
  5610   001E44  2817               	incf	___fldiv@new_exp^0,w,c
  5611   001E46  A0D8               	btfss	status,0,c
  5612   001E48  EF28  F00F         	goto	u5191
  5613   001E4C  EF2A  F00F         	goto	u5190
  5614   001E50                     u5191:
  5615   001E50  EF35  F00F         	goto	l4877
  5616   001E54                     u5190:
  5617   001E54  0E00               	movlw	0
  5618   001E56  6E18               	movwf	(___fldiv@new_exp+1)^0,c
  5619   001E58  6817               	setf	___fldiv@new_exp^0,c
  5620   001E5A  0E00               	movlw	0
  5621   001E5C  6E06               	movwf	___fldiv@b^0,c
  5622   001E5E  0E00               	movlw	0
  5623   001E60  6E07               	movwf	(___fldiv@b+1)^0,c
  5624   001E62  0E00               	movlw	0
  5625   001E64  6E08               	movwf	(___fldiv@b+2)^0,c
  5626   001E66  0E00               	movlw	0
  5627   001E68  6E09               	movwf	(___fldiv@b+3)^0,c
  5628   001E6A                     l4877:
  5629   001E6A  BE18               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5630   001E6C  EF42  F00F         	goto	u5200
  5631   001E70  5018               	movf	(___fldiv@new_exp+1)^0,w,c
  5632   001E72  E106               	bnz	u5201
  5633   001E74  0417               	decf	___fldiv@new_exp^0,w,c
  5634   001E76  B0D8               	btfsc	status,0,c
  5635   001E78  EF40  F00F         	goto	u5201
  5636   001E7C  EF42  F00F         	goto	u5200
  5637   001E80                     u5201:
  5638   001E80  EF50  F00F         	goto	l4881
  5639   001E84                     u5200:
  5640   001E84  0E00               	movlw	0
  5641   001E86  6E18               	movwf	(___fldiv@new_exp+1)^0,c
  5642   001E88  0E00               	movlw	0
  5643   001E8A  6E17               	movwf	___fldiv@new_exp^0,c
  5644   001E8C  0E00               	movlw	0
  5645   001E8E  6E06               	movwf	___fldiv@b^0,c
  5646   001E90  0E00               	movlw	0
  5647   001E92  6E07               	movwf	(___fldiv@b+1)^0,c
  5648   001E94  0E00               	movlw	0
  5649   001E96  6E08               	movwf	(___fldiv@b+2)^0,c
  5650   001E98  0E00               	movlw	0
  5651   001E9A  6E09               	movwf	(___fldiv@b+3)^0,c
  5652   001E9C  0E00               	movlw	0
  5653   001E9E  6E16               	movwf	___fldiv@sign^0,c
  5654   001EA0                     l4881:
  5655   001EA0  C017  F01D         	movff	___fldiv@new_exp,___fldiv@bexp
  5656   001EA4  A01D               	btfss	___fldiv@bexp^0,0,c
  5657   001EA6  EF57  F00F         	goto	u5211
  5658   001EAA  EF59  F00F         	goto	u5210
  5659   001EAE                     u5211:
  5660   001EAE  EF5C  F00F         	goto	l4887
  5661   001EB2                     u5210:
  5662   001EB2  8E08               	bsf	(___fldiv@b+2)^0,7,c
  5663   001EB4  EF5D  F00F         	goto	l4889
  5664   001EB8                     l4887:
  5665   001EB8  9E08               	bcf	(___fldiv@b+2)^0,7,c
  5666   001EBA                     l4889:
  5667   001EBA  90D8               	bcf	status,0,c
  5668   001EBC  301D               	rrcf	___fldiv@bexp^0,w,c
  5669   001EBE  6E09               	movwf	(___fldiv@b+3)^0,c
  5670   001EC0  EF13  F00E         	goto	l4803
  5671   001EC4                     l1067:
  5672   001EC4  0012               	return		;funcret
  5673   001EC6                     __end_of___fldiv:
  5674                           	callstack 0
  5675                           
  5676 ;; *************** function _atoi *****************
  5677 ;; Defined at:
  5678 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  5679 ;; Parameters:    Size  Location     Type
  5680 ;;  s               2   11[COMRAM] PTR const unsigned char 
  5681 ;;		 -> STR_1(23), 
  5682 ;; Auto vars:     Size  Location     Type
  5683 ;;  n               2   18[COMRAM] int 
  5684 ;;  neg             2   16[COMRAM] int 
  5685 ;; Return value:  Size  Location     Type
  5686 ;;                  2   11[COMRAM] int 
  5687 ;; Registers used:
  5688 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5689 ;; Tracked objects:
  5690 ;;		On entry : 0/0
  5691 ;;		On exit  : 0/0
  5692 ;;		Unchanged: 0/0
  5693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5694 ;;      Params:         2       0       0       0       0       0       0       0       0
  5695 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5696 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5697 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5698 ;;Total ram usage:        9 bytes
  5699 ;; Hardware stack levels used: 1
  5700 ;; Hardware stack levels required when called: 5
  5701 ;; This function calls:
  5702 ;;		___wmul
  5703 ;;		_isdigit
  5704 ;;		_isspace
  5705 ;; This function is called by:
  5706 ;;		_vfpfcnvrt
  5707 ;; This function uses a non-reentrant model
  5708 ;;
  5709                           
  5710                           	psect	text21
  5711   0025A2                     __ptext21:
  5712                           	callstack 0
  5713   0025A2                     _atoi:
  5714                           	callstack 22
  5715   0025A2  0E00               	movlw	0
  5716   0025A4  6E14               	movwf	(atoi@n+1)^0,c
  5717   0025A6  0E00               	movlw	0
  5718   0025A8  6E13               	movwf	atoi@n^0,c
  5719   0025AA  0E00               	movlw	0
  5720   0025AC  6E12               	movwf	(atoi@neg+1)^0,c
  5721   0025AE  0E00               	movlw	0
  5722   0025B0  6E11               	movwf	atoi@neg^0,c
  5723   0025B2  EFDD  F012         	goto	l5451
  5724   0025B6                     l5447:
  5725   0025B6  4A0C               	infsnz	atoi@s^0,f,c
  5726   0025B8  2A0D               	incf	(atoi@s+1)^0,f,c
  5727   0025BA                     l5451:
  5728   0025BA  C00C  FFF6         	movff	atoi@s,tblptrl
  5729   0025BE  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5730   0025C2                     	if	0	;tblptru may be non-zero
  5731   0025C2                     	endif
  5732   0025C2                     	if	0	;tblptru may be non-zero
  5733   0025C2                     	endif
  5734   0025C2  0008               	tblrd		*
  5735   0025C4  50F5               	movf	tablat,w,c
  5736   0025C6  0A20               	xorlw	32
  5737   0025C8  B4D8               	btfsc	status,2,c
  5738   0025CA  EFE9  F012         	goto	u6151
  5739   0025CE  EFEB  F012         	goto	u6150
  5740   0025D2                     u6151:
  5741   0025D2  EFDB  F012         	goto	l5447
  5742   0025D6                     u6150:
  5743   0025D6  C00C  FFF6         	movff	atoi@s,tblptrl
  5744   0025DA  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5745   0025DE                     	if	0	;tblptru may be non-zero
  5746   0025DE                     	endif
  5747   0025DE                     	if	0	;tblptru may be non-zero
  5748   0025DE                     	endif
  5749   0025DE  0008               	tblrd		*
  5750   0025E0  CFF5 F00E          	movff	tablat,??_atoi
  5751   0025E4  0EF7               	movlw	247
  5752   0025E6  240E               	addwf	??_atoi^0,w,c
  5753   0025E8  6E0F               	movwf	(??_atoi+1)^0,c
  5754   0025EA  6A10               	clrf	(??_atoi+2)^0,c
  5755   0025EC  0EFF               	movlw	255
  5756   0025EE  2210               	addwfc	(??_atoi+2)^0,f,c
  5757   0025F0  5010               	movf	(??_atoi+2)^0,w,c
  5758   0025F2  E109               	bnz	u6160
  5759   0025F4  0E05               	movlw	5
  5760   0025F6  5C0F               	subwf	(??_atoi+1)^0,w,c
  5761   0025F8  A0D8               	btfss	status,0,c
  5762   0025FA  EF01  F013         	goto	u6161
  5763   0025FE  EF03  F013         	goto	u6160
  5764   002602                     u6161:
  5765   002602  EFDB  F012         	goto	l5447
  5766   002606                     u6160:
  5767   002606  EF0D  F013         	goto	l5459
  5768   00260A                     l5455:
  5769   00260A  0E00               	movlw	0
  5770   00260C  6E12               	movwf	(atoi@neg+1)^0,c
  5771   00260E  0E01               	movlw	1
  5772   002610  6E11               	movwf	atoi@neg^0,c
  5773   002612                     l5457:
  5774   002612  4A0C               	infsnz	atoi@s^0,f,c
  5775   002614  2A0D               	incf	(atoi@s+1)^0,f,c
  5776   002616  EF42  F013         	goto	l5467
  5777   00261A                     l5459:
  5778   00261A  C00C  FFF6         	movff	atoi@s,tblptrl
  5779   00261E  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5780   002622                     	if	0	;tblptru may be non-zero
  5781   002622                     	endif
  5782   002622                     	if	0	;tblptru may be non-zero
  5783   002622                     	endif
  5784   002622  0008               	tblrd		*
  5785   002624  50F5               	movf	tablat,w,c
  5786   002626  6E0E               	movwf	??_atoi^0,c
  5787   002628  6A0F               	clrf	(??_atoi+1)^0,c
  5788                           
  5789                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5790                           ; Switch size 1, requested type "simple"
  5791                           ; Number of cases is 1, Range of values is 0 to 0
  5792                           ; switch strategies available:
  5793                           ; Name         Instructions Cycles
  5794                           ; simple_byte            4     3 (average)
  5795                           ;	Chosen strategy is simple_byte
  5796   00262A  500F               	movf	(??_atoi+1)^0,w,c
  5797   00262C  0A00               	xorlw	0	; case 0
  5798   00262E  B4D8               	btfsc	status,2,c
  5799   002630  EF1C  F013         	goto	l5721
  5800   002634  EF42  F013         	goto	l5467
  5801   002638                     l5721:
  5802                           
  5803                           ; Switch size 1, requested type "simple"
  5804                           ; Number of cases is 2, Range of values is 43 to 45
  5805                           ; switch strategies available:
  5806                           ; Name         Instructions Cycles
  5807                           ; simple_byte            7     4 (average)
  5808                           ;	Chosen strategy is simple_byte
  5809   002638  500E               	movf	??_atoi^0,w,c
  5810   00263A  0A2B               	xorlw	43	; case 43
  5811   00263C  B4D8               	btfsc	status,2,c
  5812   00263E  EF09  F013         	goto	l5457
  5813   002642  0A06               	xorlw	6	; case 45
  5814   002644  B4D8               	btfsc	status,2,c
  5815   002646  EF05  F013         	goto	l5455
  5816   00264A  EF42  F013         	goto	l5467
  5817   00264E                     l5461:
  5818   00264E  C013  F006         	movff	atoi@n,___wmul@multiplier
  5819   002652  C014  F007         	movff	atoi@n+1,___wmul@multiplier+1
  5820   002656  0E00               	movlw	0
  5821   002658  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  5822   00265A  0E0A               	movlw	10
  5823   00265C  6E08               	movwf	___wmul@multiplicand^0,c
  5824   00265E  EC32  F01A         	call	___wmul	;wreg free
  5825   002662  C00C  FFF6         	movff	atoi@s,tblptrl
  5826   002666  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5827   00266A                     	if	0	;tblptru may be non-zero
  5828   00266A                     	endif
  5829   00266A                     	if	0	;tblptru may be non-zero
  5830   00266A                     	endif
  5831   00266A  0008               	tblrd		*
  5832   00266C  50F5               	movf	tablat,w,c
  5833   00266E  5E06               	subwf	?___wmul^0,f,c
  5834   002670  0E00               	movlw	0
  5835   002672  5A07               	subwfb	(?___wmul+1)^0,f,c
  5836   002674  0E30               	movlw	48
  5837   002676  2406               	addwf	?___wmul^0,w,c
  5838   002678  6E13               	movwf	atoi@n^0,c
  5839   00267A  0E00               	movlw	0
  5840   00267C  2007               	addwfc	(?___wmul+1)^0,w,c
  5841   00267E  6E14               	movwf	(atoi@n+1)^0,c
  5842   002680  EF09  F013         	goto	l5457
  5843   002684                     l5467:
  5844   002684  C00C  FFF6         	movff	atoi@s,tblptrl
  5845   002688  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5846   00268C                     	if	0	;tblptru may be non-zero
  5847   00268C                     	endif
  5848   00268C                     	if	0	;tblptru may be non-zero
  5849   00268C                     	endif
  5850   00268C  0008               	tblrd		*
  5851   00268E  CFF5 F00E          	movff	tablat,??_atoi
  5852   002692  0ED0               	movlw	208
  5853   002694  240E               	addwf	??_atoi^0,w,c
  5854   002696  6E0F               	movwf	(??_atoi+1)^0,c
  5855   002698  6A10               	clrf	(??_atoi+2)^0,c
  5856   00269A  0EFF               	movlw	255
  5857   00269C  2210               	addwfc	(??_atoi+2)^0,f,c
  5858   00269E  5010               	movf	(??_atoi+2)^0,w,c
  5859   0026A0  E109               	bnz	u6170
  5860   0026A2  0E0A               	movlw	10
  5861   0026A4  5C0F               	subwf	(??_atoi+1)^0,w,c
  5862   0026A6  A0D8               	btfss	status,0,c
  5863   0026A8  EF58  F013         	goto	u6171
  5864   0026AC  EF5A  F013         	goto	u6170
  5865   0026B0                     u6171:
  5866   0026B0  EF27  F013         	goto	l5461
  5867   0026B4                     u6170:
  5868   0026B4  5011               	movf	atoi@neg^0,w,c
  5869   0026B6  1012               	iorwf	(atoi@neg+1)^0,w,c
  5870   0026B8  A4D8               	btfss	status,2,c
  5871   0026BA  EF61  F013         	goto	u6181
  5872   0026BE  EF63  F013         	goto	u6180
  5873   0026C2                     u6181:
  5874   0026C2  EF71  F013         	goto	l1320
  5875   0026C6                     u6180:
  5876   0026C6  C013  F00E         	movff	atoi@n,??_atoi
  5877   0026CA  C014  F00F         	movff	atoi@n+1,??_atoi+1
  5878   0026CE  1E0E               	comf	??_atoi^0,f,c
  5879   0026D0  1E0F               	comf	(??_atoi+1)^0,f,c
  5880   0026D2  4A0E               	infsnz	??_atoi^0,f,c
  5881   0026D4  2A0F               	incf	(??_atoi+1)^0,f,c
  5882   0026D6  C00E  F00C         	movff	??_atoi,?_atoi
  5883   0026DA  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  5884   0026DE  EF75  F013         	goto	l1323
  5885   0026E2                     l1320:
  5886   0026E2  C013  F00C         	movff	atoi@n,?_atoi
  5887   0026E6  C014  F00D         	movff	atoi@n+1,?_atoi+1
  5888   0026EA                     l1323:
  5889   0026EA  0012               	return		;funcret
  5890   0026EC                     __end_of_atoi:
  5891                           	callstack 0
  5892                           
  5893 ;; *************** function _isspace *****************
  5894 ;; Defined at:
  5895 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  5896 ;; Parameters:    Size  Location     Type
  5897 ;;  c               2    5[COMRAM] int 
  5898 ;; Auto vars:     Size  Location     Type
  5899 ;;		None
  5900 ;; Return value:  Size  Location     Type
  5901 ;;                  2    5[COMRAM] int 
  5902 ;; Registers used:
  5903 ;;		wreg, status,2, status,0
  5904 ;; Tracked objects:
  5905 ;;		On entry : 0/0
  5906 ;;		On exit  : 0/0
  5907 ;;		Unchanged: 0/0
  5908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5909 ;;      Params:         2       0       0       0       0       0       0       0       0
  5910 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5911 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5912 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5913 ;;Total ram usage:        5 bytes
  5914 ;; Hardware stack levels used: 1
  5915 ;; Hardware stack levels required when called: 4
  5916 ;; This function calls:
  5917 ;;		Nothing
  5918 ;; This function is called by:
  5919 ;;		_atoi
  5920 ;; This function uses a non-reentrant model
  5921 ;;
  5922                           
  5923                           	psect	text22
  5924   00309E                     __ptext22:
  5925                           	callstack 0
  5926   00309E                     _isspace:
  5927                           	callstack 22
  5928   00309E  0E01               	movlw	1
  5929   0030A0  6E0A               	movwf	_isspace$1900^0,c
  5930   0030A2  0E20               	movlw	32
  5931   0030A4  1806               	xorwf	isspace@c^0,w,c
  5932   0030A6  1007               	iorwf	(isspace@c+1)^0,w,c
  5933   0030A8  B4D8               	btfsc	status,2,c
  5934   0030AA  EF59  F018         	goto	u5811
  5935   0030AE  EF5B  F018         	goto	u5810
  5936   0030B2                     u5811:
  5937   0030B2  EF6E  F018         	goto	l5219
  5938   0030B6                     u5810:
  5939   0030B6  0EF7               	movlw	247
  5940   0030B8  2406               	addwf	isspace@c^0,w,c
  5941   0030BA  6E08               	movwf	??_isspace^0,c
  5942   0030BC  0EFF               	movlw	255
  5943   0030BE  2007               	addwfc	(isspace@c+1)^0,w,c
  5944   0030C0  6E09               	movwf	(??_isspace+1)^0,c
  5945   0030C2  5009               	movf	(??_isspace+1)^0,w,c
  5946   0030C4  E109               	bnz	u5820
  5947   0030C6  0E05               	movlw	5
  5948   0030C8  5C08               	subwf	??_isspace^0,w,c
  5949   0030CA  A0D8               	btfss	status,0,c
  5950   0030CC  EF6A  F018         	goto	u5821
  5951   0030D0  EF6C  F018         	goto	u5820
  5952   0030D4                     u5821:
  5953   0030D4  EF6E  F018         	goto	l5219
  5954   0030D8                     u5820:
  5955   0030D8  0E00               	movlw	0
  5956   0030DA  6E0A               	movwf	_isspace$1900^0,c
  5957   0030DC                     l5219:
  5958   0030DC  C00A  F006         	movff	_isspace$1900,?_isspace
  5959   0030E0  6A07               	clrf	(?_isspace+1)^0,c
  5960   0030E2  0012               	return		;funcret
  5961   0030E4                     __end_of_isspace:
  5962                           	callstack 0
  5963                           
  5964 ;; *************** function _isdigit *****************
  5965 ;; Defined at:
  5966 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  5967 ;; Parameters:    Size  Location     Type
  5968 ;;  c               2    5[COMRAM] int 
  5969 ;; Auto vars:     Size  Location     Type
  5970 ;;		None
  5971 ;; Return value:  Size  Location     Type
  5972 ;;                  2    5[COMRAM] int 
  5973 ;; Registers used:
  5974 ;;		wreg, status,2, status,0
  5975 ;; Tracked objects:
  5976 ;;		On entry : 0/0
  5977 ;;		On exit  : 0/0
  5978 ;;		Unchanged: 0/0
  5979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5980 ;;      Params:         2       0       0       0       0       0       0       0       0
  5981 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5982 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5983 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5984 ;;Total ram usage:        4 bytes
  5985 ;; Hardware stack levels used: 1
  5986 ;; Hardware stack levels required when called: 4
  5987 ;; This function calls:
  5988 ;;		Nothing
  5989 ;; This function is called by:
  5990 ;;		_vfpfcnvrt
  5991 ;;		_atoi
  5992 ;; This function uses a non-reentrant model
  5993 ;;
  5994                           
  5995                           	psect	text23
  5996   0033BE                     __ptext23:
  5997                           	callstack 0
  5998   0033BE                     _isdigit:
  5999                           	callstack 23
  6000   0033BE  0ED0               	movlw	208
  6001   0033C0  2406               	addwf	isdigit@c^0,w,c
  6002   0033C2  6E08               	movwf	??_isdigit^0,c
  6003   0033C4  0EFF               	movlw	255
  6004   0033C6  2007               	addwfc	(isdigit@c+1)^0,w,c
  6005   0033C8  6E09               	movwf	(??_isdigit+1)^0,c
  6006   0033CA  5009               	movf	(??_isdigit+1)^0,w,c
  6007   0033CC  E10A               	bnz	u5790
  6008   0033CE  0E0A               	movlw	10
  6009   0033D0  5C08               	subwf	??_isdigit^0,w,c
  6010   0033D2  A0D8               	btfss	status,0,c
  6011   0033D4  EFEE  F019         	goto	u5791
  6012   0033D8  EFF1  F019         	goto	u5790
  6013   0033DC                     u5791:
  6014   0033DC  0E01               	movlw	1
  6015   0033DE  EFF2  F019         	goto	u5800
  6016   0033E2                     u5790:
  6017   0033E2  0E00               	movlw	0
  6018   0033E4                     u5800:
  6019   0033E4  6E06               	movwf	?_isdigit^0,c
  6020   0033E6  6A07               	clrf	(?_isdigit+1)^0,c
  6021   0033E8  0012               	return		;funcret
  6022   0033EA                     __end_of_isdigit:
  6023                           	callstack 0
  6024                           
  6025 ;; *************** function ___wmul *****************
  6026 ;; Defined at:
  6027 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  6028 ;; Parameters:    Size  Location     Type
  6029 ;;  multiplier      2    5[COMRAM] unsigned int 
  6030 ;;  multiplicand    2    7[COMRAM] unsigned int 
  6031 ;; Auto vars:     Size  Location     Type
  6032 ;;  product         2    9[COMRAM] unsigned int 
  6033 ;; Return value:  Size  Location     Type
  6034 ;;                  2    5[COMRAM] unsigned int 
  6035 ;; Registers used:
  6036 ;;		wreg, status,2, status,0, prodl, prodh
  6037 ;; Tracked objects:
  6038 ;;		On entry : 0/0
  6039 ;;		On exit  : 0/0
  6040 ;;		Unchanged: 0/0
  6041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6042 ;;      Params:         4       0       0       0       0       0       0       0       0
  6043 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6044 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6045 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6046 ;;Total ram usage:        6 bytes
  6047 ;; Hardware stack levels used: 1
  6048 ;; Hardware stack levels required when called: 4
  6049 ;; This function calls:
  6050 ;;		Nothing
  6051 ;; This function is called by:
  6052 ;;		_atoi
  6053 ;; This function uses a non-reentrant model
  6054 ;;
  6055                           
  6056                           	psect	text24
  6057   003464                     __ptext24:
  6058                           	callstack 0
  6059   003464                     ___wmul:
  6060                           	callstack 22
  6061   003464  5006               	movf	___wmul@multiplier^0,w,c
  6062   003466  0208               	mulwf	___wmul@multiplicand^0,c
  6063   003468  CFF3 F00A          	movff	prodl,___wmul@product
  6064   00346C  CFF4 F00B          	movff	prodh,___wmul@product+1
  6065   003470  5006               	movf	___wmul@multiplier^0,w,c
  6066   003472  0209               	mulwf	(___wmul@multiplicand+1)^0,c
  6067   003474  50F3               	movf	243,w,c
  6068   003476  260B               	addwf	(___wmul@product+1)^0,f,c
  6069   003478  5007               	movf	(___wmul@multiplier+1)^0,w,c
  6070   00347A  0208               	mulwf	___wmul@multiplicand^0,c
  6071   00347C  50F3               	movf	243,w,c
  6072   00347E  260B               	addwf	(___wmul@product+1)^0,f,c
  6073   003480  C00A  F006         	movff	___wmul@product,?___wmul
  6074   003484  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  6075   003488  0012               	return		;funcret
  6076   00348A                     __end_of___wmul:
  6077                           	callstack 0
  6078                           
  6079 ;; *************** function _convertValue *****************
  6080 ;; Defined at:
  6081 ;;		line 63 in file "main.c"
  6082 ;; Parameters:    Size  Location     Type
  6083 ;;  val             2   44[COMRAM] PTR unsigned short 
  6084 ;;		 -> main@adcVal(2), 
  6085 ;; Auto vars:     Size  Location     Type
  6086 ;;		None
  6087 ;; Return value:  Size  Location     Type
  6088 ;;                  4   44[COMRAM] PTR unsigned short 
  6089 ;; Registers used:
  6090 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6091 ;; Tracked objects:
  6092 ;;		On entry : 0/0
  6093 ;;		On exit  : 0/0
  6094 ;;		Unchanged: 0/0
  6095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6096 ;;      Params:         4       0       0       0       0       0       0       0       0
  6097 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6098 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6099 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6100 ;;Total ram usage:        6 bytes
  6101 ;; Hardware stack levels used: 1
  6102 ;; Hardware stack levels required when called: 5
  6103 ;; This function calls:
  6104 ;;		___flmul
  6105 ;;		___xxtofl
  6106 ;; This function is called by:
  6107 ;;		_main
  6108 ;; This function uses a non-reentrant model
  6109 ;;
  6110                           
  6111                           	psect	text25
  6112   002F08                     __ptext25:
  6113                           	callstack 0
  6114   002F08                     _convertValue:
  6115                           	callstack 25
  6116   002F08                     
  6117                           ;main.c: 64:     return ((*val) * 0.001526);
  6118   002F08  C02D  FFD9         	movff	convertValue@val,fsr2l
  6119   002F0C  C02E  FFDA         	movff	convertValue@val+1,fsr2h
  6120   002F10  CFDE F031          	movff	postinc2,??_convertValue
  6121   002F14  CFDD F032          	movff	postdec2,??_convertValue+1
  6122   002F18  C031  F006         	movff	??_convertValue,___xxtofl@val
  6123   002F1C  C032  F007         	movff	??_convertValue+1,___xxtofl@val+1
  6124   002F20  6A08               	clrf	(___xxtofl@val+2)^0,c
  6125   002F22  6A09               	clrf	(___xxtofl@val+3)^0,c
  6126   002F24  0E00               	movlw	0
  6127   002F26  ECF7  F011         	call	___xxtofl
  6128   002F2A  C006  F014         	movff	?___xxtofl,___flmul@b
  6129   002F2E  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  6130   002F32  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  6131   002F36  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  6132   002F3A  0E10               	movlw	16
  6133   002F3C  6E18               	movwf	___flmul@a^0,c
  6134   002F3E  0E04               	movlw	4
  6135   002F40  6E19               	movwf	(___flmul@a+1)^0,c
  6136   002F42  0EC8               	movlw	200
  6137   002F44  6E1A               	movwf	(___flmul@a+2)^0,c
  6138   002F46  0E3A               	movlw	58
  6139   002F48  6E1B               	movwf	(___flmul@a+3)^0,c
  6140   002F4A  EC81  F00B         	call	___flmul	;wreg free
  6141   002F4E  C014  F02D         	movff	?___flmul,?_convertValue
  6142   002F52  C015  F02E         	movff	?___flmul+1,?_convertValue+1
  6143   002F56  C016  F02F         	movff	?___flmul+2,?_convertValue+2
  6144   002F5A  C017  F030         	movff	?___flmul+3,?_convertValue+3
  6145   002F5E  0012               	return		;funcret
  6146   002F60                     __end_of_convertValue:
  6147                           	callstack 0
  6148                           
  6149 ;; *************** function ___xxtofl *****************
  6150 ;; Defined at:
  6151 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  6152 ;; Parameters:    Size  Location     Type
  6153 ;;  sign            1    wreg     unsigned char 
  6154 ;;  val             4    5[COMRAM] long 
  6155 ;; Auto vars:     Size  Location     Type
  6156 ;;  sign            1   13[COMRAM] unsigned char 
  6157 ;;  arg             4   15[COMRAM] unsigned long 
  6158 ;;  exp             1   14[COMRAM] unsigned char 
  6159 ;; Return value:  Size  Location     Type
  6160 ;;                  4    5[COMRAM] unsigned char 
  6161 ;; Registers used:
  6162 ;;		wreg, status,2, status,0
  6163 ;; Tracked objects:
  6164 ;;		On entry : 0/0
  6165 ;;		On exit  : 0/0
  6166 ;;		Unchanged: 0/0
  6167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6168 ;;      Params:         4       0       0       0       0       0       0       0       0
  6169 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6170 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6171 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6172 ;;Total ram usage:       14 bytes
  6173 ;; Hardware stack levels used: 1
  6174 ;; Hardware stack levels required when called: 4
  6175 ;; This function calls:
  6176 ;;		Nothing
  6177 ;; This function is called by:
  6178 ;;		_convertValue
  6179 ;; This function uses a non-reentrant model
  6180 ;;
  6181                           
  6182                           	psect	text26
  6183   0023EE                     __ptext26:
  6184                           	callstack 0
  6185   0023EE                     ___xxtofl:
  6186                           	callstack 25
  6187                           
  6188                           ;incstack = 0
  6189                           ;___xxtofl@sign stored from wreg
  6190   0023EE  6E0E               	movwf	___xxtofl@sign^0,c
  6191   0023F0  500E               	movf	___xxtofl@sign^0,w,c
  6192   0023F2  B4D8               	btfsc	status,2,c
  6193   0023F4  EFFE  F011         	goto	u4101
  6194   0023F8  EF00  F012         	goto	u4100
  6195   0023FC                     u4101:
  6196   0023FC  EF22  F012         	goto	l1140
  6197   002400                     u4100:
  6198   002400  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  6199   002402  EF07  F012         	goto	u4110
  6200   002406  EF05  F012         	goto	u4111
  6201   00240A                     u4111:
  6202   00240A  EF22  F012         	goto	l1140
  6203   00240E                     u4110:
  6204   00240E  C006  F00A         	movff	___xxtofl@val,??___xxtofl
  6205   002412  C007  F00B         	movff	___xxtofl@val+1,??___xxtofl+1
  6206   002416  C008  F00C         	movff	___xxtofl@val+2,??___xxtofl+2
  6207   00241A  C009  F00D         	movff	___xxtofl@val+3,??___xxtofl+3
  6208   00241E  1E0A               	comf	??___xxtofl^0,f,c
  6209   002420  1E0B               	comf	(??___xxtofl+1)^0,f,c
  6210   002422  1E0C               	comf	(??___xxtofl+2)^0,f,c
  6211   002424  1E0D               	comf	(??___xxtofl+3)^0,f,c
  6212   002426  2A0A               	incf	??___xxtofl^0,f,c
  6213   002428  0E00               	movlw	0
  6214   00242A  220B               	addwfc	(??___xxtofl+1)^0,f,c
  6215   00242C  220C               	addwfc	(??___xxtofl+2)^0,f,c
  6216   00242E  220D               	addwfc	(??___xxtofl+3)^0,f,c
  6217   002430  C00A  F010         	movff	??___xxtofl,___xxtofl@arg
  6218   002434  C00B  F011         	movff	??___xxtofl+1,___xxtofl@arg+1
  6219   002438  C00C  F012         	movff	??___xxtofl+2,___xxtofl@arg+2
  6220   00243C  C00D  F013         	movff	??___xxtofl+3,___xxtofl@arg+3
  6221   002440  EF2A  F012         	goto	l4169
  6222   002444                     l1140:
  6223   002444  C006  F010         	movff	___xxtofl@val,___xxtofl@arg
  6224   002448  C007  F011         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6225   00244C  C008  F012         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6226   002450  C009  F013         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6227   002454                     l4169:
  6228   002454  5006               	movf	___xxtofl@val^0,w,c
  6229   002456  1007               	iorwf	(___xxtofl@val+1)^0,w,c
  6230   002458  1008               	iorwf	(___xxtofl@val+2)^0,w,c
  6231   00245A  1009               	iorwf	(___xxtofl@val+3)^0,w,c
  6232   00245C  A4D8               	btfss	status,2,c
  6233   00245E  EF33  F012         	goto	u4121
  6234   002462  EF35  F012         	goto	u4120
  6235   002466                     u4121:
  6236   002466  EF3F  F012         	goto	l4175
  6237   00246A                     u4120:
  6238   00246A  0E00               	movlw	0
  6239   00246C  6E06               	movwf	?___xxtofl^0,c
  6240   00246E  0E00               	movlw	0
  6241   002470  6E07               	movwf	(?___xxtofl+1)^0,c
  6242   002472  0E00               	movlw	0
  6243   002474  6E08               	movwf	(?___xxtofl+2)^0,c
  6244   002476  0E00               	movlw	0
  6245   002478  6E09               	movwf	(?___xxtofl+3)^0,c
  6246   00247A  EFD0  F012         	goto	l1143
  6247   00247E                     l4175:
  6248   00247E  0E96               	movlw	150
  6249   002480  6E0F               	movwf	___xxtofl@exp^0,c
  6250   002482  EF49  F012         	goto	l4179
  6251   002486                     l4177:
  6252   002486  2A0F               	incf	___xxtofl@exp^0,f,c
  6253   002488  90D8               	bcf	status,0,c
  6254   00248A  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  6255   00248C  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  6256   00248E  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  6257   002490  3210               	rrcf	___xxtofl@arg^0,f,c
  6258   002492                     l4179:
  6259   002492  0E00               	movlw	0
  6260   002494  1410               	andwf	___xxtofl@arg^0,w,c
  6261   002496  6E0A               	movwf	??___xxtofl^0,c
  6262   002498  0E00               	movlw	0
  6263   00249A  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  6264   00249C  6E0B               	movwf	(??___xxtofl+1)^0,c
  6265   00249E  0E00               	movlw	0
  6266   0024A0  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  6267   0024A2  6E0C               	movwf	(??___xxtofl+2)^0,c
  6268   0024A4  0EFE               	movlw	254
  6269   0024A6  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  6270   0024A8  6E0D               	movwf	(??___xxtofl+3)^0,c
  6271   0024AA  500A               	movf	??___xxtofl^0,w,c
  6272   0024AC  100B               	iorwf	(??___xxtofl+1)^0,w,c
  6273   0024AE  100C               	iorwf	(??___xxtofl+2)^0,w,c
  6274   0024B0  100D               	iorwf	(??___xxtofl+3)^0,w,c
  6275   0024B2  A4D8               	btfss	status,2,c
  6276   0024B4  EF5E  F012         	goto	u4131
  6277   0024B8  EF60  F012         	goto	u4130
  6278   0024BC                     u4131:
  6279   0024BC  EF43  F012         	goto	l4177
  6280   0024C0                     u4130:
  6281   0024C0  EF6E  F012         	goto	l1147
  6282   0024C4                     l4181:
  6283   0024C4  2A0F               	incf	___xxtofl@exp^0,f,c
  6284   0024C6  0E01               	movlw	1
  6285   0024C8  2610               	addwf	___xxtofl@arg^0,f,c
  6286   0024CA  0E00               	movlw	0
  6287   0024CC  2211               	addwfc	(___xxtofl@arg+1)^0,f,c
  6288   0024CE  2212               	addwfc	(___xxtofl@arg+2)^0,f,c
  6289   0024D0  2213               	addwfc	(___xxtofl@arg+3)^0,f,c
  6290   0024D2  90D8               	bcf	status,0,c
  6291   0024D4  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  6292   0024D6  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  6293   0024D8  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  6294   0024DA  3210               	rrcf	___xxtofl@arg^0,f,c
  6295   0024DC                     l1147:
  6296   0024DC  0E00               	movlw	0
  6297   0024DE  1410               	andwf	___xxtofl@arg^0,w,c
  6298   0024E0  6E0A               	movwf	??___xxtofl^0,c
  6299   0024E2  0E00               	movlw	0
  6300   0024E4  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  6301   0024E6  6E0B               	movwf	(??___xxtofl+1)^0,c
  6302   0024E8  0E00               	movlw	0
  6303   0024EA  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  6304   0024EC  6E0C               	movwf	(??___xxtofl+2)^0,c
  6305   0024EE  0EFF               	movlw	255
  6306   0024F0  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  6307   0024F2  6E0D               	movwf	(??___xxtofl+3)^0,c
  6308   0024F4  500A               	movf	??___xxtofl^0,w,c
  6309   0024F6  100B               	iorwf	(??___xxtofl+1)^0,w,c
  6310   0024F8  100C               	iorwf	(??___xxtofl+2)^0,w,c
  6311   0024FA  100D               	iorwf	(??___xxtofl+3)^0,w,c
  6312   0024FC  A4D8               	btfss	status,2,c
  6313   0024FE  EF83  F012         	goto	u4141
  6314   002502  EF85  F012         	goto	u4140
  6315   002506                     u4141:
  6316   002506  EF62  F012         	goto	l4181
  6317   00250A                     u4140:
  6318   00250A  EF8D  F012         	goto	l4189
  6319   00250E                     l4187:
  6320   00250E  060F               	decf	___xxtofl@exp^0,f,c
  6321   002510  90D8               	bcf	status,0,c
  6322   002512  3610               	rlcf	___xxtofl@arg^0,f,c
  6323   002514  3611               	rlcf	(___xxtofl@arg+1)^0,f,c
  6324   002516  3612               	rlcf	(___xxtofl@arg+2)^0,f,c
  6325   002518  3613               	rlcf	(___xxtofl@arg+3)^0,f,c
  6326   00251A                     l4189:
  6327   00251A  BE12               	btfsc	(___xxtofl@arg+2)^0,7,c
  6328   00251C  EF92  F012         	goto	u4151
  6329   002520  EF94  F012         	goto	u4150
  6330   002524                     u4151:
  6331   002524  EF9C  F012         	goto	l1154
  6332   002528                     u4150:
  6333   002528  0E02               	movlw	2
  6334   00252A  600F               	cpfslt	___xxtofl@exp^0,c
  6335   00252C  EF9A  F012         	goto	u4161
  6336   002530  EF9C  F012         	goto	u4160
  6337   002534                     u4161:
  6338   002534  EF87  F012         	goto	l4187
  6339   002538                     u4160:
  6340   002538                     l1154:
  6341   002538  B00F               	btfsc	___xxtofl@exp^0,0,c
  6342   00253A  EFA1  F012         	goto	u4171
  6343   00253E  EFA3  F012         	goto	u4170
  6344   002542                     u4171:
  6345   002542  EFA4  F012         	goto	l4195
  6346   002546                     u4170:
  6347   002546  9E12               	bcf	(___xxtofl@arg+2)^0,7,c
  6348   002548                     l4195:
  6349   002548  90D8               	bcf	status,0,c
  6350   00254A  320F               	rrcf	___xxtofl@exp^0,f,c
  6351   00254C  C00F  F00A         	movff	___xxtofl@exp,??___xxtofl
  6352   002550  6A0B               	clrf	(??___xxtofl+1)^0,c
  6353   002552  6A0C               	clrf	(??___xxtofl+2)^0,c
  6354   002554  6A0D               	clrf	(??___xxtofl+3)^0,c
  6355   002556  C00A  F00D         	movff	??___xxtofl,??___xxtofl+3
  6356   00255A  6A0C               	clrf	(??___xxtofl+2)^0,c
  6357   00255C  6A0B               	clrf	(??___xxtofl+1)^0,c
  6358   00255E  6A0A               	clrf	??___xxtofl^0,c
  6359   002560  500A               	movf	??___xxtofl^0,w,c
  6360   002562  1210               	iorwf	___xxtofl@arg^0,f,c
  6361   002564  500B               	movf	(??___xxtofl+1)^0,w,c
  6362   002566  1211               	iorwf	(___xxtofl@arg+1)^0,f,c
  6363   002568  500C               	movf	(??___xxtofl+2)^0,w,c
  6364   00256A  1212               	iorwf	(___xxtofl@arg+2)^0,f,c
  6365   00256C  500D               	movf	(??___xxtofl+3)^0,w,c
  6366   00256E  1213               	iorwf	(___xxtofl@arg+3)^0,f,c
  6367   002570  500E               	movf	___xxtofl@sign^0,w,c
  6368   002572  B4D8               	btfsc	status,2,c
  6369   002574  EFBE  F012         	goto	u4181
  6370   002578  EFC0  F012         	goto	u4180
  6371   00257C                     u4181:
  6372   00257C  EFC8  F012         	goto	l4205
  6373   002580                     u4180:
  6374   002580  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  6375   002582  EFC7  F012         	goto	u4190
  6376   002586  EFC5  F012         	goto	u4191
  6377   00258A                     u4191:
  6378   00258A  EFC8  F012         	goto	l4205
  6379   00258E                     u4190:
  6380   00258E  8E13               	bsf	(___xxtofl@arg+3)^0,7,c
  6381   002590                     l4205:
  6382   002590  C010  F006         	movff	___xxtofl@arg,?___xxtofl
  6383   002594  C011  F007         	movff	___xxtofl@arg+1,?___xxtofl+1
  6384   002598  C012  F008         	movff	___xxtofl@arg+2,?___xxtofl+2
  6385   00259C  C013  F009         	movff	___xxtofl@arg+3,?___xxtofl+3
  6386   0025A0                     l1143:
  6387   0025A0  0012               	return		;funcret
  6388   0025A2                     __end_of___xxtofl:
  6389                           	callstack 0
  6390                           
  6391 ;; *************** function ___flmul *****************
  6392 ;; Defined at:
  6393 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  6394 ;; Parameters:    Size  Location     Type
  6395 ;;  b               4   19[COMRAM] unsigned char 
  6396 ;;  a               4   23[COMRAM] unsigned char 
  6397 ;; Auto vars:     Size  Location     Type
  6398 ;;  prod            4   38[COMRAM] struct .
  6399 ;;  grs             4   33[COMRAM] unsigned long 
  6400 ;;  temp            2   42[COMRAM] struct .
  6401 ;;  bexp            1   37[COMRAM] unsigned char 
  6402 ;;  aexp            1   32[COMRAM] unsigned char 
  6403 ;;  sign            1   31[COMRAM] unsigned char 
  6404 ;; Return value:  Size  Location     Type
  6405 ;;                  4   19[COMRAM] unsigned char 
  6406 ;; Registers used:
  6407 ;;		wreg, status,2, status,0, prodl, prodh
  6408 ;; Tracked objects:
  6409 ;;		On entry : 0/0
  6410 ;;		On exit  : 0/0
  6411 ;;		Unchanged: 0/0
  6412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6413 ;;      Params:         8       0       0       0       0       0       0       0       0
  6414 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6415 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6416 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6417 ;;Total ram usage:       25 bytes
  6418 ;; Hardware stack levels used: 1
  6419 ;; Hardware stack levels required when called: 4
  6420 ;; This function calls:
  6421 ;;		Nothing
  6422 ;; This function is called by:
  6423 ;;		_convertValue
  6424 ;;		_efgtoa
  6425 ;; This function uses a non-reentrant model
  6426 ;;
  6427                           
  6428                           	psect	text27
  6429   001702                     __ptext27:
  6430                           	callstack 0
  6431   001702                     ___flmul:
  6432                           	callstack 22
  6433   001702  5017               	movf	(___flmul@b+3)^0,w,c
  6434   001704  0B80               	andlw	128
  6435   001706  6E20               	movwf	___flmul@sign^0,c
  6436   001708  5017               	movf	(___flmul@b+3)^0,w,c
  6437   00170A  2417               	addwf	(___flmul@b+3)^0,w,c
  6438   00170C  6E26               	movwf	___flmul@bexp^0,c
  6439   00170E  AE16               	btfss	(___flmul@b+2)^0,7,c
  6440   001710  EF8C  F00B         	goto	u5221
  6441   001714  EF8E  F00B         	goto	u5220
  6442   001718                     u5221:
  6443   001718  EF8F  F00B         	goto	l4903
  6444   00171C                     u5220:
  6445   00171C  8026               	bsf	___flmul@bexp^0,0,c
  6446   00171E                     l4903:
  6447   00171E  5026               	movf	___flmul@bexp^0,w,c
  6448   001720  B4D8               	btfsc	status,2,c
  6449   001722  EF95  F00B         	goto	u5231
  6450   001726  EF97  F00B         	goto	u5230
  6451   00172A                     u5231:
  6452   00172A  EFAA  F00B         	goto	l4911
  6453   00172E                     u5230:
  6454   00172E  2826               	incf	___flmul@bexp^0,w,c
  6455   001730  A4D8               	btfss	status,2,c
  6456   001732  EF9D  F00B         	goto	u5241
  6457   001736  EF9F  F00B         	goto	u5240
  6458   00173A                     u5241:
  6459   00173A  EFA7  F00B         	goto	l4909
  6460   00173E                     u5240:
  6461   00173E  0E00               	movlw	0
  6462   001740  6E14               	movwf	___flmul@b^0,c
  6463   001742  0E00               	movlw	0
  6464   001744  6E15               	movwf	(___flmul@b+1)^0,c
  6465   001746  0E00               	movlw	0
  6466   001748  6E16               	movwf	(___flmul@b+2)^0,c
  6467   00174A  0E00               	movlw	0
  6468   00174C  6E17               	movwf	(___flmul@b+3)^0,c
  6469   00174E                     l4909:
  6470   00174E  8E16               	bsf	(___flmul@b+2)^0,7,c
  6471   001750  EFB2  F00B         	goto	l4913
  6472   001754                     l4911:
  6473   001754  0E00               	movlw	0
  6474   001756  6E14               	movwf	___flmul@b^0,c
  6475   001758  0E00               	movlw	0
  6476   00175A  6E15               	movwf	(___flmul@b+1)^0,c
  6477   00175C  0E00               	movlw	0
  6478   00175E  6E16               	movwf	(___flmul@b+2)^0,c
  6479   001760  0E00               	movlw	0
  6480   001762  6E17               	movwf	(___flmul@b+3)^0,c
  6481   001764                     l4913:
  6482   001764  501B               	movf	(___flmul@a+3)^0,w,c
  6483   001766  0B80               	andlw	128
  6484   001768  1A20               	xorwf	___flmul@sign^0,f,c
  6485   00176A  501B               	movf	(___flmul@a+3)^0,w,c
  6486   00176C  241B               	addwf	(___flmul@a+3)^0,w,c
  6487   00176E  6E21               	movwf	___flmul@aexp^0,c
  6488   001770  AE1A               	btfss	(___flmul@a+2)^0,7,c
  6489   001772  EFBD  F00B         	goto	u5251
  6490   001776  EFBF  F00B         	goto	u5250
  6491   00177A                     u5251:
  6492   00177A  EFC0  F00B         	goto	l4921
  6493   00177E                     u5250:
  6494   00177E  8021               	bsf	___flmul@aexp^0,0,c
  6495   001780                     l4921:
  6496   001780  5021               	movf	___flmul@aexp^0,w,c
  6497   001782  B4D8               	btfsc	status,2,c
  6498   001784  EFC6  F00B         	goto	u5261
  6499   001788  EFC8  F00B         	goto	u5260
  6500   00178C                     u5261:
  6501   00178C  EFDB  F00B         	goto	l4929
  6502   001790                     u5260:
  6503   001790  2821               	incf	___flmul@aexp^0,w,c
  6504   001792  A4D8               	btfss	status,2,c
  6505   001794  EFCE  F00B         	goto	u5271
  6506   001798  EFD0  F00B         	goto	u5270
  6507   00179C                     u5271:
  6508   00179C  EFD8  F00B         	goto	l4927
  6509   0017A0                     u5270:
  6510   0017A0  0E00               	movlw	0
  6511   0017A2  6E18               	movwf	___flmul@a^0,c
  6512   0017A4  0E00               	movlw	0
  6513   0017A6  6E19               	movwf	(___flmul@a+1)^0,c
  6514   0017A8  0E00               	movlw	0
  6515   0017AA  6E1A               	movwf	(___flmul@a+2)^0,c
  6516   0017AC  0E00               	movlw	0
  6517   0017AE  6E1B               	movwf	(___flmul@a+3)^0,c
  6518   0017B0                     l4927:
  6519   0017B0  8E1A               	bsf	(___flmul@a+2)^0,7,c
  6520   0017B2  EFE3  F00B         	goto	l1099
  6521   0017B6                     l4929:
  6522   0017B6  0E00               	movlw	0
  6523   0017B8  6E18               	movwf	___flmul@a^0,c
  6524   0017BA  0E00               	movlw	0
  6525   0017BC  6E19               	movwf	(___flmul@a+1)^0,c
  6526   0017BE  0E00               	movlw	0
  6527   0017C0  6E1A               	movwf	(___flmul@a+2)^0,c
  6528   0017C2  0E00               	movlw	0
  6529   0017C4  6E1B               	movwf	(___flmul@a+3)^0,c
  6530   0017C6                     l1099:
  6531   0017C6  5021               	movf	___flmul@aexp^0,w,c
  6532   0017C8  B4D8               	btfsc	status,2,c
  6533   0017CA  EFE9  F00B         	goto	u5281
  6534   0017CE  EFEB  F00B         	goto	u5280
  6535   0017D2                     u5281:
  6536   0017D2  EFF3  F00B         	goto	l4933
  6537   0017D6                     u5280:
  6538   0017D6  5026               	movf	___flmul@bexp^0,w,c
  6539   0017D8  A4D8               	btfss	status,2,c
  6540   0017DA  EFF1  F00B         	goto	u5291
  6541   0017DE  EFF3  F00B         	goto	u5290
  6542   0017E2                     u5291:
  6543   0017E2  EFFD  F00B         	goto	l4937
  6544   0017E6                     u5290:
  6545   0017E6                     l4933:
  6546   0017E6  0E00               	movlw	0
  6547   0017E8  6E14               	movwf	?___flmul^0,c
  6548   0017EA  0E00               	movlw	0
  6549   0017EC  6E15               	movwf	(?___flmul+1)^0,c
  6550   0017EE  0E00               	movlw	0
  6551   0017F0  6E16               	movwf	(?___flmul+2)^0,c
  6552   0017F2  0E00               	movlw	0
  6553   0017F4  6E17               	movwf	(?___flmul+3)^0,c
  6554   0017F6  EF95  F00D         	goto	l1103
  6555   0017FA                     l4937:
  6556   0017FA  501A               	movf	(___flmul@a+2)^0,w,c
  6557   0017FC  0214               	mulwf	___flmul@b^0,c
  6558   0017FE  CFF3 F02B          	movff	prodl,___flmul@temp
  6559   001802  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6560   001806  502B               	movf	___flmul@temp^0,w,c
  6561   001808  6E22               	movwf	___flmul@grs^0,c
  6562   00180A  6A23               	clrf	(___flmul@grs+1)^0,c
  6563   00180C  6A24               	clrf	(___flmul@grs+2)^0,c
  6564   00180E  6A25               	clrf	(___flmul@grs+3)^0,c
  6565   001810  502C               	movf	(___flmul@temp+1)^0,w,c
  6566   001812  6E27               	movwf	___flmul@prod^0,c
  6567   001814  6A28               	clrf	(___flmul@prod+1)^0,c
  6568   001816  6A29               	clrf	(___flmul@prod+2)^0,c
  6569   001818  6A2A               	clrf	(___flmul@prod+3)^0,c
  6570   00181A  5019               	movf	(___flmul@a+1)^0,w,c
  6571   00181C  0215               	mulwf	(___flmul@b+1)^0,c
  6572   00181E  CFF3 F02B          	movff	prodl,___flmul@temp
  6573   001822  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6574   001826  502B               	movf	___flmul@temp^0,w,c
  6575   001828  2622               	addwf	___flmul@grs^0,f,c
  6576   00182A  0E00               	movlw	0
  6577   00182C  2223               	addwfc	(___flmul@grs+1)^0,f,c
  6578   00182E  2224               	addwfc	(___flmul@grs+2)^0,f,c
  6579   001830  2225               	addwfc	(___flmul@grs+3)^0,f,c
  6580   001832  502C               	movf	(___flmul@temp+1)^0,w,c
  6581   001834  2627               	addwf	___flmul@prod^0,f,c
  6582   001836  0E00               	movlw	0
  6583   001838  2228               	addwfc	(___flmul@prod+1)^0,f,c
  6584   00183A  2229               	addwfc	(___flmul@prod+2)^0,f,c
  6585   00183C  222A               	addwfc	(___flmul@prod+3)^0,f,c
  6586   00183E  5018               	movf	___flmul@a^0,w,c
  6587   001840  0216               	mulwf	(___flmul@b+2)^0,c
  6588   001842  CFF3 F02B          	movff	prodl,___flmul@temp
  6589   001846  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6590   00184A  502B               	movf	___flmul@temp^0,w,c
  6591   00184C  2622               	addwf	___flmul@grs^0,f,c
  6592   00184E  0E00               	movlw	0
  6593   001850  2223               	addwfc	(___flmul@grs+1)^0,f,c
  6594   001852  2224               	addwfc	(___flmul@grs+2)^0,f,c
  6595   001854  2225               	addwfc	(___flmul@grs+3)^0,f,c
  6596   001856  502C               	movf	(___flmul@temp+1)^0,w,c
  6597   001858  2627               	addwf	___flmul@prod^0,f,c
  6598   00185A  0E00               	movlw	0
  6599   00185C  2228               	addwfc	(___flmul@prod+1)^0,f,c
  6600   00185E  2229               	addwfc	(___flmul@prod+2)^0,f,c
  6601   001860  222A               	addwfc	(___flmul@prod+3)^0,f,c
  6602   001862  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  6603   001866  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  6604   00186A  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  6605   00186E  6A22               	clrf	___flmul@grs^0,c
  6606   001870  5018               	movf	___flmul@a^0,w,c
  6607   001872  0215               	mulwf	(___flmul@b+1)^0,c
  6608   001874  CFF3 F02B          	movff	prodl,___flmul@temp
  6609   001878  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6610   00187C  502B               	movf	___flmul@temp^0,w,c
  6611   00187E  2622               	addwf	___flmul@grs^0,f,c
  6612   001880  502C               	movf	(___flmul@temp+1)^0,w,c
  6613   001882  2223               	addwfc	(___flmul@grs+1)^0,f,c
  6614   001884  0E00               	movlw	0
  6615   001886  2224               	addwfc	(___flmul@grs+2)^0,f,c
  6616   001888  0E00               	movlw	0
  6617   00188A  2225               	addwfc	(___flmul@grs+3)^0,f,c
  6618   00188C  5019               	movf	(___flmul@a+1)^0,w,c
  6619   00188E  0214               	mulwf	___flmul@b^0,c
  6620   001890  CFF3 F02B          	movff	prodl,___flmul@temp
  6621   001894  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6622   001898  502B               	movf	___flmul@temp^0,w,c
  6623   00189A  2622               	addwf	___flmul@grs^0,f,c
  6624   00189C  502C               	movf	(___flmul@temp+1)^0,w,c
  6625   00189E  2223               	addwfc	(___flmul@grs+1)^0,f,c
  6626   0018A0  0E00               	movlw	0
  6627   0018A2  2224               	addwfc	(___flmul@grs+2)^0,f,c
  6628   0018A4  0E00               	movlw	0
  6629   0018A6  2225               	addwfc	(___flmul@grs+3)^0,f,c
  6630   0018A8  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  6631   0018AC  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  6632   0018B0  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  6633   0018B4  6A22               	clrf	___flmul@grs^0,c
  6634   0018B6  5018               	movf	___flmul@a^0,w,c
  6635   0018B8  0214               	mulwf	___flmul@b^0,c
  6636   0018BA  CFF3 F02B          	movff	prodl,___flmul@temp
  6637   0018BE  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6638   0018C2  502B               	movf	___flmul@temp^0,w,c
  6639   0018C4  2622               	addwf	___flmul@grs^0,f,c
  6640   0018C6  502C               	movf	(___flmul@temp+1)^0,w,c
  6641   0018C8  2223               	addwfc	(___flmul@grs+1)^0,f,c
  6642   0018CA  0E00               	movlw	0
  6643   0018CC  2224               	addwfc	(___flmul@grs+2)^0,f,c
  6644   0018CE  0E00               	movlw	0
  6645   0018D0  2225               	addwfc	(___flmul@grs+3)^0,f,c
  6646   0018D2  501A               	movf	(___flmul@a+2)^0,w,c
  6647   0018D4  0215               	mulwf	(___flmul@b+1)^0,c
  6648   0018D6  CFF3 F02B          	movff	prodl,___flmul@temp
  6649   0018DA  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6650   0018DE  502B               	movf	___flmul@temp^0,w,c
  6651   0018E0  2627               	addwf	___flmul@prod^0,f,c
  6652   0018E2  502C               	movf	(___flmul@temp+1)^0,w,c
  6653   0018E4  2228               	addwfc	(___flmul@prod+1)^0,f,c
  6654   0018E6  0E00               	movlw	0
  6655   0018E8  2229               	addwfc	(___flmul@prod+2)^0,f,c
  6656   0018EA  0E00               	movlw	0
  6657   0018EC  222A               	addwfc	(___flmul@prod+3)^0,f,c
  6658   0018EE  5019               	movf	(___flmul@a+1)^0,w,c
  6659   0018F0  0216               	mulwf	(___flmul@b+2)^0,c
  6660   0018F2  CFF3 F02B          	movff	prodl,___flmul@temp
  6661   0018F6  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6662   0018FA  502B               	movf	___flmul@temp^0,w,c
  6663   0018FC  2627               	addwf	___flmul@prod^0,f,c
  6664   0018FE  502C               	movf	(___flmul@temp+1)^0,w,c
  6665   001900  2228               	addwfc	(___flmul@prod+1)^0,f,c
  6666   001902  0E00               	movlw	0
  6667   001904  2229               	addwfc	(___flmul@prod+2)^0,f,c
  6668   001906  0E00               	movlw	0
  6669   001908  222A               	addwfc	(___flmul@prod+3)^0,f,c
  6670   00190A  501A               	movf	(___flmul@a+2)^0,w,c
  6671   00190C  0216               	mulwf	(___flmul@b+2)^0,c
  6672   00190E  CFF3 F02B          	movff	prodl,___flmul@temp
  6673   001912  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6674   001916  502B               	movf	___flmul@temp^0,w,c
  6675   001918  6E1C               	movwf	??___flmul^0,c
  6676   00191A  502C               	movf	(___flmul@temp+1)^0,w,c
  6677   00191C  6E1D               	movwf	(??___flmul+1)^0,c
  6678   00191E  6A1E               	clrf	(??___flmul+2)^0,c
  6679   001920  6A1F               	clrf	(??___flmul+3)^0,c
  6680   001922  C01E  F01F         	movff	??___flmul+2,??___flmul+3
  6681   001926  C01D  F01E         	movff	??___flmul+1,??___flmul+2
  6682   00192A  C01C  F01D         	movff	??___flmul,??___flmul+1
  6683   00192E  6A1C               	clrf	??___flmul^0,c
  6684   001930  501C               	movf	??___flmul^0,w,c
  6685   001932  2627               	addwf	___flmul@prod^0,f,c
  6686   001934  501D               	movf	(??___flmul+1)^0,w,c
  6687   001936  2228               	addwfc	(___flmul@prod+1)^0,f,c
  6688   001938  501E               	movf	(??___flmul+2)^0,w,c
  6689   00193A  2229               	addwfc	(___flmul@prod+2)^0,f,c
  6690   00193C  501F               	movf	(??___flmul+3)^0,w,c
  6691   00193E  222A               	addwfc	(___flmul@prod+3)^0,f,c
  6692   001940  C022  F01C         	movff	___flmul@grs,??___flmul
  6693   001944  C023  F01D         	movff	___flmul@grs+1,??___flmul+1
  6694   001948  C024  F01E         	movff	___flmul@grs+2,??___flmul+2
  6695   00194C  C025  F01F         	movff	___flmul@grs+3,??___flmul+3
  6696   001950  0E19               	movlw	25
  6697   001952  EFB0  F00C         	goto	u5300
  6698   001956                     u5305:
  6699   001956  90D8               	bcf	status,0,c
  6700   001958  321F               	rrcf	(??___flmul+3)^0,f,c
  6701   00195A  321E               	rrcf	(??___flmul+2)^0,f,c
  6702   00195C  321D               	rrcf	(??___flmul+1)^0,f,c
  6703   00195E  321C               	rrcf	??___flmul^0,f,c
  6704   001960                     u5300:
  6705   001960  2EE8               	decfsz	wreg,f,c
  6706   001962  EFAB  F00C         	goto	u5305
  6707   001966  501C               	movf	??___flmul^0,w,c
  6708   001968  2627               	addwf	___flmul@prod^0,f,c
  6709   00196A  501D               	movf	(??___flmul+1)^0,w,c
  6710   00196C  2228               	addwfc	(___flmul@prod+1)^0,f,c
  6711   00196E  501E               	movf	(??___flmul+2)^0,w,c
  6712   001970  2229               	addwfc	(___flmul@prod+2)^0,f,c
  6713   001972  501F               	movf	(??___flmul+3)^0,w,c
  6714   001974  222A               	addwfc	(___flmul@prod+3)^0,f,c
  6715   001976  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  6716   00197A  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  6717   00197E  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  6718   001982  6A22               	clrf	___flmul@grs^0,c
  6719   001984  5021               	movf	___flmul@aexp^0,w,c
  6720   001986  C026  F01C         	movff	___flmul@bexp,??___flmul
  6721   00198A  6A1D               	clrf	(??___flmul+1)^0,c
  6722   00198C  261C               	addwf	??___flmul^0,f,c
  6723   00198E  0E00               	movlw	0
  6724   001990  221D               	addwfc	(??___flmul+1)^0,f,c
  6725   001992  0E82               	movlw	130
  6726   001994  241C               	addwf	??___flmul^0,w,c
  6727   001996  6E2B               	movwf	___flmul@temp^0,c
  6728   001998  0EFF               	movlw	255
  6729   00199A  201D               	addwfc	(??___flmul+1)^0,w,c
  6730   00199C  6E2C               	movwf	(___flmul@temp+1)^0,c
  6731   00199E  EFE6  F00C         	goto	l4985
  6732   0019A2                     l4979:
  6733   0019A2  90D8               	bcf	status,0,c
  6734   0019A4  3627               	rlcf	___flmul@prod^0,f,c
  6735   0019A6  3628               	rlcf	(___flmul@prod+1)^0,f,c
  6736   0019A8  3629               	rlcf	(___flmul@prod+2)^0,f,c
  6737   0019AA  362A               	rlcf	(___flmul@prod+3)^0,f,c
  6738   0019AC  AE25               	btfss	(___flmul@grs+3)^0,7,c
  6739   0019AE  EFDB  F00C         	goto	u5311
  6740   0019B2  EFDD  F00C         	goto	u5310
  6741   0019B6                     u5311:
  6742   0019B6  EFDE  F00C         	goto	l1106
  6743   0019BA                     u5310:
  6744   0019BA  8027               	bsf	___flmul@prod^0,0,c
  6745   0019BC                     l1106:
  6746   0019BC  90D8               	bcf	status,0,c
  6747   0019BE  3622               	rlcf	___flmul@grs^0,f,c
  6748   0019C0  3623               	rlcf	(___flmul@grs+1)^0,f,c
  6749   0019C2  3624               	rlcf	(___flmul@grs+2)^0,f,c
  6750   0019C4  3625               	rlcf	(___flmul@grs+3)^0,f,c
  6751   0019C6  062B               	decf	___flmul@temp^0,f,c
  6752   0019C8  A0D8               	btfss	status,0,c
  6753   0019CA  062C               	decf	(___flmul@temp+1)^0,f,c
  6754   0019CC                     l4985:
  6755   0019CC  AE29               	btfss	(___flmul@prod+2)^0,7,c
  6756   0019CE  EFEB  F00C         	goto	u5321
  6757   0019D2  EFED  F00C         	goto	u5320
  6758   0019D6                     u5321:
  6759   0019D6  EFD1  F00C         	goto	l4979
  6760   0019DA                     u5320:
  6761   0019DA  0E00               	movlw	0
  6762   0019DC  6E21               	movwf	___flmul@aexp^0,c
  6763   0019DE  AE25               	btfss	(___flmul@grs+3)^0,7,c
  6764   0019E0  EFF4  F00C         	goto	u5331
  6765   0019E4  EFF6  F00C         	goto	u5330
  6766   0019E8                     u5331:
  6767   0019E8  EF1A  F00D         	goto	l1108
  6768   0019EC                     u5330:
  6769   0019EC  0EFF               	movlw	255
  6770   0019EE  1422               	andwf	___flmul@grs^0,w,c
  6771   0019F0  6E1C               	movwf	??___flmul^0,c
  6772   0019F2  0EFF               	movlw	255
  6773   0019F4  1423               	andwf	(___flmul@grs+1)^0,w,c
  6774   0019F6  6E1D               	movwf	(??___flmul+1)^0,c
  6775   0019F8  0EFF               	movlw	255
  6776   0019FA  1424               	andwf	(___flmul@grs+2)^0,w,c
  6777   0019FC  6E1E               	movwf	(??___flmul+2)^0,c
  6778   0019FE  0E7F               	movlw	127
  6779   001A00  1425               	andwf	(___flmul@grs+3)^0,w,c
  6780   001A02  6E1F               	movwf	(??___flmul+3)^0,c
  6781   001A04  501C               	movf	??___flmul^0,w,c
  6782   001A06  101D               	iorwf	(??___flmul+1)^0,w,c
  6783   001A08  101E               	iorwf	(??___flmul+2)^0,w,c
  6784   001A0A  101F               	iorwf	(??___flmul+3)^0,w,c
  6785   001A0C  B4D8               	btfsc	status,2,c
  6786   001A0E  EF0B  F00D         	goto	u5341
  6787   001A12  EF0D  F00D         	goto	u5340
  6788   001A16                     u5341:
  6789   001A16  EF11  F00D         	goto	l1109
  6790   001A1A                     u5340:
  6791   001A1A                     l4993:
  6792   001A1A  0E01               	movlw	1
  6793   001A1C  6E21               	movwf	___flmul@aexp^0,c
  6794   001A1E  EF1A  F00D         	goto	l1108
  6795   001A22                     l1109:
  6796   001A22  A027               	btfss	___flmul@prod^0,0,c
  6797   001A24  EF16  F00D         	goto	u5351
  6798   001A28  EF18  F00D         	goto	u5350
  6799   001A2C                     u5351:
  6800   001A2C  EF1A  F00D         	goto	l1108
  6801   001A30                     u5350:
  6802   001A30  EF0D  F00D         	goto	l4993
  6803   001A34                     l1108:
  6804   001A34  5021               	movf	___flmul@aexp^0,w,c
  6805   001A36  B4D8               	btfsc	status,2,c
  6806   001A38  EF20  F00D         	goto	u5361
  6807   001A3C  EF22  F00D         	goto	u5360
  6808   001A40                     u5361:
  6809   001A40  EF46  F00D         	goto	l5005
  6810   001A44                     u5360:
  6811   001A44  0E01               	movlw	1
  6812   001A46  2627               	addwf	___flmul@prod^0,f,c
  6813   001A48  0E00               	movlw	0
  6814   001A4A  2228               	addwfc	(___flmul@prod+1)^0,f,c
  6815   001A4C  2229               	addwfc	(___flmul@prod+2)^0,f,c
  6816   001A4E  222A               	addwfc	(___flmul@prod+3)^0,f,c
  6817   001A50  A02A               	btfss	(___flmul@prod+3)^0,0,c
  6818   001A52  EF2D  F00D         	goto	u5371
  6819   001A56  EF2F  F00D         	goto	u5370
  6820   001A5A                     u5371:
  6821   001A5A  EF46  F00D         	goto	l5005
  6822   001A5E                     u5370:
  6823   001A5E  C027  F01C         	movff	___flmul@prod,??___flmul
  6824   001A62  C028  F01D         	movff	___flmul@prod+1,??___flmul+1
  6825   001A66  C029  F01E         	movff	___flmul@prod+2,??___flmul+2
  6826   001A6A  C02A  F01F         	movff	___flmul@prod+3,??___flmul+3
  6827   001A6E  341F               	rlcf	(??___flmul+3)^0,w,c
  6828   001A70  321F               	rrcf	(??___flmul+3)^0,f,c
  6829   001A72  321E               	rrcf	(??___flmul+2)^0,f,c
  6830   001A74  321D               	rrcf	(??___flmul+1)^0,f,c
  6831   001A76  321C               	rrcf	??___flmul^0,f,c
  6832   001A78  C01C  F027         	movff	??___flmul,___flmul@prod
  6833   001A7C  C01D  F028         	movff	??___flmul+1,___flmul@prod+1
  6834   001A80  C01E  F029         	movff	??___flmul+2,___flmul@prod+2
  6835   001A84  C01F  F02A         	movff	??___flmul+3,___flmul@prod+3
  6836   001A88  4A2B               	infsnz	___flmul@temp^0,f,c
  6837   001A8A  2A2C               	incf	(___flmul@temp+1)^0,f,c
  6838   001A8C                     l5005:
  6839   001A8C  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
  6840   001A8E  EF51  F00D         	goto	u5381
  6841   001A92  502C               	movf	(___flmul@temp+1)^0,w,c
  6842   001A94  E108               	bnz	u5380
  6843   001A96  282B               	incf	___flmul@temp^0,w,c
  6844   001A98  A0D8               	btfss	status,0,c
  6845   001A9A  EF51  F00D         	goto	u5381
  6846   001A9E  EF53  F00D         	goto	u5380
  6847   001AA2                     u5381:
  6848   001AA2  EF5D  F00D         	goto	l5009
  6849   001AA6                     u5380:
  6850   001AA6  0E00               	movlw	0
  6851   001AA8  6E27               	movwf	___flmul@prod^0,c
  6852   001AAA  0E00               	movlw	0
  6853   001AAC  6E28               	movwf	(___flmul@prod+1)^0,c
  6854   001AAE  0E80               	movlw	128
  6855   001AB0  6E29               	movwf	(___flmul@prod+2)^0,c
  6856   001AB2  0E7F               	movlw	127
  6857   001AB4  6E2A               	movwf	(___flmul@prod+3)^0,c
  6858   001AB6  EF8B  F00D         	goto	l5021
  6859   001ABA                     l5009:
  6860   001ABA  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
  6861   001ABC  EF6A  F00D         	goto	u5390
  6862   001AC0  502C               	movf	(___flmul@temp+1)^0,w,c
  6863   001AC2  E106               	bnz	u5391
  6864   001AC4  042B               	decf	___flmul@temp^0,w,c
  6865   001AC6  B0D8               	btfsc	status,0,c
  6866   001AC8  EF68  F00D         	goto	u5391
  6867   001ACC  EF6A  F00D         	goto	u5390
  6868   001AD0                     u5391:
  6869   001AD0  EF76  F00D         	goto	l1116
  6870   001AD4                     u5390:
  6871   001AD4  0E00               	movlw	0
  6872   001AD6  6E27               	movwf	___flmul@prod^0,c
  6873   001AD8  0E00               	movlw	0
  6874   001ADA  6E28               	movwf	(___flmul@prod+1)^0,c
  6875   001ADC  0E00               	movlw	0
  6876   001ADE  6E29               	movwf	(___flmul@prod+2)^0,c
  6877   001AE0  0E00               	movlw	0
  6878   001AE2  6E2A               	movwf	(___flmul@prod+3)^0,c
  6879   001AE4  0E00               	movlw	0
  6880   001AE6  6E20               	movwf	___flmul@sign^0,c
  6881   001AE8  EF8B  F00D         	goto	l5021
  6882   001AEC                     l1116:
  6883   001AEC  C02B  F026         	movff	___flmul@temp,___flmul@bexp
  6884   001AF0  0EFF               	movlw	255
  6885   001AF2  1627               	andwf	___flmul@prod^0,f,c
  6886   001AF4  0EFF               	movlw	255
  6887   001AF6  1628               	andwf	(___flmul@prod+1)^0,f,c
  6888   001AF8  0E7F               	movlw	127
  6889   001AFA  1629               	andwf	(___flmul@prod+2)^0,f,c
  6890   001AFC  0E00               	movlw	0
  6891   001AFE  162A               	andwf	(___flmul@prod+3)^0,f,c
  6892   001B00  A026               	btfss	___flmul@bexp^0,0,c
  6893   001B02  EF85  F00D         	goto	u5401
  6894   001B06  EF87  F00D         	goto	u5400
  6895   001B0A                     u5401:
  6896   001B0A  EF88  F00D         	goto	l5019
  6897   001B0E                     u5400:
  6898   001B0E  8E29               	bsf	(___flmul@prod+2)^0,7,c
  6899   001B10                     l5019:
  6900   001B10  90D8               	bcf	status,0,c
  6901   001B12  3026               	rrcf	___flmul@bexp^0,w,c
  6902   001B14  6E2A               	movwf	(___flmul@prod+3)^0,c
  6903   001B16                     l5021:
  6904   001B16  5020               	movf	___flmul@sign^0,w,c
  6905   001B18  122A               	iorwf	(___flmul@prod+3)^0,f,c
  6906   001B1A  C027  F014         	movff	___flmul@prod,?___flmul
  6907   001B1E  C028  F015         	movff	___flmul@prod+1,?___flmul+1
  6908   001B22  C029  F016         	movff	___flmul@prod+2,?___flmul+2
  6909   001B26  C02A  F017         	movff	___flmul@prod+3,?___flmul+3
  6910   001B2A                     l1103:
  6911   001B2A  0012               	return		;funcret
  6912   001B2C                     __end_of___flmul:
  6913                           	callstack 0
  6914                           
  6915 ;; *************** function _adcMax *****************
  6916 ;; Defined at:
  6917 ;;		line 67 in file "main.c"
  6918 ;; Parameters:    Size  Location     Type
  6919 ;;  maxNo           2   56[COMRAM] PTR 
  6920 ;;		 -> main@adcArray(40), 
  6921 ;; Auto vars:     Size  Location     Type
  6922 ;;  i               2   60[COMRAM] int 
  6923 ;; Return value:  Size  Location     Type
  6924 ;;                  4   56[COMRAM] int 
  6925 ;; Registers used:
  6926 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6927 ;; Tracked objects:
  6928 ;;		On entry : 0/0
  6929 ;;		On exit  : 0/0
  6930 ;;		Unchanged: 0/0
  6931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6932 ;;      Params:         4       0       0       0       0       0       0       0       0
  6933 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6934 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6935 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6936 ;;Total ram usage:        6 bytes
  6937 ;; Hardware stack levels used: 1
  6938 ;; Hardware stack levels required when called: 5
  6939 ;; This function calls:
  6940 ;;		___flge
  6941 ;; This function is called by:
  6942 ;;		_main
  6943 ;; This function uses a non-reentrant model
  6944 ;;
  6945                           
  6946                           	psect	text28
  6947   002BB0                     __ptext28:
  6948                           	callstack 0
  6949   002BB0                     _adcMax:
  6950                           	callstack 25
  6951   002BB0                     
  6952                           ;main.c: 68:     for(int i=0;i<10;i++){
  6953   002BB0  0E00               	movlw	0
  6954   002BB2  6E3E               	movwf	(adcMax@i+1)^0,c
  6955   002BB4  0E00               	movlw	0
  6956   002BB6  6E3D               	movwf	adcMax@i^0,c
  6957   002BB8                     l5579:
  6958                           
  6959                           ;main.c: 70:         if(*maxNo < *(maxNo + i)){
  6960   002BB8  C039  FFD9         	movff	adcMax@maxNo,fsr2l
  6961   002BBC  C03A  FFDA         	movff	adcMax@maxNo+1,fsr2h
  6962   002BC0  CFDE F02D          	movff	postinc2,___flge@ff1
  6963   002BC4  CFDE F02E          	movff	postinc2,___flge@ff1+1
  6964   002BC8  CFDE F02F          	movff	postinc2,___flge@ff1+2
  6965   002BCC  CFDE F030          	movff	postinc2,___flge@ff1+3
  6966   002BD0  90D8               	bcf	status,0,c
  6967   002BD2  343D               	rlcf	adcMax@i^0,w,c
  6968   002BD4  6ED9               	movwf	fsr2l,c
  6969   002BD6  343E               	rlcf	(adcMax@i+1)^0,w,c
  6970   002BD8  6EDA               	movwf	fsr2h,c
  6971   002BDA  90D8               	bcf	status,0,c
  6972   002BDC  36D9               	rlcf	fsr2l,f,c
  6973   002BDE  36DA               	rlcf	fsr2h,f,c
  6974   002BE0  5039               	movf	adcMax@maxNo^0,w,c
  6975   002BE2  26D9               	addwf	fsr2l,f,c
  6976   002BE4  503A               	movf	(adcMax@maxNo+1)^0,w,c
  6977   002BE6  22DA               	addwfc	fsr2h,f,c
  6978   002BE8  CFDE F031          	movff	postinc2,___flge@ff2
  6979   002BEC  CFDE F032          	movff	postinc2,___flge@ff2+1
  6980   002BF0  CFDE F033          	movff	postinc2,___flge@ff2+2
  6981   002BF4  CFDE F034          	movff	postinc2,___flge@ff2+3
  6982   002BF8  ECF9  F013         	call	___flge	;wreg free
  6983   002BFC  B0D8               	btfsc	status,0,c
  6984   002BFE  EF03  F016         	goto	u6251
  6985   002C02  EF05  F016         	goto	u6250
  6986   002C06                     u6251:
  6987   002C06  EF1D  F016         	goto	l5583
  6988   002C0A                     u6250:
  6989   002C0A                     
  6990                           ;main.c: 71:             *maxNo = *(maxNo+i);
  6991   002C0A  90D8               	bcf	status,0,c
  6992   002C0C  343D               	rlcf	adcMax@i^0,w,c
  6993   002C0E  6ED9               	movwf	fsr2l,c
  6994   002C10  343E               	rlcf	(adcMax@i+1)^0,w,c
  6995   002C12  6EDA               	movwf	fsr2h,c
  6996   002C14  90D8               	bcf	status,0,c
  6997   002C16  36D9               	rlcf	fsr2l,f,c
  6998   002C18  36DA               	rlcf	fsr2h,f,c
  6999   002C1A  5039               	movf	adcMax@maxNo^0,w,c
  7000   002C1C  26D9               	addwf	fsr2l,f,c
  7001   002C1E  503A               	movf	(adcMax@maxNo+1)^0,w,c
  7002   002C20  22DA               	addwfc	fsr2h,f,c
  7003   002C22  C039  FFE1         	movff	adcMax@maxNo,fsr1l
  7004   002C26  C03A  FFE2         	movff	adcMax@maxNo+1,fsr1h
  7005   002C2A  CFDE FFE6          	movff	postinc2,postinc1
  7006   002C2E  CFDE FFE6          	movff	postinc2,postinc1
  7007   002C32  CFDE FFE6          	movff	postinc2,postinc1
  7008   002C36  CFDE FFE6          	movff	postinc2,postinc1
  7009   002C3A                     l5583:
  7010                           
  7011                           ;main.c: 73:     }
  7012   002C3A  4A3D               	infsnz	adcMax@i^0,f,c
  7013   002C3C  2A3E               	incf	(adcMax@i+1)^0,f,c
  7014   002C3E  BE3E               	btfsc	(adcMax@i+1)^0,7,c
  7015   002C40  EF2B  F016         	goto	u6261
  7016   002C44  503E               	movf	(adcMax@i+1)^0,w,c
  7017   002C46  E109               	bnz	u6260
  7018   002C48  0E0A               	movlw	10
  7019   002C4A  5C3D               	subwf	adcMax@i^0,w,c
  7020   002C4C  A0D8               	btfss	status,0,c
  7021   002C4E  EF2B  F016         	goto	u6261
  7022   002C52  EF2D  F016         	goto	u6260
  7023   002C56                     u6261:
  7024   002C56  EFDC  F015         	goto	l5579
  7025   002C5A                     u6260:
  7026   002C5A                     
  7027                           ;main.c: 74:     return *maxNo;
  7028   002C5A  C039  FFD9         	movff	adcMax@maxNo,fsr2l
  7029   002C5E  C03A  FFDA         	movff	adcMax@maxNo+1,fsr2h
  7030   002C62  CFDE F039          	movff	postinc2,?_adcMax
  7031   002C66  CFDE F03A          	movff	postinc2,?_adcMax+1
  7032   002C6A  CFDE F03B          	movff	postinc2,?_adcMax+2
  7033   002C6E  CFDE F03C          	movff	postinc2,?_adcMax+3
  7034   002C72  0012               	return		;funcret
  7035   002C74                     __end_of_adcMax:
  7036                           	callstack 0
  7037                           
  7038 ;; *************** function ___flge *****************
  7039 ;; Defined at:
  7040 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  7041 ;; Parameters:    Size  Location     Type
  7042 ;;  ff1             4   44[COMRAM] int 
  7043 ;;  ff2             4   48[COMRAM] int 
  7044 ;; Auto vars:     Size  Location     Type
  7045 ;;		None
  7046 ;; Return value:  Size  Location     Type
  7047 ;;		None               void
  7048 ;; Registers used:
  7049 ;;		wreg, status,2, status,0
  7050 ;; Tracked objects:
  7051 ;;		On entry : 0/0
  7052 ;;		On exit  : 0/0
  7053 ;;		Unchanged: 0/0
  7054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7055 ;;      Params:         8       0       0       0       0       0       0       0       0
  7056 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7057 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7058 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7059 ;;Total ram usage:       12 bytes
  7060 ;; Hardware stack levels used: 1
  7061 ;; Hardware stack levels required when called: 4
  7062 ;; This function calls:
  7063 ;;		Nothing
  7064 ;; This function is called by:
  7065 ;;		_adcMax
  7066 ;;		_efgtoa
  7067 ;; This function uses a non-reentrant model
  7068 ;;
  7069                           
  7070                           	psect	text29
  7071   0027F2                     __ptext29:
  7072                           	callstack 0
  7073   0027F2                     ___flge:
  7074                           	callstack 22
  7075   0027F2  0E00               	movlw	0
  7076   0027F4  142D               	andwf	___flge@ff1^0,w,c
  7077   0027F6  6E35               	movwf	??___flge^0,c
  7078   0027F8  0E00               	movlw	0
  7079   0027FA  142E               	andwf	(___flge@ff1+1)^0,w,c
  7080   0027FC  6E36               	movwf	(??___flge+1)^0,c
  7081   0027FE  0E80               	movlw	128
  7082   002800  142F               	andwf	(___flge@ff1+2)^0,w,c
  7083   002802  6E37               	movwf	(??___flge+2)^0,c
  7084   002804  0E7F               	movlw	127
  7085   002806  1430               	andwf	(___flge@ff1+3)^0,w,c
  7086   002808  6E38               	movwf	(??___flge+3)^0,c
  7087   00280A  5035               	movf	??___flge^0,w,c
  7088   00280C  1036               	iorwf	(??___flge+1)^0,w,c
  7089   00280E  1037               	iorwf	(??___flge+2)^0,w,c
  7090   002810  1038               	iorwf	(??___flge+3)^0,w,c
  7091   002812  A4D8               	btfss	status,2,c
  7092   002814  EF0E  F014         	goto	u5441
  7093   002818  EF10  F014         	goto	u5440
  7094   00281C                     u5441:
  7095   00281C  EF18  F014         	goto	l5053
  7096   002820                     u5440:
  7097   002820  0E00               	movlw	0
  7098   002822  6E2D               	movwf	___flge@ff1^0,c
  7099   002824  0E00               	movlw	0
  7100   002826  6E2E               	movwf	(___flge@ff1+1)^0,c
  7101   002828  0E00               	movlw	0
  7102   00282A  6E2F               	movwf	(___flge@ff1+2)^0,c
  7103   00282C  0E00               	movlw	0
  7104   00282E  6E30               	movwf	(___flge@ff1+3)^0,c
  7105   002830                     l5053:
  7106   002830  0E00               	movlw	0
  7107   002832  1431               	andwf	___flge@ff2^0,w,c
  7108   002834  6E35               	movwf	??___flge^0,c
  7109   002836  0E00               	movlw	0
  7110   002838  1432               	andwf	(___flge@ff2+1)^0,w,c
  7111   00283A  6E36               	movwf	(??___flge+1)^0,c
  7112   00283C  0E80               	movlw	128
  7113   00283E  1433               	andwf	(___flge@ff2+2)^0,w,c
  7114   002840  6E37               	movwf	(??___flge+2)^0,c
  7115   002842  0E7F               	movlw	127
  7116   002844  1434               	andwf	(___flge@ff2+3)^0,w,c
  7117   002846  6E38               	movwf	(??___flge+3)^0,c
  7118   002848  5035               	movf	??___flge^0,w,c
  7119   00284A  1036               	iorwf	(??___flge+1)^0,w,c
  7120   00284C  1037               	iorwf	(??___flge+2)^0,w,c
  7121   00284E  1038               	iorwf	(??___flge+3)^0,w,c
  7122   002850  A4D8               	btfss	status,2,c
  7123   002852  EF2D  F014         	goto	u5451
  7124   002856  EF2F  F014         	goto	u5450
  7125   00285A                     u5451:
  7126   00285A  EF37  F014         	goto	l5057
  7127   00285E                     u5450:
  7128   00285E  0E00               	movlw	0
  7129   002860  6E31               	movwf	___flge@ff2^0,c
  7130   002862  0E00               	movlw	0
  7131   002864  6E32               	movwf	(___flge@ff2+1)^0,c
  7132   002866  0E00               	movlw	0
  7133   002868  6E33               	movwf	(___flge@ff2+2)^0,c
  7134   00286A  0E00               	movlw	0
  7135   00286C  6E34               	movwf	(___flge@ff2+3)^0,c
  7136   00286E                     l5057:
  7137   00286E  AE30               	btfss	(___flge@ff1+3)^0,7,c
  7138   002870  EF3C  F014         	goto	u5461
  7139   002874  EF3E  F014         	goto	u5460
  7140   002878                     u5461:
  7141   002878  EF47  F014         	goto	l5061
  7142   00287C                     u5460:
  7143   00287C  6C2D               	negf	___flge@ff1^0,c
  7144   00287E  1E2E               	comf	(___flge@ff1+1)^0,f,c
  7145   002880  B0D8               	btfsc	status,0,c
  7146   002882  2A2E               	incf	(___flge@ff1+1)^0,f,c
  7147   002884  1E2F               	comf	(___flge@ff1+2)^0,f,c
  7148   002886  B0D8               	btfsc	status,0,c
  7149   002888  2A2F               	incf	(___flge@ff1+2)^0,f,c
  7150   00288A  0E80               	movlw	128
  7151   00288C  5630               	subfwb	(___flge@ff1+3)^0,f,c
  7152   00288E                     l5061:
  7153   00288E  AE34               	btfss	(___flge@ff2+3)^0,7,c
  7154   002890  EF4C  F014         	goto	u5471
  7155   002894  EF4E  F014         	goto	u5470
  7156   002898                     u5471:
  7157   002898  EF57  F014         	goto	l750
  7158   00289C                     u5470:
  7159   00289C  6C31               	negf	___flge@ff2^0,c
  7160   00289E  1E32               	comf	(___flge@ff2+1)^0,f,c
  7161   0028A0  B0D8               	btfsc	status,0,c
  7162   0028A2  2A32               	incf	(___flge@ff2+1)^0,f,c
  7163   0028A4  1E33               	comf	(___flge@ff2+2)^0,f,c
  7164   0028A6  B0D8               	btfsc	status,0,c
  7165   0028A8  2A33               	incf	(___flge@ff2+2)^0,f,c
  7166   0028AA  0E80               	movlw	128
  7167   0028AC  5634               	subfwb	(___flge@ff2+3)^0,f,c
  7168   0028AE                     l750:
  7169   0028AE  0E00               	movlw	0
  7170   0028B0  1A2D               	xorwf	___flge@ff1^0,f,c
  7171   0028B2  0E00               	movlw	0
  7172   0028B4  1A2E               	xorwf	(___flge@ff1+1)^0,f,c
  7173   0028B6  0E00               	movlw	0
  7174   0028B8  1A2F               	xorwf	(___flge@ff1+2)^0,f,c
  7175   0028BA  0E80               	movlw	128
  7176   0028BC  1A30               	xorwf	(___flge@ff1+3)^0,f,c
  7177   0028BE  0E00               	movlw	0
  7178   0028C0  1A31               	xorwf	___flge@ff2^0,f,c
  7179   0028C2  0E00               	movlw	0
  7180   0028C4  1A32               	xorwf	(___flge@ff2+1)^0,f,c
  7181   0028C6  0E00               	movlw	0
  7182   0028C8  1A33               	xorwf	(___flge@ff2+2)^0,f,c
  7183   0028CA  0E80               	movlw	128
  7184   0028CC  1A34               	xorwf	(___flge@ff2+3)^0,f,c
  7185   0028CE  5031               	movf	___flge@ff2^0,w,c
  7186   0028D0  5C2D               	subwf	___flge@ff1^0,w,c
  7187   0028D2  5032               	movf	(___flge@ff2+1)^0,w,c
  7188   0028D4  582E               	subwfb	(___flge@ff1+1)^0,w,c
  7189   0028D6  5033               	movf	(___flge@ff2+2)^0,w,c
  7190   0028D8  582F               	subwfb	(___flge@ff1+2)^0,w,c
  7191   0028DA  5034               	movf	(___flge@ff2+3)^0,w,c
  7192   0028DC  5830               	subwfb	(___flge@ff1+3)^0,w,c
  7193   0028DE  B0D8               	btfsc	status,0,c
  7194   0028E0  EF74  F014         	goto	u5481
  7195   0028E4  EF76  F014         	goto	u5480
  7196   0028E8                     u5481:
  7197   0028E8  EF79  F014         	goto	l5067
  7198   0028EC                     u5480:
  7199   0028EC  90D8               	bcf	status,0,c
  7200   0028EE  EF7A  F014         	goto	l755
  7201   0028F2                     l5067:
  7202   0028F2  80D8               	bsf	status,0,c
  7203   0028F4                     l755:
  7204   0028F4  0012               	return		;funcret
  7205   0028F6                     __end_of___flge:
  7206                           	callstack 0
  7207                           
  7208 ;; *************** function _adcCal *****************
  7209 ;; Defined at:
  7210 ;;		line 48 in file "main.c"
  7211 ;; Parameters:    Size  Location     Type
  7212 ;;		None
  7213 ;; Auto vars:     Size  Location     Type
  7214 ;;  convertedVal    2    0        unsigned short 
  7215 ;; Return value:  Size  Location     Type
  7216 ;;                  2    9[COMRAM] unsigned short 
  7217 ;; Registers used:
  7218 ;;		wreg, status,2, status,0, cstack
  7219 ;; Tracked objects:
  7220 ;;		On entry : 0/0
  7221 ;;		On exit  : 0/0
  7222 ;;		Unchanged: 0/0
  7223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7224 ;;      Params:         2       0       0       0       0       0       0       0       0
  7225 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7226 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7227 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7228 ;;Total ram usage:        2 bytes
  7229 ;; Hardware stack levels used: 1
  7230 ;; Hardware stack levels required when called: 5
  7231 ;; This function calls:
  7232 ;;		_ADC_GetConversionResult
  7233 ;;		_ADC_IsConversionDone
  7234 ;;		_ADC_SelectChannel
  7235 ;;		_ADC_StartConversion
  7236 ;; This function is called by:
  7237 ;;		_main
  7238 ;; This function uses a non-reentrant model
  7239 ;;
  7240                           
  7241                           	psect	text30
  7242   0031AA                     __ptext30:
  7243                           	callstack 0
  7244   0031AA                     _adcCal:
  7245                           	callstack 25
  7246   0031AA                     
  7247                           ;main.c: 50:     ADC_SelectChannel(channel_AN0);
  7248   0031AA  0E00               	movlw	0
  7249   0031AC  EC65  F01A         	call	_ADC_SelectChannel
  7250   0031B0                     
  7251                           ;main.c: 51:     ADC_StartConversion();
  7252   0031B0  ECD9  F01A         	call	_ADC_StartConversion	;wreg free
  7253   0031B4                     
  7254                           ;main.c: 52:     _delay((unsigned long)((1)*(4000000/4000.0)));
  7255   0031B4  0EC8               	movlw	200
  7256   0031B6                     u6307:
  7257   0031B6  D000               	nop2	
  7258   0031B8  2EE8               	decfsz	wreg,f,c
  7259   0031BA  D7FD               	bra	u6307
  7260   0031BC                     
  7261                           ;main.c: 54:     if(ADC_IsConversionDone()==1){
  7262   0031BC  EC7C  F01A         	call	_ADC_IsConversionDone	;wreg free
  7263   0031C0  06E8               	decf	wreg,f,c
  7264   0031C2  A4D8               	btfss	status,2,c
  7265   0031C4  EFE6  F018         	goto	u4331
  7266   0031C8  EFE8  F018         	goto	u4330
  7267   0031CC                     u4331:
  7268   0031CC  EFF0  F018         	goto	l4327
  7269   0031D0                     u4330:
  7270   0031D0                     
  7271                           ;main.c: 56:         return ADC_GetConversionResult();
  7272   0031D0  EC86  F01A         	call	_ADC_GetConversionResult	;wreg free
  7273   0031D4  C006  F00A         	movff	?_ADC_GetConversionResult,?_adcCal
  7274   0031D8  C007  F00B         	movff	?_ADC_GetConversionResult+1,?_adcCal+1
  7275   0031DC  EFF4  F018         	goto	l396
  7276   0031E0                     l4327:
  7277                           
  7278                           ;main.c: 59:         return 0;
  7279   0031E0  0E00               	movlw	0
  7280   0031E2  6E0B               	movwf	(?_adcCal+1)^0,c
  7281   0031E4  0E00               	movlw	0
  7282   0031E6  6E0A               	movwf	?_adcCal^0,c
  7283   0031E8                     l396:
  7284   0031E8  0012               	return		;funcret
  7285   0031EA                     __end_of_adcCal:
  7286                           	callstack 0
  7287                           
  7288 ;; *************** function _ADC_StartConversion *****************
  7289 ;; Defined at:
  7290 ;;		line 91 in file "mcc_generated_files/adc.c"
  7291 ;; Parameters:    Size  Location     Type
  7292 ;;		None
  7293 ;; Auto vars:     Size  Location     Type
  7294 ;;		None
  7295 ;; Return value:  Size  Location     Type
  7296 ;;                  1    wreg      void 
  7297 ;; Registers used:
  7298 ;;		None
  7299 ;; Tracked objects:
  7300 ;;		On entry : 0/0
  7301 ;;		On exit  : 0/0
  7302 ;;		Unchanged: 0/0
  7303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7304 ;;      Params:         0       0       0       0       0       0       0       0       0
  7305 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7306 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7307 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7308 ;;Total ram usage:        0 bytes
  7309 ;; Hardware stack levels used: 1
  7310 ;; Hardware stack levels required when called: 4
  7311 ;; This function calls:
  7312 ;;		Nothing
  7313 ;; This function is called by:
  7314 ;;		_adcCal
  7315 ;; This function uses a non-reentrant model
  7316 ;;
  7317                           
  7318                           	psect	text31
  7319   0035B2                     __ptext31:
  7320                           	callstack 0
  7321   0035B2                     _ADC_StartConversion:
  7322                           	callstack 25
  7323   0035B2                     
  7324                           ;mcc_generated_files/adc.c: 94:     ADCON0bits.GO_nDONE = 1;
  7325   0035B2  82C2               	bsf	194,1,c	;volatile
  7326   0035B4  0012               	return		;funcret
  7327   0035B6                     __end_of_ADC_StartConversion:
  7328                           	callstack 0
  7329                           
  7330 ;; *************** function _ADC_SelectChannel *****************
  7331 ;; Defined at:
  7332 ;;		line 83 in file "mcc_generated_files/adc.c"
  7333 ;; Parameters:    Size  Location     Type
  7334 ;;  channel         1    wreg     enum E4859
  7335 ;; Auto vars:     Size  Location     Type
  7336 ;;  channel         1    6[COMRAM] enum E4859
  7337 ;; Return value:  Size  Location     Type
  7338 ;;                  1    wreg      void 
  7339 ;; Registers used:
  7340 ;;		wreg, status,2, status,0
  7341 ;; Tracked objects:
  7342 ;;		On entry : 0/0
  7343 ;;		On exit  : 0/0
  7344 ;;		Unchanged: 0/0
  7345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7346 ;;      Params:         0       0       0       0       0       0       0       0       0
  7347 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7348 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7349 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7350 ;;Total ram usage:        2 bytes
  7351 ;; Hardware stack levels used: 1
  7352 ;; Hardware stack levels required when called: 4
  7353 ;; This function calls:
  7354 ;;		Nothing
  7355 ;; This function is called by:
  7356 ;;		_adcCal
  7357 ;; This function uses a non-reentrant model
  7358 ;;
  7359                           
  7360                           	psect	text32
  7361   0034CA                     __ptext32:
  7362                           	callstack 0
  7363   0034CA                     _ADC_SelectChannel:
  7364                           	callstack 25
  7365                           
  7366                           ;incstack = 0
  7367                           ;ADC_SelectChannel@channel stored from wreg
  7368   0034CA  6E07               	movwf	ADC_SelectChannel@channel^0,c
  7369   0034CC                     
  7370                           ;mcc_generated_files/adc.c: 83: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 84: {;mcc_generated_files/adc.c: 86:     ADCON0bits.CHS = channel;
  7371   0034CC  C007  F006         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
  7372   0034D0  4606               	rlncf	??_ADC_SelectChannel^0,f,c
  7373   0034D2  4606               	rlncf	??_ADC_SelectChannel^0,f,c
  7374   0034D4  50C2               	movf	194,w,c	;volatile
  7375   0034D6  1806               	xorwf	??_ADC_SelectChannel^0,w,c
  7376   0034D8  0B83               	andlw	-125
  7377   0034DA  1806               	xorwf	??_ADC_SelectChannel^0,w,c
  7378   0034DC  6EC2               	movwf	194,c	;volatile
  7379   0034DE                     
  7380                           ;mcc_generated_files/adc.c: 88:     ADCON0bits.ADON = 1;
  7381   0034DE  80C2               	bsf	194,0,c	;volatile
  7382   0034E0  0012               	return		;funcret
  7383   0034E2                     __end_of_ADC_SelectChannel:
  7384                           	callstack 0
  7385                           
  7386 ;; *************** function _ADC_IsConversionDone *****************
  7387 ;; Defined at:
  7388 ;;		line 98 in file "mcc_generated_files/adc.c"
  7389 ;; Parameters:    Size  Location     Type
  7390 ;;		None
  7391 ;; Auto vars:     Size  Location     Type
  7392 ;;		None
  7393 ;; Return value:  Size  Location     Type
  7394 ;;                  1    wreg      _Bool 
  7395 ;; Registers used:
  7396 ;;		wreg
  7397 ;; Tracked objects:
  7398 ;;		On entry : 0/0
  7399 ;;		On exit  : 0/0
  7400 ;;		Unchanged: 0/0
  7401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7402 ;;      Params:         0       0       0       0       0       0       0       0       0
  7403 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7404 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7405 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7406 ;;Total ram usage:        0 bytes
  7407 ;; Hardware stack levels used: 1
  7408 ;; Hardware stack levels required when called: 4
  7409 ;; This function calls:
  7410 ;;		Nothing
  7411 ;; This function is called by:
  7412 ;;		_adcCal
  7413 ;; This function uses a non-reentrant model
  7414 ;;
  7415                           
  7416                           	psect	text33
  7417   0034F8                     __ptext33:
  7418                           	callstack 0
  7419   0034F8                     _ADC_IsConversionDone:
  7420                           	callstack 25
  7421   0034F8                     
  7422                           ;mcc_generated_files/adc.c: 101:     return ((_Bool)(!ADCON0bits.GO_nDONE));
  7423   0034F8  A2C2               	btfss	194,1,c	;volatile
  7424   0034FA  EF81  F01A         	goto	u4021
  7425   0034FE  EF84  F01A         	goto	u4020
  7426   003502                     u4021:
  7427   003502  0E01               	movlw	1
  7428   003504  EF85  F01A         	goto	u4030
  7429   003508                     u4020:
  7430   003508  0E00               	movlw	0
  7431   00350A                     u4030:
  7432   00350A  0012               	return		;funcret
  7433   00350C                     __end_of_ADC_IsConversionDone:
  7434                           	callstack 0
  7435                           
  7436 ;; *************** function _ADC_GetConversionResult *****************
  7437 ;; Defined at:
  7438 ;;		line 104 in file "mcc_generated_files/adc.c"
  7439 ;; Parameters:    Size  Location     Type
  7440 ;;		None
  7441 ;; Auto vars:     Size  Location     Type
  7442 ;;		None
  7443 ;; Return value:  Size  Location     Type
  7444 ;;                  2    5[COMRAM] unsigned short 
  7445 ;; Registers used:
  7446 ;;		wreg, status,2, status,0
  7447 ;; Tracked objects:
  7448 ;;		On entry : 0/0
  7449 ;;		On exit  : 0/0
  7450 ;;		Unchanged: 0/0
  7451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7452 ;;      Params:         2       0       0       0       0       0       0       0       0
  7453 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7454 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7455 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7456 ;;Total ram usage:        4 bytes
  7457 ;; Hardware stack levels used: 1
  7458 ;; Hardware stack levels required when called: 4
  7459 ;; This function calls:
  7460 ;;		Nothing
  7461 ;; This function is called by:
  7462 ;;		_adcCal
  7463 ;; This function uses a non-reentrant model
  7464 ;;
  7465                           
  7466                           	psect	text34
  7467   00350C                     __ptext34:
  7468                           	callstack 0
  7469   00350C                     _ADC_GetConversionResult:
  7470                           	callstack 25
  7471   00350C                     
  7472                           ;mcc_generated_files/adc.c: 107:      return ((adc_result_t)((ADRESH << 8) + ADRESL));
  7473   00350C  50C4               	movf	196,w,c	;volatile
  7474   00350E  6E09               	movwf	(??_ADC_GetConversionResult+1)^0,c
  7475   003510  6A08               	clrf	??_ADC_GetConversionResult^0,c
  7476   003512  50C3               	movf	195,w,c	;volatile
  7477   003514  2408               	addwf	??_ADC_GetConversionResult^0,w,c
  7478   003516  6E06               	movwf	?_ADC_GetConversionResult^0,c
  7479   003518  0E00               	movlw	0
  7480   00351A  2009               	addwfc	(??_ADC_GetConversionResult+1)^0,w,c
  7481   00351C  6E07               	movwf	(?_ADC_GetConversionResult+1)^0,c
  7482   00351E  0012               	return		;funcret
  7483   003520                     __end_of_ADC_GetConversionResult:
  7484                           	callstack 0
  7485                           
  7486 ;; *************** function _SYSTEM_Initialize *****************
  7487 ;; Defined at:
  7488 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7489 ;; Parameters:    Size  Location     Type
  7490 ;;		None
  7491 ;; Auto vars:     Size  Location     Type
  7492 ;;		None
  7493 ;; Return value:  Size  Location     Type
  7494 ;;                  1    wreg      void 
  7495 ;; Registers used:
  7496 ;;		wreg, status,2, status,0, cstack
  7497 ;; Tracked objects:
  7498 ;;		On entry : 0/0
  7499 ;;		On exit  : 0/0
  7500 ;;		Unchanged: 0/0
  7501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7502 ;;      Params:         0       0       0       0       0       0       0       0       0
  7503 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7504 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7505 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7506 ;;Total ram usage:        0 bytes
  7507 ;; Hardware stack levels used: 1
  7508 ;; Hardware stack levels required when called: 6
  7509 ;; This function calls:
  7510 ;;		_ADC_Initialize
  7511 ;;		_EUSART1_Initialize
  7512 ;;		_EXT_INT_Initialize
  7513 ;;		_INTERRUPT_Initialize
  7514 ;;		_OSCILLATOR_Initialize
  7515 ;;		_PIN_MANAGER_Initialize
  7516 ;;		_TMR0_Initialize
  7517 ;; This function is called by:
  7518 ;;		_main
  7519 ;; This function uses a non-reentrant model
  7520 ;;
  7521                           
  7522                           	psect	text35
  7523   0034AC                     __ptext35:
  7524                           	callstack 0
  7525   0034AC                     _SYSTEM_Initialize:
  7526                           	callstack 24
  7527   0034AC                     
  7528                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  7529   0034AC  ECDB  F01A         	call	_INTERRUPT_Initialize	;wreg free
  7530   0034B0                     
  7531                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  7532   0034B0  EC94  F018         	call	_PIN_MANAGER_Initialize	;wreg free
  7533   0034B4                     
  7534                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  7535   0034B4  EC90  F01A         	call	_OSCILLATOR_Initialize	;wreg free
  7536   0034B8                     
  7537                           ;mcc_generated_files/mcc.c: 56:     EXT_INT_Initialize();
  7538   0034B8  EC31  F019         	call	_EXT_INT_Initialize	;wreg free
  7539   0034BC                     
  7540                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  7541   0034BC  EC45  F01A         	call	_TMR0_Initialize	;wreg free
  7542   0034C0                     
  7543                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  7544   0034C0  EC71  F01A         	call	_ADC_Initialize	;wreg free
  7545   0034C4                     
  7546                           ;mcc_generated_files/mcc.c: 59:     EUSART1_Initialize();
  7547   0034C4  EC17  F017         	call	_EUSART1_Initialize	;wreg free
  7548   0034C8  0012               	return		;funcret
  7549   0034CA                     __end_of_SYSTEM_Initialize:
  7550                           	callstack 0
  7551                           
  7552 ;; *************** function _TMR0_Initialize *****************
  7553 ;; Defined at:
  7554 ;;		line 68 in file "mcc_generated_files/tmr0.c"
  7555 ;; Parameters:    Size  Location     Type
  7556 ;;		None
  7557 ;; Auto vars:     Size  Location     Type
  7558 ;;		None
  7559 ;; Return value:  Size  Location     Type
  7560 ;;                  1    wreg      void 
  7561 ;; Registers used:
  7562 ;;		wreg, status,2, status,0, cstack
  7563 ;; Tracked objects:
  7564 ;;		On entry : 0/0
  7565 ;;		On exit  : 0/0
  7566 ;;		Unchanged: 0/0
  7567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7568 ;;      Params:         0       0       0       0       0       0       0       0       0
  7569 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7570 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7571 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7572 ;;Total ram usage:        0 bytes
  7573 ;; Hardware stack levels used: 1
  7574 ;; Hardware stack levels required when called: 5
  7575 ;; This function calls:
  7576 ;;		_TMR0_SetInterruptHandler
  7577 ;; This function is called by:
  7578 ;;		_SYSTEM_Initialize
  7579 ;; This function uses a non-reentrant model
  7580 ;;
  7581                           
  7582                           	psect	text36
  7583   00348A                     __ptext36:
  7584                           	callstack 0
  7585   00348A                     _TMR0_Initialize:
  7586                           	callstack 24
  7587   00348A                     
  7588                           ;mcc_generated_files/tmr0.c: 73:     TMR0H = 0x00;
  7589   00348A  0E00               	movlw	0
  7590   00348C  6ED7               	movwf	215,c	;volatile
  7591                           
  7592                           ;mcc_generated_files/tmr0.c: 76:     TMR0L = 0x00;
  7593   00348E  0E00               	movlw	0
  7594   003490  6ED6               	movwf	214,c	;volatile
  7595                           
  7596                           ;mcc_generated_files/tmr0.c: 80:     timer0ReloadVal = 0;
  7597   003492  0E00               	movlw	0
  7598   003494  6E56               	movwf	_timer0ReloadVal^0,c	;volatile
  7599   003496                     
  7600                           ;mcc_generated_files/tmr0.c: 83:     INTCONbits.TMR0IF = 0;
  7601   003496  94F2               	bcf	242,2,c	;volatile
  7602   003498                     
  7603                           ;mcc_generated_files/tmr0.c: 86:     INTCONbits.TMR0IE = 1;
  7604   003498  8AF2               	bsf	242,5,c	;volatile
  7605   00349A                     
  7606                           ;mcc_generated_files/tmr0.c: 89:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  7607   00349A  0EBA               	movlw	low _TMR0_DefaultInterruptHandler
  7608   00349C  6E06               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  7609   00349E  0E35               	movlw	high _TMR0_DefaultInterruptHandler
  7610   0034A0  6E07               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  7611   0034A2  EC9E  F01A         	call	_TMR0_SetInterruptHandler	;wreg free
  7612   0034A6                     
  7613                           ;mcc_generated_files/tmr0.c: 92:     T0CON = 0xDF;
  7614   0034A6  0EDF               	movlw	223
  7615   0034A8  6ED5               	movwf	213,c	;volatile
  7616   0034AA  0012               	return		;funcret
  7617   0034AC                     __end_of_TMR0_Initialize:
  7618                           	callstack 0
  7619                           
  7620 ;; *************** function _TMR0_SetInterruptHandler *****************
  7621 ;; Defined at:
  7622 ;;		line 157 in file "mcc_generated_files/tmr0.c"
  7623 ;; Parameters:    Size  Location     Type
  7624 ;;  InterruptHan    2    5[COMRAM] PTR FTN()void 
  7625 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  7626 ;; Auto vars:     Size  Location     Type
  7627 ;;		None
  7628 ;; Return value:  Size  Location     Type
  7629 ;;                  1    wreg      void 
  7630 ;; Registers used:
  7631 ;;		wreg, status,2, status,0
  7632 ;; Tracked objects:
  7633 ;;		On entry : 0/0
  7634 ;;		On exit  : 0/0
  7635 ;;		Unchanged: 0/0
  7636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7637 ;;      Params:         2       0       0       0       0       0       0       0       0
  7638 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7639 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7640 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7641 ;;Total ram usage:        2 bytes
  7642 ;; Hardware stack levels used: 1
  7643 ;; Hardware stack levels required when called: 4
  7644 ;; This function calls:
  7645 ;;		Nothing
  7646 ;; This function is called by:
  7647 ;;		_TMR0_Initialize
  7648 ;; This function uses a non-reentrant model
  7649 ;;
  7650                           
  7651                           	psect	text37
  7652   00353C                     __ptext37:
  7653                           	callstack 0
  7654   00353C                     _TMR0_SetInterruptHandler:
  7655                           	callstack 24
  7656   00353C                     
  7657                           ;mcc_generated_files/tmr0.c: 158:     TMR0_InterruptHandler = InterruptHandler;
  7658   00353C  C006  F0E0         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  7659   003540  C007  F0E1         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  7660   003544  0012               	return		;funcret
  7661   003546                     __end_of_TMR0_SetInterruptHandler:
  7662                           	callstack 0
  7663                           
  7664 ;; *************** function _PIN_MANAGER_Initialize *****************
  7665 ;; Defined at:
  7666 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7667 ;; Parameters:    Size  Location     Type
  7668 ;;		None
  7669 ;; Auto vars:     Size  Location     Type
  7670 ;;		None
  7671 ;; Return value:  Size  Location     Type
  7672 ;;                  1    wreg      void 
  7673 ;; Registers used:
  7674 ;;		wreg, status,2
  7675 ;; Tracked objects:
  7676 ;;		On entry : 0/0
  7677 ;;		On exit  : 0/0
  7678 ;;		Unchanged: 0/0
  7679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7680 ;;      Params:         0       0       0       0       0       0       0       0       0
  7681 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7682 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7683 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7684 ;;Total ram usage:        0 bytes
  7685 ;; Hardware stack levels used: 1
  7686 ;; Hardware stack levels required when called: 4
  7687 ;; This function calls:
  7688 ;;		Nothing
  7689 ;; This function is called by:
  7690 ;;		_SYSTEM_Initialize
  7691 ;; This function uses a non-reentrant model
  7692 ;;
  7693                           
  7694                           	psect	text38
  7695   003128                     __ptext38:
  7696                           	callstack 0
  7697   003128                     _PIN_MANAGER_Initialize:
  7698                           	callstack 25
  7699   003128                     
  7700                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  7701   003128  0E00               	movlw	0
  7702   00312A  6E8D               	movwf	141,c	;volatile
  7703                           
  7704                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  7705   00312C  0E00               	movlw	0
  7706   00312E  6E8C               	movwf	140,c	;volatile
  7707                           
  7708                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  7709   003130  0E00               	movlw	0
  7710   003132  6E89               	movwf	137,c	;volatile
  7711                           
  7712                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  7713   003134  0E00               	movlw	0
  7714   003136  6E8A               	movwf	138,c	;volatile
  7715                           
  7716                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  7717   003138  0E00               	movlw	0
  7718   00313A  6E8B               	movwf	139,c	;volatile
  7719                           
  7720                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  7721   00313C  0E07               	movlw	7
  7722   00313E  6E96               	movwf	150,c	;volatile
  7723   003140                     
  7724                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  7725   003140  6892               	setf	146,c	;volatile
  7726   003142                     
  7727                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  7728   003142  6893               	setf	147,c	;volatile
  7729                           
  7730                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x87;
  7731   003144  0E87               	movlw	135
  7732   003146  6E94               	movwf	148,c	;volatile
  7733                           
  7734                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFE;
  7735   003148  0EFE               	movlw	254
  7736   00314A  6E95               	movwf	149,c	;volatile
  7737                           
  7738                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFE;
  7739   00314C  0EFE               	movlw	254
  7740   00314E  010F               	movlb	15	; () banked
  7741   003150  6F5E               	movwf	94,b	;volatile
  7742                           
  7743                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x04;
  7744   003152  0E04               	movlw	4
  7745   003154  6F5D               	movwf	93,b	;volatile
  7746                           
  7747                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x38;
  7748   003156  0E38               	movlw	56
  7749   003158  6F5C               	movwf	92,b	;volatile
  7750                           
  7751                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  7752   00315A  0E07               	movlw	7
  7753   00315C  6F5F               	movwf	95,b	;volatile
  7754                           
  7755                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x2D;
  7756   00315E  0E2D               	movlw	45
  7757   003160  6F5B               	movwf	91,b	;volatile
  7758                           
  7759                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
  7760   003162  0E00               	movlw	0
  7761   003164  6E85               	movwf	133,c	;volatile
  7762   003166                     
  7763                           ; BSR set to: 15
  7764                           ;mcc_generated_files/pin_manager.c: 88:     INTCON2bits.nRBPU = 1;
  7765   003166  8EF1               	bsf	241,7,c	;volatile
  7766   003168                     
  7767                           ; BSR set to: 15
  7768   003168  0012               	return		;funcret
  7769   00316A                     __end_of_PIN_MANAGER_Initialize:
  7770                           	callstack 0
  7771                           
  7772 ;; *************** function _OSCILLATOR_Initialize *****************
  7773 ;; Defined at:
  7774 ;;		line 62 in file "mcc_generated_files/mcc.c"
  7775 ;; Parameters:    Size  Location     Type
  7776 ;;		None
  7777 ;; Auto vars:     Size  Location     Type
  7778 ;;		None
  7779 ;; Return value:  Size  Location     Type
  7780 ;;                  1    wreg      void 
  7781 ;; Registers used:
  7782 ;;		wreg, status,2
  7783 ;; Tracked objects:
  7784 ;;		On entry : 0/0
  7785 ;;		On exit  : 0/0
  7786 ;;		Unchanged: 0/0
  7787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7788 ;;      Params:         0       0       0       0       0       0       0       0       0
  7789 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7790 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7791 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7792 ;;Total ram usage:        0 bytes
  7793 ;; Hardware stack levels used: 1
  7794 ;; Hardware stack levels required when called: 4
  7795 ;; This function calls:
  7796 ;;		Nothing
  7797 ;; This function is called by:
  7798 ;;		_SYSTEM_Initialize
  7799 ;; This function uses a non-reentrant model
  7800 ;;
  7801                           
  7802                           	psect	text39
  7803   003520                     __ptext39:
  7804                           	callstack 0
  7805   003520                     _OSCILLATOR_Initialize:
  7806                           	callstack 25
  7807   003520                     
  7808                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x50;
  7809   003520  0E50               	movlw	80
  7810   003522  6ED3               	movwf	211,c	;volatile
  7811                           
  7812                           ;mcc_generated_files/mcc.c: 67:     OSCCON2 = 0x00;
  7813   003524  0E00               	movlw	0
  7814   003526  6ED2               	movwf	210,c	;volatile
  7815                           
  7816                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x00;
  7817   003528  0E00               	movlw	0
  7818   00352A  6E9B               	movwf	155,c	;volatile
  7819                           
  7820                           ;mcc_generated_files/mcc.c: 71:     ACTCON = 0x00;
  7821   00352C  0E00               	movlw	0
  7822   00352E  6EB5               	movwf	181,c	;volatile
  7823   003530  0012               	return		;funcret
  7824   003532                     __end_of_OSCILLATOR_Initialize:
  7825                           	callstack 0
  7826                           
  7827 ;; *************** function _INTERRUPT_Initialize *****************
  7828 ;; Defined at:
  7829 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7830 ;; Parameters:    Size  Location     Type
  7831 ;;		None
  7832 ;; Auto vars:     Size  Location     Type
  7833 ;;		None
  7834 ;; Return value:  Size  Location     Type
  7835 ;;                  1    wreg      void 
  7836 ;; Registers used:
  7837 ;;		None
  7838 ;; Tracked objects:
  7839 ;;		On entry : 0/0
  7840 ;;		On exit  : 0/0
  7841 ;;		Unchanged: 0/0
  7842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7843 ;;      Params:         0       0       0       0       0       0       0       0       0
  7844 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7845 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7846 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7847 ;;Total ram usage:        0 bytes
  7848 ;; Hardware stack levels used: 1
  7849 ;; Hardware stack levels required when called: 4
  7850 ;; This function calls:
  7851 ;;		Nothing
  7852 ;; This function is called by:
  7853 ;;		_SYSTEM_Initialize
  7854 ;; This function uses a non-reentrant model
  7855 ;;
  7856                           
  7857                           	psect	text40
  7858   0035B6                     __ptext40:
  7859                           	callstack 0
  7860   0035B6                     _INTERRUPT_Initialize:
  7861                           	callstack 25
  7862   0035B6                     
  7863                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  7864   0035B6  9ED0               	bcf	208,7,c	;volatile
  7865   0035B8  0012               	return		;funcret
  7866   0035BA                     __end_of_INTERRUPT_Initialize:
  7867                           	callstack 0
  7868                           
  7869 ;; *************** function _EXT_INT_Initialize *****************
  7870 ;; Defined at:
  7871 ;;		line 115 in file "mcc_generated_files/ext_int.c"
  7872 ;; Parameters:    Size  Location     Type
  7873 ;;		None
  7874 ;; Auto vars:     Size  Location     Type
  7875 ;;		None
  7876 ;; Return value:  Size  Location     Type
  7877 ;;                  1    wreg      void 
  7878 ;; Registers used:
  7879 ;;		wreg, status,2, status,0, cstack
  7880 ;; Tracked objects:
  7881 ;;		On entry : 0/0
  7882 ;;		On exit  : 0/0
  7883 ;;		Unchanged: 0/0
  7884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7885 ;;      Params:         0       0       0       0       0       0       0       0       0
  7886 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7887 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7888 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7889 ;;Total ram usage:        0 bytes
  7890 ;; Hardware stack levels used: 1
  7891 ;; Hardware stack levels required when called: 5
  7892 ;; This function calls:
  7893 ;;		_INT0_SetInterruptHandler
  7894 ;;		_INT1_SetInterruptHandler
  7895 ;;		_INT2_SetInterruptHandler
  7896 ;; This function is called by:
  7897 ;;		_SYSTEM_Initialize
  7898 ;; This function uses a non-reentrant model
  7899 ;;
  7900                           
  7901                           	psect	text41
  7902   003262                     __ptext41:
  7903                           	callstack 0
  7904   003262                     _EXT_INT_Initialize:
  7905                           	callstack 24
  7906   003262                     
  7907                           ;mcc_generated_files/ext_int.c: 120:     (INTCONbits.INT0IF = 0);
  7908   003262  92F2               	bcf	242,1,c	;volatile
  7909                           
  7910                           ;mcc_generated_files/ext_int.c: 121:     (INTCON2bits.INTEDG0 = 1);
  7911   003264  8CF1               	bsf	241,6,c	;volatile
  7912   003266                     
  7913                           ;mcc_generated_files/ext_int.c: 123:     INT0_SetInterruptHandler(INT0_DefaultInterruptH
      +                          andler);
  7914   003266  0EC0               	movlw	low _INT0_DefaultInterruptHandler
  7915   003268  6E06               	movwf	INT0_SetInterruptHandler@InterruptHandler^0,c
  7916   00326A  0E35               	movlw	high _INT0_DefaultInterruptHandler
  7917   00326C  6E07               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
  7918   00326E  ECAD  F01A         	call	_INT0_SetInterruptHandler	;wreg free
  7919   003272                     
  7920                           ;mcc_generated_files/ext_int.c: 124:     (INTCONbits.INT0IE = 1);
  7921   003272  88F2               	bsf	242,4,c	;volatile
  7922   003274                     
  7923                           ;mcc_generated_files/ext_int.c: 129:     (INTCON3bits.INT1IF = 0);
  7924   003274  90F0               	bcf	240,0,c	;volatile
  7925   003276                     
  7926                           ;mcc_generated_files/ext_int.c: 130:     (INTCON2bits.INTEDG1 = 1);
  7927   003276  8AF1               	bsf	241,5,c	;volatile
  7928                           
  7929                           ;mcc_generated_files/ext_int.c: 132:     INT1_SetInterruptHandler(INT1_DefaultInterruptH
      +                          andler);
  7930   003278  0EBE               	movlw	low _INT1_DefaultInterruptHandler
  7931   00327A  6E06               	movwf	INT1_SetInterruptHandler@InterruptHandler^0,c
  7932   00327C  0E35               	movlw	high _INT1_DefaultInterruptHandler
  7933   00327E  6E07               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^0,c
  7934   003280  ECA8  F01A         	call	_INT1_SetInterruptHandler	;wreg free
  7935   003284                     
  7936                           ;mcc_generated_files/ext_int.c: 133:     (INTCON3bits.INT1IE = 1);
  7937   003284  86F0               	bsf	240,3,c	;volatile
  7938   003286                     
  7939                           ;mcc_generated_files/ext_int.c: 138:     (INTCON3bits.INT2IF = 0);
  7940   003286  92F0               	bcf	240,1,c	;volatile
  7941   003288                     
  7942                           ;mcc_generated_files/ext_int.c: 139:     (INTCON2bits.INTEDG2 = 1);
  7943   003288  88F1               	bsf	241,4,c	;volatile
  7944                           
  7945                           ;mcc_generated_files/ext_int.c: 141:     INT2_SetInterruptHandler(INT2_DefaultInterruptH
      +                          andler);
  7946   00328A  0EBC               	movlw	low _INT2_DefaultInterruptHandler
  7947   00328C  6E06               	movwf	INT2_SetInterruptHandler@InterruptHandler^0,c
  7948   00328E  0E35               	movlw	high _INT2_DefaultInterruptHandler
  7949   003290  6E07               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)^0,c
  7950   003292  ECA3  F01A         	call	_INT2_SetInterruptHandler	;wreg free
  7951   003296                     
  7952                           ;mcc_generated_files/ext_int.c: 142:     (INTCON3bits.INT2IE = 1);
  7953   003296  88F0               	bsf	240,4,c	;volatile
  7954   003298  0012               	return		;funcret
  7955   00329A                     __end_of_EXT_INT_Initialize:
  7956                           	callstack 0
  7957                           
  7958 ;; *************** function _INT2_SetInterruptHandler *****************
  7959 ;; Defined at:
  7960 ;;		line 106 in file "mcc_generated_files/ext_int.c"
  7961 ;; Parameters:    Size  Location     Type
  7962 ;;  InterruptHan    2    5[COMRAM] PTR FTN()void 
  7963 ;;		 -> INT2_DefaultInterruptHandler(1), 
  7964 ;; Auto vars:     Size  Location     Type
  7965 ;;		None
  7966 ;; Return value:  Size  Location     Type
  7967 ;;                  1    wreg      void 
  7968 ;; Registers used:
  7969 ;;		wreg, status,2, status,0
  7970 ;; Tracked objects:
  7971 ;;		On entry : 0/0
  7972 ;;		On exit  : 0/0
  7973 ;;		Unchanged: 0/0
  7974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7975 ;;      Params:         2       0       0       0       0       0       0       0       0
  7976 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7977 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7978 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7979 ;;Total ram usage:        2 bytes
  7980 ;; Hardware stack levels used: 1
  7981 ;; Hardware stack levels required when called: 4
  7982 ;; This function calls:
  7983 ;;		Nothing
  7984 ;; This function is called by:
  7985 ;;		_EXT_INT_Initialize
  7986 ;; This function uses a non-reentrant model
  7987 ;;
  7988                           
  7989                           	psect	text42
  7990   003546                     __ptext42:
  7991                           	callstack 0
  7992   003546                     _INT2_SetInterruptHandler:
  7993                           	callstack 24
  7994   003546                     
  7995                           ;mcc_generated_files/ext_int.c: 107:     INT2_InterruptHandler = InterruptHandler;
  7996   003546  C006  F0D4         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  7997   00354A  C007  F0D5         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  7998   00354E  0012               	return		;funcret
  7999   003550                     __end_of_INT2_SetInterruptHandler:
  8000                           	callstack 0
  8001                           
  8002 ;; *************** function _INT1_SetInterruptHandler *****************
  8003 ;; Defined at:
  8004 ;;		line 80 in file "mcc_generated_files/ext_int.c"
  8005 ;; Parameters:    Size  Location     Type
  8006 ;;  InterruptHan    2    5[COMRAM] PTR FTN()void 
  8007 ;;		 -> INT1_DefaultInterruptHandler(1), 
  8008 ;; Auto vars:     Size  Location     Type
  8009 ;;		None
  8010 ;; Return value:  Size  Location     Type
  8011 ;;                  1    wreg      void 
  8012 ;; Registers used:
  8013 ;;		wreg, status,2, status,0
  8014 ;; Tracked objects:
  8015 ;;		On entry : 0/0
  8016 ;;		On exit  : 0/0
  8017 ;;		Unchanged: 0/0
  8018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8019 ;;      Params:         2       0       0       0       0       0       0       0       0
  8020 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8021 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8022 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8023 ;;Total ram usage:        2 bytes
  8024 ;; Hardware stack levels used: 1
  8025 ;; Hardware stack levels required when called: 4
  8026 ;; This function calls:
  8027 ;;		Nothing
  8028 ;; This function is called by:
  8029 ;;		_EXT_INT_Initialize
  8030 ;; This function uses a non-reentrant model
  8031 ;;
  8032                           
  8033                           	psect	text43
  8034   003550                     __ptext43:
  8035                           	callstack 0
  8036   003550                     _INT1_SetInterruptHandler:
  8037                           	callstack 24
  8038   003550                     
  8039                           ;mcc_generated_files/ext_int.c: 81:     INT1_InterruptHandler = InterruptHandler;
  8040   003550  C006  F0D6         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  8041   003554  C007  F0D7         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  8042   003558  0012               	return		;funcret
  8043   00355A                     __end_of_INT1_SetInterruptHandler:
  8044                           	callstack 0
  8045                           
  8046 ;; *************** function _INT0_SetInterruptHandler *****************
  8047 ;; Defined at:
  8048 ;;		line 54 in file "mcc_generated_files/ext_int.c"
  8049 ;; Parameters:    Size  Location     Type
  8050 ;;  InterruptHan    2    5[COMRAM] PTR FTN()void 
  8051 ;;		 -> INT0_DefaultInterruptHandler(1), 
  8052 ;; Auto vars:     Size  Location     Type
  8053 ;;		None
  8054 ;; Return value:  Size  Location     Type
  8055 ;;                  1    wreg      void 
  8056 ;; Registers used:
  8057 ;;		wreg, status,2, status,0
  8058 ;; Tracked objects:
  8059 ;;		On entry : 0/0
  8060 ;;		On exit  : 0/0
  8061 ;;		Unchanged: 0/0
  8062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8063 ;;      Params:         2       0       0       0       0       0       0       0       0
  8064 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8065 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8066 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8067 ;;Total ram usage:        2 bytes
  8068 ;; Hardware stack levels used: 1
  8069 ;; Hardware stack levels required when called: 4
  8070 ;; This function calls:
  8071 ;;		Nothing
  8072 ;; This function is called by:
  8073 ;;		_EXT_INT_Initialize
  8074 ;; This function uses a non-reentrant model
  8075 ;;
  8076                           
  8077                           	psect	text44
  8078   00355A                     __ptext44:
  8079                           	callstack 0
  8080   00355A                     _INT0_SetInterruptHandler:
  8081                           	callstack 24
  8082   00355A                     
  8083                           ;mcc_generated_files/ext_int.c: 55:     INT0_InterruptHandler = InterruptHandler;
  8084   00355A  C006  F0D8         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  8085   00355E  C007  F0D9         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  8086   003562  0012               	return		;funcret
  8087   003564                     __end_of_INT0_SetInterruptHandler:
  8088                           	callstack 0
  8089                           
  8090 ;; *************** function _EUSART1_Initialize *****************
  8091 ;; Defined at:
  8092 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  8093 ;; Parameters:    Size  Location     Type
  8094 ;;		None
  8095 ;; Auto vars:     Size  Location     Type
  8096 ;;		None
  8097 ;; Return value:  Size  Location     Type
  8098 ;;                  1    wreg      void 
  8099 ;; Registers used:
  8100 ;;		wreg, status,2, status,0, cstack
  8101 ;; Tracked objects:
  8102 ;;		On entry : 0/0
  8103 ;;		On exit  : 0/0
  8104 ;;		Unchanged: 0/0
  8105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8106 ;;      Params:         0       0       0       0       0       0       0       0       0
  8107 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8108 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8109 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8110 ;;Total ram usage:        0 bytes
  8111 ;; Hardware stack levels used: 1
  8112 ;; Hardware stack levels required when called: 5
  8113 ;; This function calls:
  8114 ;;		_EUSART1_SetErrorHandler
  8115 ;;		_EUSART1_SetFramingErrorHandler
  8116 ;;		_EUSART1_SetOverrunErrorHandler
  8117 ;;		_EUSART1_SetRxInterruptHandler
  8118 ;;		_EUSART1_SetTxInterruptHandler
  8119 ;; This function is called by:
  8120 ;;		_SYSTEM_Initialize
  8121 ;;		_main
  8122 ;; This function uses a non-reentrant model
  8123 ;;
  8124                           
  8125                           	psect	text45
  8126   002E2E                     __ptext45:
  8127                           	callstack 0
  8128   002E2E                     _EUSART1_Initialize:
  8129                           	callstack 24
  8130   002E2E                     
  8131                           ;mcc_generated_files/eusart1.c: 91:     PIE1bits.RC1IE = 0;
  8132   002E2E  9A9D               	bcf	157,5,c	;volatile
  8133   002E30                     
  8134                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  8135   002E30  0EEA               	movlw	low _EUSART1_Receive_ISR
  8136   002E32  6E06               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  8137   002E34  0E2A               	movlw	high _EUSART1_Receive_ISR
  8138   002E36  6E07               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  8139   002E38  ECB7  F01A         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  8140   002E3C                     
  8141                           ;mcc_generated_files/eusart1.c: 93:     PIE1bits.TX1IE = 0;
  8142   002E3C  989D               	bcf	157,4,c	;volatile
  8143                           
  8144                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  8145   002E3E  0EEA               	movlw	low _EUSART1_Transmit_ISR
  8146   002E40  6E06               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
  8147   002E42  0E31               	movlw	high _EUSART1_Transmit_ISR
  8148   002E44  6E07               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
  8149   002E46  ECB2  F01A         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  8150   002E4A                     
  8151                           ;mcc_generated_files/eusart1.c: 98:     BAUDCON1 = 0x08;
  8152   002E4A  0E08               	movlw	8
  8153   002E4C  6EB8               	movwf	184,c	;volatile
  8154   002E4E                     
  8155                           ;mcc_generated_files/eusart1.c: 101:     RCSTA1 = 0x90;
  8156   002E4E  0E90               	movlw	144
  8157   002E50  6EAB               	movwf	171,c	;volatile
  8158   002E52                     
  8159                           ;mcc_generated_files/eusart1.c: 104:     TXSTA1 = 0x24;
  8160   002E52  0E24               	movlw	36
  8161   002E54  6EAC               	movwf	172,c	;volatile
  8162   002E56                     
  8163                           ;mcc_generated_files/eusart1.c: 107:     SPBRG1 = 0x67;
  8164   002E56  0E67               	movlw	103
  8165   002E58  6EAF               	movwf	175,c	;volatile
  8166   002E5A                     
  8167                           ;mcc_generated_files/eusart1.c: 110:     SPBRGH1 = 0x00;
  8168   002E5A  0E00               	movlw	0
  8169   002E5C  6EB0               	movwf	176,c	;volatile
  8170   002E5E                     
  8171                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  8172   002E5E  0EC2               	movlw	low _EUSART1_DefaultFramingErrorHandler
  8173   002E60  6E06               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  8174   002E62  0E35               	movlw	high _EUSART1_DefaultFramingErrorHandler
  8175   002E64  6E07               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  8176   002E66  ECC1  F01A         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  8177   002E6A                     
  8178                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  8179   002E6A  0EA6               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  8180   002E6C  6E06               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  8181   002E6E  0E35               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  8182   002E70  6E07               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  8183   002E72  ECBC  F01A         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  8184   002E76                     
  8185                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  8186   002E76  0EAC               	movlw	low _EUSART1_DefaultErrorHandler
  8187   002E78  6E06               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  8188   002E7A  0E35               	movlw	high _EUSART1_DefaultErrorHandler
  8189   002E7C  6E07               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  8190   002E7E  ECC6  F01A         	call	_EUSART1_SetErrorHandler	;wreg free
  8191                           
  8192                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  8193   002E82  0E00               	movlw	0
  8194   002E84  6E50               	movwf	_eusart1RxLastError^0,c	;volatile
  8195                           
  8196                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  8197   002E86  0E00               	movlw	0
  8198   002E88  6E55               	movwf	_eusart1TxHead^0,c	;volatile
  8199                           
  8200                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  8201   002E8A  0E00               	movlw	0
  8202   002E8C  6E54               	movwf	_eusart1TxTail^0,c	;volatile
  8203                           
  8204                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  8205   002E8E  0E10               	movlw	16
  8206   002E90  6E58               	movwf	_eusart1TxBufferRemaining^0,c	;volatile
  8207                           
  8208                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  8209   002E92  0E00               	movlw	0
  8210   002E94  6E53               	movwf	_eusart1RxHead^0,c	;volatile
  8211                           
  8212                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  8213   002E96  0E00               	movlw	0
  8214   002E98  6E52               	movwf	_eusart1RxTail^0,c	;volatile
  8215                           
  8216                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  8217   002E9A  0E00               	movlw	0
  8218   002E9C  6E51               	movwf	_eusart1RxCount^0,c	;volatile
  8219   002E9E                     
  8220                           ;mcc_generated_files/eusart1.c: 129:     PIE1bits.RC1IE = 1;
  8221   002E9E  8A9D               	bsf	157,5,c	;volatile
  8222   002EA0  0012               	return		;funcret
  8223   002EA2                     __end_of_EUSART1_Initialize:
  8224                           	callstack 0
  8225                           
  8226 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  8227 ;; Defined at:
  8228 ;;		line 285 in file "mcc_generated_files/eusart1.c"
  8229 ;; Parameters:    Size  Location     Type
  8230 ;;  interruptHan    2    5[COMRAM] PTR FTN()void 
  8231 ;;		 -> EUSART1_Transmit_ISR(1), 
  8232 ;; Auto vars:     Size  Location     Type
  8233 ;;		None
  8234 ;; Return value:  Size  Location     Type
  8235 ;;                  1    wreg      void 
  8236 ;; Registers used:
  8237 ;;		wreg, status,2, status,0
  8238 ;; Tracked objects:
  8239 ;;		On entry : 0/0
  8240 ;;		On exit  : 0/0
  8241 ;;		Unchanged: 0/0
  8242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8243 ;;      Params:         2       0       0       0       0       0       0       0       0
  8244 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8245 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8246 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8247 ;;Total ram usage:        2 bytes
  8248 ;; Hardware stack levels used: 1
  8249 ;; Hardware stack levels required when called: 4
  8250 ;; This function calls:
  8251 ;;		Nothing
  8252 ;; This function is called by:
  8253 ;;		_EUSART1_Initialize
  8254 ;; This function uses a non-reentrant model
  8255 ;;
  8256                           
  8257                           	psect	text46
  8258   003564                     __ptext46:
  8259                           	callstack 0
  8260   003564                     _EUSART1_SetTxInterruptHandler:
  8261                           	callstack 24
  8262   003564                     
  8263                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  8264   003564  C006  F0E4         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  8265   003568  C007  F0E5         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  8266   00356C  0012               	return		;funcret
  8267   00356E                     __end_of_EUSART1_SetTxInterruptHandler:
  8268                           	callstack 0
  8269                           
  8270 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  8271 ;; Defined at:
  8272 ;;		line 289 in file "mcc_generated_files/eusart1.c"
  8273 ;; Parameters:    Size  Location     Type
  8274 ;;  interruptHan    2    5[COMRAM] PTR FTN()void 
  8275 ;;		 -> EUSART1_Receive_ISR(1), 
  8276 ;; Auto vars:     Size  Location     Type
  8277 ;;		None
  8278 ;; Return value:  Size  Location     Type
  8279 ;;                  1    wreg      void 
  8280 ;; Registers used:
  8281 ;;		wreg, status,2, status,0
  8282 ;; Tracked objects:
  8283 ;;		On entry : 0/0
  8284 ;;		On exit  : 0/0
  8285 ;;		Unchanged: 0/0
  8286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8287 ;;      Params:         2       0       0       0       0       0       0       0       0
  8288 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8289 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8290 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8291 ;;Total ram usage:        2 bytes
  8292 ;; Hardware stack levels used: 1
  8293 ;; Hardware stack levels required when called: 4
  8294 ;; This function calls:
  8295 ;;		Nothing
  8296 ;; This function is called by:
  8297 ;;		_EUSART1_Initialize
  8298 ;; This function uses a non-reentrant model
  8299 ;;
  8300                           
  8301                           	psect	text47
  8302   00356E                     __ptext47:
  8303                           	callstack 0
  8304   00356E                     _EUSART1_SetRxInterruptHandler:
  8305                           	callstack 24
  8306   00356E                     
  8307                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  8308   00356E  C006  F0E2         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  8309   003572  C007  F0E3         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  8310   003576  0012               	return		;funcret
  8311   003578                     __end_of_EUSART1_SetRxInterruptHandler:
  8312                           	callstack 0
  8313                           
  8314 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  8315 ;; Defined at:
  8316 ;;		line 277 in file "mcc_generated_files/eusart1.c"
  8317 ;; Parameters:    Size  Location     Type
  8318 ;;  interruptHan    2    5[COMRAM] PTR FTN()void 
  8319 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  8320 ;; Auto vars:     Size  Location     Type
  8321 ;;		None
  8322 ;; Return value:  Size  Location     Type
  8323 ;;                  1    wreg      void 
  8324 ;; Registers used:
  8325 ;;		wreg, status,2, status,0
  8326 ;; Tracked objects:
  8327 ;;		On entry : 0/0
  8328 ;;		On exit  : 0/0
  8329 ;;		Unchanged: 0/0
  8330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8331 ;;      Params:         2       0       0       0       0       0       0       0       0
  8332 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8333 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8334 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8335 ;;Total ram usage:        2 bytes
  8336 ;; Hardware stack levels used: 1
  8337 ;; Hardware stack levels required when called: 4
  8338 ;; This function calls:
  8339 ;;		Nothing
  8340 ;; This function is called by:
  8341 ;;		_EUSART1_Initialize
  8342 ;; This function uses a non-reentrant model
  8343 ;;
  8344                           
  8345                           	psect	text48
  8346   003578                     __ptext48:
  8347                           	callstack 0
  8348   003578                     _EUSART1_SetOverrunErrorHandler:
  8349                           	callstack 24
  8350   003578                     
  8351                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
  8352   003578  C006  F0DC         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  8353   00357C  C007  F0DD         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  8354   003580  0012               	return		;funcret
  8355   003582                     __end_of_EUSART1_SetOverrunErrorHandler:
  8356                           	callstack 0
  8357                           
  8358 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  8359 ;; Defined at:
  8360 ;;		line 273 in file "mcc_generated_files/eusart1.c"
  8361 ;; Parameters:    Size  Location     Type
  8362 ;;  interruptHan    2    5[COMRAM] PTR FTN()void 
  8363 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  8364 ;; Auto vars:     Size  Location     Type
  8365 ;;		None
  8366 ;; Return value:  Size  Location     Type
  8367 ;;                  1    wreg      void 
  8368 ;; Registers used:
  8369 ;;		wreg, status,2, status,0
  8370 ;; Tracked objects:
  8371 ;;		On entry : 0/0
  8372 ;;		On exit  : 0/0
  8373 ;;		Unchanged: 0/0
  8374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8375 ;;      Params:         2       0       0       0       0       0       0       0       0
  8376 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8377 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8378 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8379 ;;Total ram usage:        2 bytes
  8380 ;; Hardware stack levels used: 1
  8381 ;; Hardware stack levels required when called: 4
  8382 ;; This function calls:
  8383 ;;		Nothing
  8384 ;; This function is called by:
  8385 ;;		_EUSART1_Initialize
  8386 ;; This function uses a non-reentrant model
  8387 ;;
  8388                           
  8389                           	psect	text49
  8390   003582                     __ptext49:
  8391                           	callstack 0
  8392   003582                     _EUSART1_SetFramingErrorHandler:
  8393                           	callstack 24
  8394   003582                     
  8395                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
  8396   003582  C006  F0DE         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  8397   003586  C007  F0DF         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  8398   00358A  0012               	return		;funcret
  8399   00358C                     __end_of_EUSART1_SetFramingErrorHandler:
  8400                           	callstack 0
  8401                           
  8402 ;; *************** function _EUSART1_SetErrorHandler *****************
  8403 ;; Defined at:
  8404 ;;		line 281 in file "mcc_generated_files/eusart1.c"
  8405 ;; Parameters:    Size  Location     Type
  8406 ;;  interruptHan    2    5[COMRAM] PTR FTN()void 
  8407 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  8408 ;; Auto vars:     Size  Location     Type
  8409 ;;		None
  8410 ;; Return value:  Size  Location     Type
  8411 ;;                  1    wreg      void 
  8412 ;; Registers used:
  8413 ;;		wreg, status,2, status,0
  8414 ;; Tracked objects:
  8415 ;;		On entry : 0/0
  8416 ;;		On exit  : 0/0
  8417 ;;		Unchanged: 0/0
  8418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8419 ;;      Params:         2       0       0       0       0       0       0       0       0
  8420 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8421 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8422 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8423 ;;Total ram usage:        2 bytes
  8424 ;; Hardware stack levels used: 1
  8425 ;; Hardware stack levels required when called: 4
  8426 ;; This function calls:
  8427 ;;		Nothing
  8428 ;; This function is called by:
  8429 ;;		_EUSART1_Initialize
  8430 ;; This function uses a non-reentrant model
  8431 ;;
  8432                           
  8433                           	psect	text50
  8434   00358C                     __ptext50:
  8435                           	callstack 0
  8436   00358C                     _EUSART1_SetErrorHandler:
  8437                           	callstack 24
  8438   00358C                     
  8439                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
  8440   00358C  C006  F0DA         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  8441   003590  C007  F0DB         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  8442   003594  0012               	return		;funcret
  8443   003596                     __end_of_EUSART1_SetErrorHandler:
  8444                           	callstack 0
  8445                           
  8446 ;; *************** function _ADC_Initialize *****************
  8447 ;; Defined at:
  8448 ;;		line 62 in file "mcc_generated_files/adc.c"
  8449 ;; Parameters:    Size  Location     Type
  8450 ;;		None
  8451 ;; Auto vars:     Size  Location     Type
  8452 ;;		None
  8453 ;; Return value:  Size  Location     Type
  8454 ;;                  1    wreg      void 
  8455 ;; Registers used:
  8456 ;;		wreg, status,2
  8457 ;; Tracked objects:
  8458 ;;		On entry : 0/0
  8459 ;;		On exit  : 0/0
  8460 ;;		Unchanged: 0/0
  8461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8462 ;;      Params:         0       0       0       0       0       0       0       0       0
  8463 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8464 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8465 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8466 ;;Total ram usage:        0 bytes
  8467 ;; Hardware stack levels used: 1
  8468 ;; Hardware stack levels required when called: 4
  8469 ;; This function calls:
  8470 ;;		Nothing
  8471 ;; This function is called by:
  8472 ;;		_SYSTEM_Initialize
  8473 ;;		_main
  8474 ;; This function uses a non-reentrant model
  8475 ;;
  8476                           
  8477                           	psect	text51
  8478   0034E2                     __ptext51:
  8479                           	callstack 0
  8480   0034E2                     _ADC_Initialize:
  8481                           	callstack 25
  8482   0034E2                     
  8483                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  8484   0034E2  0E00               	movlw	0
  8485   0034E4  6EC1               	movwf	193,c	;volatile
  8486                           
  8487                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x0C;
  8488   0034E6  0E0C               	movlw	12
  8489   0034E8  6EC0               	movwf	192,c	;volatile
  8490                           
  8491                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  8492   0034EA  0E00               	movlw	0
  8493   0034EC  6EC3               	movwf	195,c	;volatile
  8494                           
  8495                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  8496   0034EE  0E00               	movlw	0
  8497   0034F0  6EC4               	movwf	196,c	;volatile
  8498                           
  8499                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x01;
  8500   0034F2  0E01               	movlw	1
  8501   0034F4  6EC2               	movwf	194,c	;volatile
  8502   0034F6  0012               	return		;funcret
  8503   0034F8                     __end_of_ADC_Initialize:
  8504                           	callstack 0
  8505                           
  8506 ;; *************** function _INTERRUPT_InterruptManager *****************
  8507 ;; Defined at:
  8508 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  8509 ;; Parameters:    Size  Location     Type
  8510 ;;		None
  8511 ;; Auto vars:     Size  Location     Type
  8512 ;;		None
  8513 ;; Return value:  Size  Location     Type
  8514 ;;                  1    wreg      void 
  8515 ;; Registers used:
  8516 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  8517 ;; Tracked objects:
  8518 ;;		On entry : 0/0
  8519 ;;		On exit  : 0/0
  8520 ;;		Unchanged: 0/0
  8521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8522 ;;      Params:         0       0       0       0       0       0       0       0       0
  8523 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8524 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8525 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8526 ;;Total ram usage:        4 bytes
  8527 ;; Hardware stack levels used: 1
  8528 ;; Hardware stack levels required when called: 3
  8529 ;; This function calls:
  8530 ;;		Absolute function
  8531 ;;		_EUSART1_Receive_ISR
  8532 ;;		_EUSART1_Transmit_ISR
  8533 ;;		_INT0_ISR
  8534 ;;		_INT1_ISR
  8535 ;;		_INT2_ISR
  8536 ;;		_TMR0_ISR
  8537 ;; This function is called by:
  8538 ;;		Interrupt level 2
  8539 ;; This function uses a non-reentrant model
  8540 ;;
  8541                           
  8542                           	psect	intcode
  8543   000008                     __pintcode:
  8544                           	callstack 0
  8545   000008                     _INTERRUPT_InterruptManager:
  8546                           	callstack 18
  8547                           
  8548                           ;incstack = 0
  8549   000008  8259               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8550   00000A  CFFA F002          	movff	pclath,??_INTERRUPT_InterruptManager
  8551   00000E  CFFB F003          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  8552   000012  CFD9 F004          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  8553   000016  CFDA F005          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  8554   00001A                     
  8555                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  8556   00001A  AAF2               	btfss	242,5,c	;volatile
  8557   00001C  EF12  F000         	goto	i2u436_41
  8558   000020  EF14  F000         	goto	i2u436_40
  8559   000024                     i2u436_41:
  8560   000024  EF1F  F000         	goto	i2l108
  8561   000028                     i2u436_40:
  8562   000028  A4F2               	btfss	242,2,c	;volatile
  8563   00002A  EF19  F000         	goto	i2u437_41
  8564   00002E  EF1B  F000         	goto	i2u437_40
  8565   000032                     i2u437_41:
  8566   000032  EF1F  F000         	goto	i2l108
  8567   000036                     i2u437_40:
  8568   000036                     
  8569                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  8570   000036  EC66  F019         	call	_TMR0_ISR	;wreg free
  8571                           
  8572                           ;mcc_generated_files/interrupt_manager.c: 64:     }
  8573   00003A  EF98  F000         	goto	i2l122
  8574   00003E                     i2l108:
  8575   00003E  A8F2               	btfss	242,4,c	;volatile
  8576   000040  EF24  F000         	goto	i2u438_41
  8577   000044  EF26  F000         	goto	i2u438_40
  8578   000048                     i2u438_41:
  8579   000048  EF31  F000         	goto	i2l110
  8580   00004C                     i2u438_40:
  8581   00004C  A2F2               	btfss	242,1,c	;volatile
  8582   00004E  EF2B  F000         	goto	i2u439_41
  8583   000052  EF2D  F000         	goto	i2u439_40
  8584   000056                     i2u439_41:
  8585   000056  EF31  F000         	goto	i2l110
  8586   00005A                     i2u439_40:
  8587   00005A                     
  8588                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         INT0_ISR();
  8589   00005A  EC1E  F01A         	call	_INT0_ISR	;wreg free
  8590                           
  8591                           ;mcc_generated_files/interrupt_manager.c: 68:     }
  8592   00005E  EF98  F000         	goto	i2l122
  8593   000062                     i2l110:
  8594   000062  A6F0               	btfss	240,3,c	;volatile
  8595   000064  EF36  F000         	goto	i2u440_41
  8596   000068  EF38  F000         	goto	i2u440_40
  8597   00006C                     i2u440_41:
  8598   00006C  EF43  F000         	goto	i2l112
  8599   000070                     i2u440_40:
  8600   000070  A0F0               	btfss	240,0,c	;volatile
  8601   000072  EF3D  F000         	goto	i2u441_41
  8602   000076  EF3F  F000         	goto	i2u441_40
  8603   00007A                     i2u441_41:
  8604   00007A  EF43  F000         	goto	i2l112
  8605   00007E                     i2u441_40:
  8606   00007E                     
  8607                           ;mcc_generated_files/interrupt_manager.c: 70:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 71:         INT1_ISR();
  8608   00007E  ECCF  F01A         	call	_INT1_ISR	;wreg free
  8609                           
  8610                           ;mcc_generated_files/interrupt_manager.c: 72:     }
  8611   000082  EF98  F000         	goto	i2l122
  8612   000086                     i2l112:
  8613   000086  A8F0               	btfss	240,4,c	;volatile
  8614   000088  EF48  F000         	goto	i2u442_41
  8615   00008C  EF4A  F000         	goto	i2u442_40
  8616   000090                     i2u442_41:
  8617   000090  EF55  F000         	goto	i2l114
  8618   000094                     i2u442_40:
  8619   000094  A2F0               	btfss	240,1,c	;volatile
  8620   000096  EF4F  F000         	goto	i2u443_41
  8621   00009A  EF51  F000         	goto	i2u443_40
  8622   00009E                     i2u443_41:
  8623   00009E  EF55  F000         	goto	i2l114
  8624   0000A2                     i2u443_40:
  8625   0000A2                     
  8626                           ;mcc_generated_files/interrupt_manager.c: 74:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 75:         INT2_ISR();
  8627   0000A2  ECCB  F01A         	call	_INT2_ISR	;wreg free
  8628                           
  8629                           ;mcc_generated_files/interrupt_manager.c: 76:     }
  8630   0000A6  EF98  F000         	goto	i2l122
  8631   0000AA                     i2l114:
  8632   0000AA  ACF2               	btfss	242,6,c	;volatile
  8633   0000AC  EF5A  F000         	goto	i2u444_41
  8634   0000B0  EF5C  F000         	goto	i2u444_40
  8635   0000B4                     i2u444_41:
  8636   0000B4  EF98  F000         	goto	i2l121
  8637   0000B8                     i2u444_40:
  8638   0000B8                     
  8639                           ;mcc_generated_files/interrupt_manager.c: 78:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 79:         if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  8640   0000B8  A89D               	btfss	157,4,c	;volatile
  8641   0000BA  EF61  F000         	goto	i2u445_41
  8642   0000BE  EF63  F000         	goto	i2u445_40
  8643   0000C2                     i2u445_41:
  8644   0000C2  EF7A  F000         	goto	i2l117
  8645   0000C6                     i2u445_40:
  8646   0000C6  A89E               	btfss	158,4,c	;volatile
  8647   0000C8  EF68  F000         	goto	i2u446_41
  8648   0000CC  EF6A  F000         	goto	i2u446_40
  8649   0000D0                     i2u446_41:
  8650   0000D0  EF7A  F000         	goto	i2l117
  8651   0000D4                     i2u446_40:
  8652   0000D4                     
  8653                           ;mcc_generated_files/interrupt_manager.c: 80:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 81:             EUSART1_TxDefaultInterruptHandler();
  8654   0000D4  D802               	call	i2u447_48
  8655   0000D6  EF78  F000         	goto	i2u447_49
  8656   0000DA                     i2u447_48:
  8657   0000DA  0005               	push	
  8658   0000DC  0100               	movlb	0	; () banked
  8659   0000DE  6EFA               	movwf	pclath,c
  8660   0000E0  51E4               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
  8661   0000E2  6EFD               	movwf	tosl,c
  8662   0000E4  51E5               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
  8663   0000E6  6EFE               	movwf	tosh,c
  8664   0000E8  50F8               	movf	tblptru,w,c
  8665   0000EA  6EFF               	movwf	tosu,c
  8666   0000EC  50FA               	movf	pclath,w,c
  8667   0000EE  0012               	return		;indir
  8668   0000F0                     i2u447_49:
  8669                           
  8670                           ;mcc_generated_files/interrupt_manager.c: 82:         }
  8671   0000F0  EF98  F000         	goto	i2l122
  8672   0000F4                     i2l117:
  8673   0000F4  AA9D               	btfss	157,5,c	;volatile
  8674   0000F6  EF7F  F000         	goto	i2u448_41
  8675   0000FA  EF81  F000         	goto	i2u448_40
  8676   0000FE                     i2u448_41:
  8677   0000FE  EF98  F000         	goto	i2l121
  8678   000102                     i2u448_40:
  8679   000102  AA9E               	btfss	158,5,c	;volatile
  8680   000104  EF86  F000         	goto	i2u449_41
  8681   000108  EF88  F000         	goto	i2u449_40
  8682   00010C                     i2u449_41:
  8683   00010C  EF98  F000         	goto	i2l121
  8684   000110                     i2u449_40:
  8685   000110                     
  8686                           ;mcc_generated_files/interrupt_manager.c: 84:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 85:             EUSART1_RxDefaultInterruptHandler();
  8687   000110  D802               	call	i2u450_48
  8688   000112  EF96  F000         	goto	i2u450_49
  8689   000116                     i2u450_48:
  8690   000116  0005               	push	
  8691   000118  0100               	movlb	0	; () banked
  8692   00011A  6EFA               	movwf	pclath,c
  8693   00011C  51E2               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
  8694   00011E  6EFD               	movwf	tosl,c
  8695   000120  51E3               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
  8696   000122  6EFE               	movwf	tosh,c
  8697   000124  50F8               	movf	tblptru,w,c
  8698   000126  6EFF               	movwf	tosu,c
  8699   000128  50FA               	movf	pclath,w,c
  8700   00012A  0012               	return		;indir
  8701   00012C                     i2u450_49:
  8702                           
  8703                           ;mcc_generated_files/interrupt_manager.c: 86:         }
  8704   00012C  EF98  F000         	goto	i2l122
  8705   000130                     i2l121:
  8706   000130                     i2l122:
  8707   000130  C005  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  8708   000134  C004  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  8709   000138  C003  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  8710   00013C  C002  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  8711   000140  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8712   000142  0011               	retfie		f
  8713   000144                     __end_of_INTERRUPT_InterruptManager:
  8714                           	callstack 0
  8715                           
  8716 ;; *************** function _TMR0_ISR *****************
  8717 ;; Defined at:
  8718 ;;		line 130 in file "mcc_generated_files/tmr0.c"
  8719 ;; Parameters:    Size  Location     Type
  8720 ;;		None
  8721 ;; Auto vars:     Size  Location     Type
  8722 ;;		None
  8723 ;; Return value:  Size  Location     Type
  8724 ;;                  1    wreg      void 
  8725 ;; Registers used:
  8726 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  8727 ;; Tracked objects:
  8728 ;;		On entry : 0/0
  8729 ;;		On exit  : 0/0
  8730 ;;		Unchanged: 0/0
  8731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8732 ;;      Params:         0       0       0       0       0       0       0       0       0
  8733 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8734 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8735 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8736 ;;Total ram usage:        0 bytes
  8737 ;; Hardware stack levels used: 1
  8738 ;; Hardware stack levels required when called: 2
  8739 ;; This function calls:
  8740 ;;		_TMR0_CallBack
  8741 ;; This function is called by:
  8742 ;;		_INTERRUPT_InterruptManager
  8743 ;; This function uses a non-reentrant model
  8744 ;;
  8745                           
  8746                           	psect	text53
  8747   0032CC                     __ptext53:
  8748                           	callstack 0
  8749   0032CC                     _TMR0_ISR:
  8750                           	callstack 18
  8751   0032CC                     
  8752                           ;mcc_generated_files/tmr0.c: 134:     INTCONbits.TMR0IF = 0;
  8753   0032CC  94F2               	bcf	242,2,c	;volatile
  8754                           
  8755                           ;mcc_generated_files/tmr0.c: 136:     TMR0L = timer0ReloadVal;
  8756   0032CE  C056  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  8757   0032D2                     
  8758                           ;mcc_generated_files/tmr0.c: 137:     count ++;
  8759   0032D2  0100               	movlb	0	; () banked
  8760   0032D4  4BF4               	infsnz	_count& (0+255),f,b
  8761   0032D6  2BF5               	incf	(_count+1)& (0+255),f,b
  8762   0032D8                     
  8763                           ; BSR set to: 0
  8764                           ;mcc_generated_files/tmr0.c: 138:     if(count==2000){
  8765   0032D8  0ED0               	movlw	208
  8766   0032DA  19F4               	xorwf	_count& (0+255),w,b
  8767   0032DC  E107               	bnz	i2u421_41
  8768   0032DE  0E07               	movlw	7
  8769   0032E0  19F5               	xorwf	(_count+1)& (0+255),w,b
  8770   0032E2  A4D8               	btfss	status,2,c
  8771   0032E4  EF76  F019         	goto	i2u421_41
  8772   0032E8  EF78  F019         	goto	i2u421_40
  8773   0032EC                     i2u421_41:
  8774   0032EC  EF7C  F019         	goto	i2l4241
  8775   0032F0                     i2u421_40:
  8776   0032F0                     
  8777                           ; BSR set to: 0
  8778                           ;mcc_generated_files/tmr0.c: 139:         count = 0 ;
  8779   0032F0  0E00               	movlw	0
  8780   0032F2  6FF5               	movwf	(_count+1)& (0+255),b
  8781   0032F4  0E00               	movlw	0
  8782   0032F6  6FF4               	movwf	_count& (0+255),b
  8783   0032F8                     i2l4241:
  8784                           
  8785                           ; BSR set to: 0
  8786                           ;mcc_generated_files/tmr0.c: 143:     TMR0_CallBack();
  8787   0032F8  EC7F  F019         	call	_TMR0_CallBack	;wreg free
  8788   0032FC  0012               	return		;funcret
  8789   0032FE                     __end_of_TMR0_ISR:
  8790                           	callstack 0
  8791                           
  8792 ;; *************** function _TMR0_CallBack *****************
  8793 ;; Defined at:
  8794 ;;		line 148 in file "mcc_generated_files/tmr0.c"
  8795 ;; Parameters:    Size  Location     Type
  8796 ;;		None
  8797 ;; Auto vars:     Size  Location     Type
  8798 ;;		None
  8799 ;; Return value:  Size  Location     Type
  8800 ;;                  1    wreg      void 
  8801 ;; Registers used:
  8802 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  8803 ;; Tracked objects:
  8804 ;;		On entry : 0/0
  8805 ;;		On exit  : 0/0
  8806 ;;		Unchanged: 0/0
  8807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8808 ;;      Params:         0       0       0       0       0       0       0       0       0
  8809 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8810 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8811 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8812 ;;Total ram usage:        0 bytes
  8813 ;; Hardware stack levels used: 1
  8814 ;; Hardware stack levels required when called: 1
  8815 ;; This function calls:
  8816 ;;		Absolute function
  8817 ;;		_TMR0_DefaultInterruptHandler
  8818 ;; This function is called by:
  8819 ;;		_TMR0_ISR
  8820 ;; This function uses a non-reentrant model
  8821 ;;
  8822                           
  8823                           	psect	text54
  8824   0032FE                     __ptext54:
  8825                           	callstack 0
  8826   0032FE                     _TMR0_CallBack:
  8827                           	callstack 18
  8828   0032FE                     
  8829                           ;mcc_generated_files/tmr0.c: 151:     if(TMR0_InterruptHandler)
  8830   0032FE  0100               	movlb	0	; () banked
  8831   003300  51E0               	movf	_TMR0_InterruptHandler& (0+255),w,b
  8832   003302  11E1               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  8833   003304  B4D8               	btfsc	status,2,c
  8834   003306  EF87  F019         	goto	i2u400_41
  8835   00330A  EF89  F019         	goto	i2u400_40
  8836   00330E                     i2u400_41:
  8837   00330E  EF96  F019         	goto	i2l170
  8838   003312                     i2u400_40:
  8839   003312                     
  8840                           ; BSR set to: 0
  8841                           ;mcc_generated_files/tmr0.c: 152:     {;mcc_generated_files/tmr0.c: 153:         TMR0_In
      +                          terruptHandler();
  8842   003312  D802               	call	i2u401_48
  8843   003314  EF96  F019         	goto	i2u401_49
  8844   003318                     i2u401_48:
  8845   003318  0005               	push	
  8846   00331A  6EFA               	movwf	pclath,c
  8847   00331C  51E0               	movf	_TMR0_InterruptHandler& (0+255),w,b
  8848   00331E  6EFD               	movwf	tosl,c
  8849   003320  51E1               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  8850   003322  6EFE               	movwf	tosh,c
  8851   003324  50F8               	movf	tblptru,w,c
  8852   003326  6EFF               	movwf	tosu,c
  8853   003328  50FA               	movf	pclath,w,c
  8854   00332A  0012               	return		;indir
  8855   00332C                     i2u401_49:
  8856   00332C                     i2l170:
  8857   00332C  0012               	return		;funcret
  8858   00332E                     __end_of_TMR0_CallBack:
  8859                           	callstack 0
  8860                           
  8861 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  8862 ;; Defined at:
  8863 ;;		line 161 in file "mcc_generated_files/tmr0.c"
  8864 ;; Parameters:    Size  Location     Type
  8865 ;;		None
  8866 ;; Auto vars:     Size  Location     Type
  8867 ;;		None
  8868 ;; Return value:  Size  Location     Type
  8869 ;;                  1    wreg      void 
  8870 ;; Registers used:
  8871 ;;		None
  8872 ;; Tracked objects:
  8873 ;;		On entry : 0/0
  8874 ;;		On exit  : 0/0
  8875 ;;		Unchanged: 0/0
  8876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8877 ;;      Params:         0       0       0       0       0       0       0       0       0
  8878 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8879 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8880 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8881 ;;Total ram usage:        0 bytes
  8882 ;; Hardware stack levels used: 1
  8883 ;; This function calls:
  8884 ;;		Nothing
  8885 ;; This function is called by:
  8886 ;;		_TMR0_Initialize
  8887 ;;		_TMR0_CallBack
  8888 ;; This function uses a non-reentrant model
  8889 ;;
  8890                           
  8891                           	psect	text55
  8892   0035BA                     __ptext55:
  8893                           	callstack 0
  8894   0035BA                     _TMR0_DefaultInterruptHandler:
  8895                           	callstack 18
  8896   0035BA  0012               	return		;funcret
  8897   0035BC                     __end_of_TMR0_DefaultInterruptHandler:
  8898                           	callstack 0
  8899                           
  8900 ;; *************** function _INT2_ISR *****************
  8901 ;; Defined at:
  8902 ;;		line 88 in file "mcc_generated_files/ext_int.c"
  8903 ;; Parameters:    Size  Location     Type
  8904 ;;		None
  8905 ;; Auto vars:     Size  Location     Type
  8906 ;;		None
  8907 ;; Return value:  Size  Location     Type
  8908 ;;                  1    wreg      void 
  8909 ;; Registers used:
  8910 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  8911 ;; Tracked objects:
  8912 ;;		On entry : 0/0
  8913 ;;		On exit  : 0/0
  8914 ;;		Unchanged: 0/0
  8915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8916 ;;      Params:         0       0       0       0       0       0       0       0       0
  8917 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8918 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8919 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8920 ;;Total ram usage:        0 bytes
  8921 ;; Hardware stack levels used: 1
  8922 ;; Hardware stack levels required when called: 2
  8923 ;; This function calls:
  8924 ;;		_INT2_CallBack
  8925 ;; This function is called by:
  8926 ;;		_INTERRUPT_InterruptManager
  8927 ;; This function uses a non-reentrant model
  8928 ;;
  8929                           
  8930                           	psect	text56
  8931   003596                     __ptext56:
  8932                           	callstack 0
  8933   003596                     _INT2_ISR:
  8934                           	callstack 18
  8935   003596                     
  8936                           ;mcc_generated_files/ext_int.c: 90:     (INTCON3bits.INT2IF = 0);
  8937   003596  92F0               	bcf	240,1,c	;volatile
  8938   003598                     
  8939                           ;mcc_generated_files/ext_int.c: 93:     INT2_CallBack();
  8940   003598  EC97  F019         	call	_INT2_CallBack	;wreg free
  8941   00359C  0012               	return		;funcret
  8942   00359E                     __end_of_INT2_ISR:
  8943                           	callstack 0
  8944                           
  8945 ;; *************** function _INT2_CallBack *****************
  8946 ;; Defined at:
  8947 ;;		line 97 in file "mcc_generated_files/ext_int.c"
  8948 ;; Parameters:    Size  Location     Type
  8949 ;;		None
  8950 ;; Auto vars:     Size  Location     Type
  8951 ;;		None
  8952 ;; Return value:  Size  Location     Type
  8953 ;;                  1    wreg      void 
  8954 ;; Registers used:
  8955 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  8956 ;; Tracked objects:
  8957 ;;		On entry : 0/0
  8958 ;;		On exit  : 0/0
  8959 ;;		Unchanged: 0/0
  8960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8961 ;;      Params:         0       0       0       0       0       0       0       0       0
  8962 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8963 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8964 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8965 ;;Total ram usage:        0 bytes
  8966 ;; Hardware stack levels used: 1
  8967 ;; Hardware stack levels required when called: 1
  8968 ;; This function calls:
  8969 ;;		Absolute function
  8970 ;;		_INT2_DefaultInterruptHandler
  8971 ;; This function is called by:
  8972 ;;		_INT2_ISR
  8973 ;; This function uses a non-reentrant model
  8974 ;;
  8975                           
  8976                           	psect	text57
  8977   00332E                     __ptext57:
  8978                           	callstack 0
  8979   00332E                     _INT2_CallBack:
  8980                           	callstack 18
  8981   00332E                     
  8982                           ;mcc_generated_files/ext_int.c: 100:     if(INT2_InterruptHandler)
  8983   00332E  0100               	movlb	0	; () banked
  8984   003330  51D4               	movf	_INT2_InterruptHandler& (0+255),w,b
  8985   003332  11D5               	iorwf	(_INT2_InterruptHandler+1)& (0+255),w,b
  8986   003334  B4D8               	btfsc	status,2,c
  8987   003336  EF9F  F019         	goto	i2u408_41
  8988   00333A  EFA1  F019         	goto	i2u408_40
  8989   00333E                     i2u408_41:
  8990   00333E  EFAE  F019         	goto	i2l473
  8991   003342                     i2u408_40:
  8992   003342                     
  8993                           ; BSR set to: 0
  8994                           ;mcc_generated_files/ext_int.c: 101:     {;mcc_generated_files/ext_int.c: 102:         I
      +                          NT2_InterruptHandler();
  8995   003342  D802               	call	i2u409_48
  8996   003344  EFAE  F019         	goto	i2u409_49
  8997   003348                     i2u409_48:
  8998   003348  0005               	push	
  8999   00334A  6EFA               	movwf	pclath,c
  9000   00334C  51D4               	movf	_INT2_InterruptHandler& (0+255),w,b
  9001   00334E  6EFD               	movwf	tosl,c
  9002   003350  51D5               	movf	(_INT2_InterruptHandler+1)& (0+255),w,b
  9003   003352  6EFE               	movwf	tosh,c
  9004   003354  50F8               	movf	tblptru,w,c
  9005   003356  6EFF               	movwf	tosu,c
  9006   003358  50FA               	movf	pclath,w,c
  9007   00335A  0012               	return		;indir
  9008   00335C                     i2u409_49:
  9009   00335C                     i2l473:
  9010   00335C  0012               	return		;funcret
  9011   00335E                     __end_of_INT2_CallBack:
  9012                           	callstack 0
  9013                           
  9014 ;; *************** function _INT2_DefaultInterruptHandler *****************
  9015 ;; Defined at:
  9016 ;;		line 110 in file "mcc_generated_files/ext_int.c"
  9017 ;; Parameters:    Size  Location     Type
  9018 ;;		None
  9019 ;; Auto vars:     Size  Location     Type
  9020 ;;		None
  9021 ;; Return value:  Size  Location     Type
  9022 ;;                  1    wreg      void 
  9023 ;; Registers used:
  9024 ;;		None
  9025 ;; Tracked objects:
  9026 ;;		On entry : 0/0
  9027 ;;		On exit  : 0/0
  9028 ;;		Unchanged: 0/0
  9029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9030 ;;      Params:         0       0       0       0       0       0       0       0       0
  9031 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9032 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9033 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9034 ;;Total ram usage:        0 bytes
  9035 ;; Hardware stack levels used: 1
  9036 ;; This function calls:
  9037 ;;		Nothing
  9038 ;; This function is called by:
  9039 ;;		_EXT_INT_Initialize
  9040 ;;		_INT2_CallBack
  9041 ;; This function uses a non-reentrant model
  9042 ;;
  9043                           
  9044                           	psect	text58
  9045   0035BC                     __ptext58:
  9046                           	callstack 0
  9047   0035BC                     _INT2_DefaultInterruptHandler:
  9048                           	callstack 18
  9049   0035BC  0012               	return		;funcret
  9050   0035BE                     __end_of_INT2_DefaultInterruptHandler:
  9051                           	callstack 0
  9052                           
  9053 ;; *************** function _INT1_ISR *****************
  9054 ;; Defined at:
  9055 ;;		line 62 in file "mcc_generated_files/ext_int.c"
  9056 ;; Parameters:    Size  Location     Type
  9057 ;;		None
  9058 ;; Auto vars:     Size  Location     Type
  9059 ;;		None
  9060 ;; Return value:  Size  Location     Type
  9061 ;;                  1    wreg      void 
  9062 ;; Registers used:
  9063 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  9064 ;; Tracked objects:
  9065 ;;		On entry : 0/0
  9066 ;;		On exit  : 0/0
  9067 ;;		Unchanged: 0/0
  9068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9069 ;;      Params:         0       0       0       0       0       0       0       0       0
  9070 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9071 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9072 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9073 ;;Total ram usage:        0 bytes
  9074 ;; Hardware stack levels used: 1
  9075 ;; Hardware stack levels required when called: 2
  9076 ;; This function calls:
  9077 ;;		_INT1_CallBack
  9078 ;; This function is called by:
  9079 ;;		_INTERRUPT_InterruptManager
  9080 ;; This function uses a non-reentrant model
  9081 ;;
  9082                           
  9083                           	psect	text59
  9084   00359E                     __ptext59:
  9085                           	callstack 0
  9086   00359E                     _INT1_ISR:
  9087                           	callstack 18
  9088   00359E                     
  9089                           ;mcc_generated_files/ext_int.c: 64:     (INTCON3bits.INT1IF = 0);
  9090   00359E  90F0               	bcf	240,0,c	;volatile
  9091   0035A0                     
  9092                           ;mcc_generated_files/ext_int.c: 67:     INT1_CallBack();
  9093   0035A0  ECAF  F019         	call	_INT1_CallBack	;wreg free
  9094   0035A4  0012               	return		;funcret
  9095   0035A6                     __end_of_INT1_ISR:
  9096                           	callstack 0
  9097                           
  9098 ;; *************** function _INT1_CallBack *****************
  9099 ;; Defined at:
  9100 ;;		line 71 in file "mcc_generated_files/ext_int.c"
  9101 ;; Parameters:    Size  Location     Type
  9102 ;;		None
  9103 ;; Auto vars:     Size  Location     Type
  9104 ;;		None
  9105 ;; Return value:  Size  Location     Type
  9106 ;;                  1    wreg      void 
  9107 ;; Registers used:
  9108 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  9109 ;; Tracked objects:
  9110 ;;		On entry : 0/0
  9111 ;;		On exit  : 0/0
  9112 ;;		Unchanged: 0/0
  9113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9114 ;;      Params:         0       0       0       0       0       0       0       0       0
  9115 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9116 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9117 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9118 ;;Total ram usage:        0 bytes
  9119 ;; Hardware stack levels used: 1
  9120 ;; Hardware stack levels required when called: 1
  9121 ;; This function calls:
  9122 ;;		Absolute function
  9123 ;;		_INT1_DefaultInterruptHandler
  9124 ;; This function is called by:
  9125 ;;		_INT1_ISR
  9126 ;; This function uses a non-reentrant model
  9127 ;;
  9128                           
  9129                           	psect	text60
  9130   00335E                     __ptext60:
  9131                           	callstack 0
  9132   00335E                     _INT1_CallBack:
  9133                           	callstack 18
  9134   00335E                     
  9135                           ;mcc_generated_files/ext_int.c: 74:     if(INT1_InterruptHandler)
  9136   00335E  0100               	movlb	0	; () banked
  9137   003360  51D6               	movf	_INT1_InterruptHandler& (0+255),w,b
  9138   003362  11D7               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
  9139   003364  B4D8               	btfsc	status,2,c
  9140   003366  EFB7  F019         	goto	i2u406_41
  9141   00336A  EFB9  F019         	goto	i2u406_40
  9142   00336E                     i2u406_41:
  9143   00336E  EFC6  F019         	goto	i2l460
  9144   003372                     i2u406_40:
  9145   003372                     
  9146                           ; BSR set to: 0
  9147                           ;mcc_generated_files/ext_int.c: 75:     {;mcc_generated_files/ext_int.c: 76:         INT
      +                          1_InterruptHandler();
  9148   003372  D802               	call	i2u407_48
  9149   003374  EFC6  F019         	goto	i2u407_49
  9150   003378                     i2u407_48:
  9151   003378  0005               	push	
  9152   00337A  6EFA               	movwf	pclath,c
  9153   00337C  51D6               	movf	_INT1_InterruptHandler& (0+255),w,b
  9154   00337E  6EFD               	movwf	tosl,c
  9155   003380  51D7               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
  9156   003382  6EFE               	movwf	tosh,c
  9157   003384  50F8               	movf	tblptru,w,c
  9158   003386  6EFF               	movwf	tosu,c
  9159   003388  50FA               	movf	pclath,w,c
  9160   00338A  0012               	return		;indir
  9161   00338C                     i2u407_49:
  9162   00338C                     i2l460:
  9163   00338C  0012               	return		;funcret
  9164   00338E                     __end_of_INT1_CallBack:
  9165                           	callstack 0
  9166                           
  9167 ;; *************** function _INT1_DefaultInterruptHandler *****************
  9168 ;; Defined at:
  9169 ;;		line 84 in file "mcc_generated_files/ext_int.c"
  9170 ;; Parameters:    Size  Location     Type
  9171 ;;		None
  9172 ;; Auto vars:     Size  Location     Type
  9173 ;;		None
  9174 ;; Return value:  Size  Location     Type
  9175 ;;                  1    wreg      void 
  9176 ;; Registers used:
  9177 ;;		None
  9178 ;; Tracked objects:
  9179 ;;		On entry : 0/0
  9180 ;;		On exit  : 0/0
  9181 ;;		Unchanged: 0/0
  9182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9183 ;;      Params:         0       0       0       0       0       0       0       0       0
  9184 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9185 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9186 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9187 ;;Total ram usage:        0 bytes
  9188 ;; Hardware stack levels used: 1
  9189 ;; This function calls:
  9190 ;;		Nothing
  9191 ;; This function is called by:
  9192 ;;		_EXT_INT_Initialize
  9193 ;;		_INT1_CallBack
  9194 ;; This function uses a non-reentrant model
  9195 ;;
  9196                           
  9197                           	psect	text61
  9198   0035BE                     __ptext61:
  9199                           	callstack 0
  9200   0035BE                     _INT1_DefaultInterruptHandler:
  9201                           	callstack 18
  9202   0035BE  0012               	return		;funcret
  9203   0035C0                     __end_of_INT1_DefaultInterruptHandler:
  9204                           	callstack 0
  9205                           
  9206 ;; *************** function _INT0_ISR *****************
  9207 ;; Defined at:
  9208 ;;		line 35 in file "mcc_generated_files/ext_int.c"
  9209 ;; Parameters:    Size  Location     Type
  9210 ;;		None
  9211 ;; Auto vars:     Size  Location     Type
  9212 ;;		None
  9213 ;; Return value:  Size  Location     Type
  9214 ;;                  1    wreg      void 
  9215 ;; Registers used:
  9216 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  9217 ;; Tracked objects:
  9218 ;;		On entry : 0/0
  9219 ;;		On exit  : 0/0
  9220 ;;		Unchanged: 0/0
  9221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9222 ;;      Params:         0       0       0       0       0       0       0       0       0
  9223 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9224 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9225 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9226 ;;Total ram usage:        1 bytes
  9227 ;; Hardware stack levels used: 1
  9228 ;; Hardware stack levels required when called: 2
  9229 ;; This function calls:
  9230 ;;		_INT0_CallBack
  9231 ;; This function is called by:
  9232 ;;		_INTERRUPT_InterruptManager
  9233 ;; This function uses a non-reentrant model
  9234 ;;
  9235                           
  9236                           	psect	text62
  9237   00343C                     __ptext62:
  9238                           	callstack 0
  9239   00343C                     _INT0_ISR:
  9240                           	callstack 18
  9241   00343C                     
  9242                           ;mcc_generated_files/ext_int.c: 37:     (INTCONbits.INT0IF = 0);
  9243   00343C  92F2               	bcf	242,1,c	;volatile
  9244   00343E                     
  9245                           ;mcc_generated_files/ext_int.c: 38:     PORTDbits.RD0 = ~PORTDbits.RD0;
  9246   00343E  B083               	btfsc	131,0,c	;volatile
  9247   003440  EF24  F01A         	goto	i2u422_41
  9248   003444  EF27  F01A         	goto	i2u422_40
  9249   003448                     i2u422_41:
  9250   003448  0E01               	movlw	1
  9251   00344A  EF28  F01A         	goto	i2u422_46
  9252   00344E                     i2u422_40:
  9253   00344E  0E00               	movlw	0
  9254   003450                     i2u422_46:
  9255   003450  0AFF               	xorlw	255
  9256   003452  6E01               	movwf	??_INT0_ISR^0,c
  9257   003454  5083               	movf	131,w,c	;volatile
  9258   003456  1801               	xorwf	??_INT0_ISR^0,w,c
  9259   003458  0BFE               	andlw	-2
  9260   00345A  1801               	xorwf	??_INT0_ISR^0,w,c
  9261   00345C  6E83               	movwf	131,c	;volatile
  9262   00345E                     
  9263                           ;mcc_generated_files/ext_int.c: 41:     INT0_CallBack();
  9264   00345E  ECC7  F019         	call	_INT0_CallBack	;wreg free
  9265   003462  0012               	return		;funcret
  9266   003464                     __end_of_INT0_ISR:
  9267                           	callstack 0
  9268                           
  9269 ;; *************** function _INT0_CallBack *****************
  9270 ;; Defined at:
  9271 ;;		line 45 in file "mcc_generated_files/ext_int.c"
  9272 ;; Parameters:    Size  Location     Type
  9273 ;;		None
  9274 ;; Auto vars:     Size  Location     Type
  9275 ;;		None
  9276 ;; Return value:  Size  Location     Type
  9277 ;;                  1    wreg      void 
  9278 ;; Registers used:
  9279 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  9280 ;; Tracked objects:
  9281 ;;		On entry : 0/0
  9282 ;;		On exit  : 0/0
  9283 ;;		Unchanged: 0/0
  9284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9285 ;;      Params:         0       0       0       0       0       0       0       0       0
  9286 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9287 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9288 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9289 ;;Total ram usage:        0 bytes
  9290 ;; Hardware stack levels used: 1
  9291 ;; Hardware stack levels required when called: 1
  9292 ;; This function calls:
  9293 ;;		Absolute function
  9294 ;;		_INT0_DefaultInterruptHandler
  9295 ;; This function is called by:
  9296 ;;		_INT0_ISR
  9297 ;; This function uses a non-reentrant model
  9298 ;;
  9299                           
  9300                           	psect	text63
  9301   00338E                     __ptext63:
  9302                           	callstack 0
  9303   00338E                     _INT0_CallBack:
  9304                           	callstack 18
  9305   00338E                     
  9306                           ;mcc_generated_files/ext_int.c: 48:     if(INT0_InterruptHandler)
  9307   00338E  0100               	movlb	0	; () banked
  9308   003390  51D8               	movf	_INT0_InterruptHandler& (0+255),w,b
  9309   003392  11D9               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
  9310   003394  B4D8               	btfsc	status,2,c
  9311   003396  EFCF  F019         	goto	i2u404_41
  9312   00339A  EFD1  F019         	goto	i2u404_40
  9313   00339E                     i2u404_41:
  9314   00339E  EFDE  F019         	goto	i2l447
  9315   0033A2                     i2u404_40:
  9316   0033A2                     
  9317                           ; BSR set to: 0
  9318                           ;mcc_generated_files/ext_int.c: 49:     {;mcc_generated_files/ext_int.c: 50:         INT
      +                          0_InterruptHandler();
  9319   0033A2  D802               	call	i2u405_48
  9320   0033A4  EFDE  F019         	goto	i2u405_49
  9321   0033A8                     i2u405_48:
  9322   0033A8  0005               	push	
  9323   0033AA  6EFA               	movwf	pclath,c
  9324   0033AC  51D8               	movf	_INT0_InterruptHandler& (0+255),w,b
  9325   0033AE  6EFD               	movwf	tosl,c
  9326   0033B0  51D9               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
  9327   0033B2  6EFE               	movwf	tosh,c
  9328   0033B4  50F8               	movf	tblptru,w,c
  9329   0033B6  6EFF               	movwf	tosu,c
  9330   0033B8  50FA               	movf	pclath,w,c
  9331   0033BA  0012               	return		;indir
  9332   0033BC                     i2u405_49:
  9333   0033BC                     i2l447:
  9334   0033BC  0012               	return		;funcret
  9335   0033BE                     __end_of_INT0_CallBack:
  9336                           	callstack 0
  9337                           
  9338 ;; *************** function _INT0_DefaultInterruptHandler *****************
  9339 ;; Defined at:
  9340 ;;		line 58 in file "mcc_generated_files/ext_int.c"
  9341 ;; Parameters:    Size  Location     Type
  9342 ;;		None
  9343 ;; Auto vars:     Size  Location     Type
  9344 ;;		None
  9345 ;; Return value:  Size  Location     Type
  9346 ;;                  1    wreg      void 
  9347 ;; Registers used:
  9348 ;;		None
  9349 ;; Tracked objects:
  9350 ;;		On entry : 0/0
  9351 ;;		On exit  : 0/0
  9352 ;;		Unchanged: 0/0
  9353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9354 ;;      Params:         0       0       0       0       0       0       0       0       0
  9355 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9356 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9357 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9358 ;;Total ram usage:        0 bytes
  9359 ;; Hardware stack levels used: 1
  9360 ;; This function calls:
  9361 ;;		Nothing
  9362 ;; This function is called by:
  9363 ;;		_EXT_INT_Initialize
  9364 ;;		_INT0_CallBack
  9365 ;; This function uses a non-reentrant model
  9366 ;;
  9367                           
  9368                           	psect	text64
  9369   0035C0                     __ptext64:
  9370                           	callstack 0
  9371   0035C0                     _INT0_DefaultInterruptHandler:
  9372                           	callstack 18
  9373   0035C0  0012               	return		;funcret
  9374   0035C2                     __end_of_INT0_DefaultInterruptHandler:
  9375                           	callstack 0
  9376                           
  9377 ;; *************** function _EUSART1_Transmit_ISR *****************
  9378 ;; Defined at:
  9379 ;;		line 206 in file "mcc_generated_files/eusart1.c"
  9380 ;; Parameters:    Size  Location     Type
  9381 ;;		None
  9382 ;; Auto vars:     Size  Location     Type
  9383 ;;		None
  9384 ;; Return value:  Size  Location     Type
  9385 ;;                  1    wreg      void 
  9386 ;; Registers used:
  9387 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9388 ;; Tracked objects:
  9389 ;;		On entry : 0/0
  9390 ;;		On exit  : 0/0
  9391 ;;		Unchanged: 0/0
  9392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9393 ;;      Params:         0       0       0       0       0       0       0       0       0
  9394 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9395 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9396 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9397 ;;Total ram usage:        0 bytes
  9398 ;; Hardware stack levels used: 1
  9399 ;; This function calls:
  9400 ;;		Nothing
  9401 ;; This function is called by:
  9402 ;;		_EUSART1_Initialize
  9403 ;;		_INTERRUPT_InterruptManager
  9404 ;; This function uses a non-reentrant model
  9405 ;;
  9406                           
  9407                           	psect	text65
  9408   0031EA                     __ptext65:
  9409                           	callstack 0
  9410   0031EA                     _EUSART1_Transmit_ISR:
  9411                           	callstack 20
  9412   0031EA                     
  9413                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  9414   0031EA  0E10               	movlw	16
  9415   0031EC  6058               	cpfslt	_eusart1TxBufferRemaining^0,c	;volatile
  9416   0031EE  EFFB  F018         	goto	i2u425_41
  9417   0031F2  EFFD  F018         	goto	i2u425_40
  9418   0031F6                     i2u425_41:
  9419   0031F6  EF13  F019         	goto	i2l288
  9420   0031FA                     i2u425_40:
  9421   0031FA                     
  9422                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          XREG1 = eusart1TxBuffer[eusart1TxTail++];
  9423   0031FA  0E20               	movlw	low _eusart1TxBuffer
  9424   0031FC  2454               	addwf	_eusart1TxTail^0,w,c	;volatile
  9425   0031FE  6ED9               	movwf	fsr2l,c
  9426   003200  6ADA               	clrf	fsr2h,c
  9427   003202  0E01               	movlw	high _eusart1TxBuffer
  9428   003204  22DA               	addwfc	fsr2h,f,c
  9429   003206  50DF               	movf	indf2,w,c
  9430   003208  6EAD               	movwf	173,c	;volatile
  9431   00320A  2A54               	incf	_eusart1TxTail^0,f,c	;volatile
  9432   00320C                     
  9433                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  9434   00320C  0E0F               	movlw	15
  9435   00320E  6454               	cpfsgt	_eusart1TxTail^0,c	;volatile
  9436   003210  EF0C  F019         	goto	i2u426_41
  9437   003214  EF0E  F019         	goto	i2u426_40
  9438   003218                     i2u426_41:
  9439   003218  EF10  F019         	goto	i2l4289
  9440   00321C                     i2u426_40:
  9441   00321C                     
  9442                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
  9443   00321C  0E00               	movlw	0
  9444   00321E  6E54               	movwf	_eusart1TxTail^0,c	;volatile
  9445   003220                     i2l4289:
  9446                           
  9447                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
  9448   003220  2A58               	incf	_eusart1TxBufferRemaining^0,f,c	;volatile
  9449                           
  9450                           ;mcc_generated_files/eusart1.c: 218:     }
  9451   003222  EF14  F019         	goto	i2l291
  9452   003226                     i2l288:
  9453                           
  9454                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE1bits.TX1IE = 0;
  9455   003226  989D               	bcf	157,4,c	;volatile
  9456   003228                     i2l291:
  9457   003228  0012               	return		;funcret
  9458   00322A                     __end_of_EUSART1_Transmit_ISR:
  9459                           	callstack 0
  9460                           
  9461 ;; *************** function _EUSART1_Receive_ISR *****************
  9462 ;; Defined at:
  9463 ;;		line 225 in file "mcc_generated_files/eusart1.c"
  9464 ;; Parameters:    Size  Location     Type
  9465 ;;		None
  9466 ;; Auto vars:     Size  Location     Type
  9467 ;;		None
  9468 ;; Return value:  Size  Location     Type
  9469 ;;                  1    wreg      void 
  9470 ;; Registers used:
  9471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  9472 ;; Tracked objects:
  9473 ;;		On entry : 0/0
  9474 ;;		On exit  : 0/0
  9475 ;;		Unchanged: 0/0
  9476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9477 ;;      Params:         0       0       0       0       0       0       0       0       0
  9478 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9479 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9480 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9481 ;;Total ram usage:        0 bytes
  9482 ;; Hardware stack levels used: 1
  9483 ;; Hardware stack levels required when called: 2
  9484 ;; This function calls:
  9485 ;;		Absolute function
  9486 ;;		_EUSART1_DefaultErrorHandler
  9487 ;;		_EUSART1_DefaultFramingErrorHandler
  9488 ;;		_EUSART1_DefaultOverrunErrorHandler
  9489 ;;		_EUSART1_RxDataHandler
  9490 ;; This function is called by:
  9491 ;;		_EUSART1_Initialize
  9492 ;;		_INTERRUPT_InterruptManager
  9493 ;; This function uses a non-reentrant model
  9494 ;;
  9495                           
  9496                           	psect	text66
  9497   002AEA                     __ptext66:
  9498                           	callstack 0
  9499   002AEA                     _EUSART1_Receive_ISR:
  9500                           	callstack 18
  9501   002AEA                     
  9502                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  9503   002AEA  0E00               	movlw	low _eusart1RxStatusBuffer
  9504   002AEC  2453               	addwf	_eusart1RxHead^0,w,c	;volatile
  9505   002AEE  6ED9               	movwf	fsr2l,c
  9506   002AF0  6ADA               	clrf	fsr2h,c
  9507   002AF2  0E01               	movlw	high _eusart1RxStatusBuffer
  9508   002AF4  22DA               	addwfc	fsr2h,f,c
  9509   002AF6  0E00               	movlw	0
  9510   002AF8  6EDF               	movwf	indf2,c
  9511   002AFA                     
  9512                           ;mcc_generated_files/eusart1.c: 230:     if(RCSTA1bits.FERR){
  9513   002AFA  A4AB               	btfss	171,2,c	;volatile
  9514   002AFC  EF82  F015         	goto	i2u427_41
  9515   002B00  EF84  F015         	goto	i2u427_40
  9516   002B04                     i2u427_41:
  9517   002B04  EF9A  F015         	goto	i2l4299
  9518   002B08                     i2u427_40:
  9519   002B08                     
  9520                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  9521   002B08  0E00               	movlw	low _eusart1RxStatusBuffer
  9522   002B0A  2453               	addwf	_eusart1RxHead^0,w,c	;volatile
  9523   002B0C  6ED9               	movwf	fsr2l,c
  9524   002B0E  6ADA               	clrf	fsr2h,c
  9525   002B10  0E01               	movlw	high _eusart1RxStatusBuffer
  9526   002B12  22DA               	addwfc	fsr2h,f,c
  9527   002B14  0101               	movlb	1	; () banked
  9528   002B16  82DF               	bsf	indf2,1,c
  9529   002B18                     
  9530                           ; BSR set to: 1
  9531                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
  9532   002B18  D802               	call	i2u428_48
  9533   002B1A  EF9A  F015         	goto	i2u428_49
  9534   002B1E                     i2u428_48:
  9535   002B1E  0005               	push	
  9536   002B20  0100               	movlb	0	; () banked
  9537   002B22  6EFA               	movwf	pclath,c
  9538   002B24  51DE               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
  9539   002B26  6EFD               	movwf	tosl,c
  9540   002B28  51DF               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
  9541   002B2A  6EFE               	movwf	tosh,c
  9542   002B2C  50F8               	movf	tblptru,w,c
  9543   002B2E  6EFF               	movwf	tosu,c
  9544   002B30  50FA               	movf	pclath,w,c
  9545   002B32  0012               	return		;indir
  9546   002B34                     i2u428_49:
  9547   002B34                     i2l4299:
  9548                           
  9549                           ;mcc_generated_files/eusart1.c: 235:     if(RCSTA1bits.OERR){
  9550   002B34  A2AB               	btfss	171,1,c	;volatile
  9551   002B36  EF9F  F015         	goto	i2u429_41
  9552   002B3A  EFA1  F015         	goto	i2u429_40
  9553   002B3E                     i2u429_41:
  9554   002B3E  EFB7  F015         	goto	i2l4305
  9555   002B42                     i2u429_40:
  9556   002B42                     
  9557                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  9558   002B42  0E00               	movlw	low _eusart1RxStatusBuffer
  9559   002B44  2453               	addwf	_eusart1RxHead^0,w,c	;volatile
  9560   002B46  6ED9               	movwf	fsr2l,c
  9561   002B48  6ADA               	clrf	fsr2h,c
  9562   002B4A  0E01               	movlw	high _eusart1RxStatusBuffer
  9563   002B4C  22DA               	addwfc	fsr2h,f,c
  9564   002B4E  0101               	movlb	1	; () banked
  9565   002B50  84DF               	bsf	indf2,2,c
  9566   002B52                     
  9567                           ; BSR set to: 1
  9568                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
  9569   002B52  D802               	call	i2u430_48
  9570   002B54  EFB7  F015         	goto	i2u430_49
  9571   002B58                     i2u430_48:
  9572   002B58  0005               	push	
  9573   002B5A  0100               	movlb	0	; () banked
  9574   002B5C  6EFA               	movwf	pclath,c
  9575   002B5E  51DC               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  9576   002B60  6EFD               	movwf	tosl,c
  9577   002B62  51DD               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  9578   002B64  6EFE               	movwf	tosh,c
  9579   002B66  50F8               	movf	tblptru,w,c
  9580   002B68  6EFF               	movwf	tosu,c
  9581   002B6A  50FA               	movf	pclath,w,c
  9582   002B6C  0012               	return		;indir
  9583   002B6E                     i2u430_49:
  9584   002B6E                     i2l4305:
  9585                           
  9586                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  9587   002B6E  0E00               	movlw	low _eusart1RxStatusBuffer
  9588   002B70  2453               	addwf	_eusart1RxHead^0,w,c	;volatile
  9589   002B72  6ED9               	movwf	fsr2l,c
  9590   002B74  6ADA               	clrf	fsr2h,c
  9591   002B76  0E01               	movlw	high _eusart1RxStatusBuffer
  9592   002B78  22DA               	addwfc	fsr2h,f,c
  9593   002B7A  50DF               	movf	indf2,w,c
  9594   002B7C  B4D8               	btfsc	status,2,c
  9595   002B7E  EFC3  F015         	goto	i2u431_41
  9596   002B82  EFC5  F015         	goto	i2u431_40
  9597   002B86                     i2u431_41:
  9598   002B86  EFD5  F015         	goto	i2l4309
  9599   002B8A                     i2u431_40:
  9600   002B8A                     
  9601                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
  9602   002B8A  D802               	call	i2u432_48
  9603   002B8C  EFD3  F015         	goto	i2u432_49
  9604   002B90                     i2u432_48:
  9605   002B90  0005               	push	
  9606   002B92  0100               	movlb	0	; () banked
  9607   002B94  6EFA               	movwf	pclath,c
  9608   002B96  51DA               	movf	_EUSART1_ErrorHandler& (0+255),w,b
  9609   002B98  6EFD               	movwf	tosl,c
  9610   002B9A  51DB               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  9611   002B9C  6EFE               	movwf	tosh,c
  9612   002B9E  50F8               	movf	tblptru,w,c
  9613   002BA0  6EFF               	movwf	tosu,c
  9614   002BA2  50FA               	movf	pclath,w,c
  9615   002BA4  0012               	return		;indir
  9616   002BA6                     i2u432_49:
  9617                           
  9618                           ;mcc_generated_files/eusart1.c: 242:     } else {
  9619   002BA6  EFD7  F015         	goto	i2l298
  9620   002BAA                     i2l4309:
  9621                           
  9622                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
  9623   002BAA  ECF5  F019         	call	_EUSART1_RxDataHandler	;wreg free
  9624   002BAE                     i2l298:
  9625   002BAE  0012               	return		;funcret
  9626   002BB0                     __end_of_EUSART1_Receive_ISR:
  9627                           	callstack 0
  9628                           
  9629 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  9630 ;; Defined at:
  9631 ;;		line 261 in file "mcc_generated_files/eusart1.c"
  9632 ;; Parameters:    Size  Location     Type
  9633 ;;		None
  9634 ;; Auto vars:     Size  Location     Type
  9635 ;;		None
  9636 ;; Return value:  Size  Location     Type
  9637 ;;                  1    wreg      void 
  9638 ;; Registers used:
  9639 ;;		None
  9640 ;; Tracked objects:
  9641 ;;		On entry : 0/0
  9642 ;;		On exit  : 0/0
  9643 ;;		Unchanged: 0/0
  9644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9645 ;;      Params:         0       0       0       0       0       0       0       0       0
  9646 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9647 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9648 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9649 ;;Total ram usage:        0 bytes
  9650 ;; Hardware stack levels used: 1
  9651 ;; This function calls:
  9652 ;;		Nothing
  9653 ;; This function is called by:
  9654 ;;		_EUSART1_Initialize
  9655 ;;		_EUSART1_Receive_ISR
  9656 ;; This function uses a non-reentrant model
  9657 ;;
  9658                           
  9659                           	psect	text67
  9660   0035A6                     __ptext67:
  9661                           	callstack 0
  9662   0035A6                     _EUSART1_DefaultOverrunErrorHandler:
  9663                           	callstack 19
  9664   0035A6                     
  9665                           ;mcc_generated_files/eusart1.c: 264:     RCSTA1bits.CREN = 0;
  9666   0035A6  98AB               	bcf	171,4,c	;volatile
  9667                           
  9668                           ;mcc_generated_files/eusart1.c: 265:     RCSTA1bits.CREN = 1;
  9669   0035A8  88AB               	bsf	171,4,c	;volatile
  9670   0035AA  0012               	return		;funcret
  9671   0035AC                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  9672                           	callstack 0
  9673                           
  9674 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  9675 ;; Defined at:
  9676 ;;		line 259 in file "mcc_generated_files/eusart1.c"
  9677 ;; Parameters:    Size  Location     Type
  9678 ;;		None
  9679 ;; Auto vars:     Size  Location     Type
  9680 ;;		None
  9681 ;; Return value:  Size  Location     Type
  9682 ;;                  1    wreg      void 
  9683 ;; Registers used:
  9684 ;;		None
  9685 ;; Tracked objects:
  9686 ;;		On entry : 0/0
  9687 ;;		On exit  : 0/0
  9688 ;;		Unchanged: 0/0
  9689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9690 ;;      Params:         0       0       0       0       0       0       0       0       0
  9691 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9692 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9693 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9694 ;;Total ram usage:        0 bytes
  9695 ;; Hardware stack levels used: 1
  9696 ;; This function calls:
  9697 ;;		Nothing
  9698 ;; This function is called by:
  9699 ;;		_EUSART1_Initialize
  9700 ;;		_EUSART1_Receive_ISR
  9701 ;; This function uses a non-reentrant model
  9702 ;;
  9703                           
  9704                           	psect	text68
  9705   0035C2                     __ptext68:
  9706                           	callstack 0
  9707   0035C2                     _EUSART1_DefaultFramingErrorHandler:
  9708                           	callstack 19
  9709   0035C2  0012               	return		;funcret
  9710   0035C4                     __end_of_EUSART1_DefaultFramingErrorHandler:
  9711                           	callstack 0
  9712                           
  9713 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  9714 ;; Defined at:
  9715 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  9716 ;; Parameters:    Size  Location     Type
  9717 ;;		None
  9718 ;; Auto vars:     Size  Location     Type
  9719 ;;		None
  9720 ;; Return value:  Size  Location     Type
  9721 ;;                  1    wreg      void 
  9722 ;; Registers used:
  9723 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9724 ;; Tracked objects:
  9725 ;;		On entry : 0/0
  9726 ;;		On exit  : 0/0
  9727 ;;		Unchanged: 0/0
  9728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9729 ;;      Params:         0       0       0       0       0       0       0       0       0
  9730 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9731 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9732 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9733 ;;Total ram usage:        0 bytes
  9734 ;; Hardware stack levels used: 1
  9735 ;; Hardware stack levels required when called: 1
  9736 ;; This function calls:
  9737 ;;		_EUSART1_RxDataHandler
  9738 ;; This function is called by:
  9739 ;;		_EUSART1_Initialize
  9740 ;;		_EUSART1_Receive_ISR
  9741 ;; This function uses a non-reentrant model
  9742 ;;
  9743                           
  9744                           	psect	text69
  9745   0035AC                     __ptext69:
  9746                           	callstack 0
  9747   0035AC                     _EUSART1_DefaultErrorHandler:
  9748                           	callstack 18
  9749   0035AC                     
  9750                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
  9751   0035AC  ECF5  F019         	call	_EUSART1_RxDataHandler	;wreg free
  9752   0035B0  0012               	return		;funcret
  9753   0035B2                     __end_of_EUSART1_DefaultErrorHandler:
  9754                           	callstack 0
  9755                           
  9756 ;; *************** function _EUSART1_RxDataHandler *****************
  9757 ;; Defined at:
  9758 ;;		line 249 in file "mcc_generated_files/eusart1.c"
  9759 ;; Parameters:    Size  Location     Type
  9760 ;;		None
  9761 ;; Auto vars:     Size  Location     Type
  9762 ;;		None
  9763 ;; Return value:  Size  Location     Type
  9764 ;;                  1    wreg      void 
  9765 ;; Registers used:
  9766 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9767 ;; Tracked objects:
  9768 ;;		On entry : 0/0
  9769 ;;		On exit  : 0/0
  9770 ;;		Unchanged: 0/0
  9771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9772 ;;      Params:         0       0       0       0       0       0       0       0       0
  9773 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9774 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9775 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9776 ;;Total ram usage:        0 bytes
  9777 ;; Hardware stack levels used: 1
  9778 ;; This function calls:
  9779 ;;		Nothing
  9780 ;; This function is called by:
  9781 ;;		_EUSART1_Receive_ISR
  9782 ;;		_EUSART1_DefaultErrorHandler
  9783 ;; This function uses a non-reentrant model
  9784 ;;
  9785                           
  9786                           	psect	text70
  9787   0033EA                     __ptext70:
  9788                           	callstack 0
  9789   0033EA                     _EUSART1_RxDataHandler:
  9790                           	callstack 19
  9791   0033EA                     
  9792                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  9793   0033EA  0E10               	movlw	low _eusart1RxBuffer
  9794   0033EC  2453               	addwf	_eusart1RxHead^0,w,c	;volatile
  9795   0033EE  6ED9               	movwf	fsr2l,c
  9796   0033F0  6ADA               	clrf	fsr2h,c
  9797   0033F2  0E01               	movlw	high _eusart1RxBuffer
  9798   0033F4  22DA               	addwfc	fsr2h,f,c
  9799   0033F6  CFAE FFDF          	movff	4014,indf2	;volatile
  9800   0033FA  2A53               	incf	_eusart1RxHead^0,f,c	;volatile
  9801   0033FC                     
  9802                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  9803   0033FC  0E0F               	movlw	15
  9804   0033FE  6453               	cpfsgt	_eusart1RxHead^0,c	;volatile
  9805   003400  EF04  F01A         	goto	i2u394_41
  9806   003404  EF06  F01A         	goto	i2u394_40
  9807   003408                     i2u394_41:
  9808   003408  EF08  F01A         	goto	i2l3973
  9809   00340C                     i2u394_40:
  9810   00340C                     
  9811                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
  9812   00340C  0E00               	movlw	0
  9813   00340E  6E53               	movwf	_eusart1RxHead^0,c	;volatile
  9814   003410                     i2l3973:
  9815                           
  9816                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
  9817   003410  2A51               	incf	_eusart1RxCount^0,f,c	;volatile
  9818   003412  0012               	return		;funcret
  9819   003414                     __end_of_EUSART1_RxDataHandler:
  9820                           	callstack 0
  9821                           
  9822                           	psect	text71
  9823   000000                     __ptext71:
  9824                           	callstack 0
  9825   000000                     
  9826                           	psect	rparam
  9827   000000                     
  9828                           	psect	temp
  9829   000059                     btemp:
  9830                           	callstack 0
  9831   000059                     	ds	1
  9832   000000                     int$flags	set	btemp
  9833   000000                     wtemp8	set	btemp+1
  9834   000000                     ttemp5	set	btemp+1
  9835   000000                     ttemp6	set	btemp+4
  9836   000000                     ttemp7	set	btemp+8
  9837                           
  9838                           	psect	idloc
  9839                           
  9840                           ;Config register IDLOC0 @ 0x200000
  9841                           ;	unspecified, using default values
  9842   200000                     	org	2097152
  9843   200000  FF                 	db	255
  9844                           
  9845                           ;Config register IDLOC1 @ 0x200001
  9846                           ;	unspecified, using default values
  9847   200001                     	org	2097153
  9848   200001  FF                 	db	255
  9849                           
  9850                           ;Config register IDLOC2 @ 0x200002
  9851                           ;	unspecified, using default values
  9852   200002                     	org	2097154
  9853   200002  FF                 	db	255
  9854                           
  9855                           ;Config register IDLOC3 @ 0x200003
  9856                           ;	unspecified, using default values
  9857   200003                     	org	2097155
  9858   200003  FF                 	db	255
  9859                           
  9860                           ;Config register IDLOC4 @ 0x200004
  9861                           ;	unspecified, using default values
  9862   200004                     	org	2097156
  9863   200004  FF                 	db	255
  9864                           
  9865                           ;Config register IDLOC5 @ 0x200005
  9866                           ;	unspecified, using default values
  9867   200005                     	org	2097157
  9868   200005  FF                 	db	255
  9869                           
  9870                           ;Config register IDLOC6 @ 0x200006
  9871                           ;	unspecified, using default values
  9872   200006                     	org	2097158
  9873   200006  FF                 	db	255
  9874                           
  9875                           ;Config register IDLOC7 @ 0x200007
  9876                           ;	unspecified, using default values
  9877   200007                     	org	2097159
  9878   200007  FF                 	db	255
  9879                           
  9880                           	psect	config
  9881                           
  9882                           ;Config register CONFIG1L @ 0x300000
  9883                           ;	PLL Selection
  9884                           ;	PLLSEL = PLL4X, 4x clock multiplier
  9885                           ;	PLL Enable Configuration bit
  9886                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
  9887                           ;	CPU System Clock Postscaler
  9888                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  9889                           ;	Low Speed USB mode with 48 MHz system clock
  9890                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
  9891   300000                     	org	3145728
  9892   300000  00                 	db	0
  9893                           
  9894                           ;Config register CONFIG1H @ 0x300001
  9895                           ;	Oscillator Selection
  9896                           ;	FOSC = INTOSCIO, Internal oscillator
  9897                           ;	Primary Oscillator Shutdown
  9898                           ;	PCLKEN = ON, Primary oscillator enabled
  9899                           ;	Fail-Safe Clock Monitor
  9900                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  9901                           ;	Internal/External Oscillator Switchover
  9902                           ;	IESO = OFF, Oscillator Switchover mode disabled
  9903   300001                     	org	3145729
  9904   300001  28                 	db	40
  9905                           
  9906                           ;Config register CONFIG2L @ 0x300002
  9907                           ;	Power-up Timer Enable
  9908                           ;	nPWRTEN = OFF, Power up timer disabled
  9909                           ;	Brown-out Reset Enable
  9910                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  9911                           ;	Brown-out Reset Voltage
  9912                           ;	BORV = 190, BOR set to 1.9V nominal
  9913                           ;	Low-Power Brown-out Reset
  9914                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  9915   300002                     	org	3145730
  9916   300002  5F                 	db	95
  9917                           
  9918                           ;Config register CONFIG2H @ 0x300003
  9919                           ;	Watchdog Timer Enable bits
  9920                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  9921                           ;	Watchdog Timer Postscaler
  9922                           ;	WDTPS = 32768, 1:32768
  9923   300003                     	org	3145731
  9924   300003  3C                 	db	60
  9925                           
  9926                           ; Padding undefined space
  9927   300004                     	org	3145732
  9928   300004  FF                 	db	255
  9929                           
  9930                           ;Config register CONFIG3H @ 0x300005
  9931                           ;	CCP2 MUX bit
  9932                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  9933                           ;	PORTB A/D Enable bit
  9934                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  9935                           ;	Timer3 Clock Input MUX bit
  9936                           ;	T3CMX = RC0, T3CKI function is on RC0
  9937                           ;	SDO Output MUX bit
  9938                           ;	SDOMX = RB3, SDO function is on RB3
  9939                           ;	Master Clear Reset Pin Enable
  9940                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  9941   300005                     	org	3145733
  9942   300005  D3                 	db	211
  9943                           
  9944                           ;Config register CONFIG4L @ 0x300006
  9945                           ;	Stack Full/Underflow Reset
  9946                           ;	STVREN = ON, Stack full/underflow will cause Reset
  9947                           ;	Single-Supply ICSP Enable bit
  9948                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  9949                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  9950                           ;	ICPRT = OFF, ICPORT disabled
  9951                           ;	Extended Instruction Set Enable bit
  9952                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  9953                           ;	Background Debugger Enable bit
  9954                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  9955   300006                     	org	3145734
  9956   300006  85                 	db	133
  9957                           
  9958                           ; Padding undefined space
  9959   300007                     	org	3145735
  9960   300007  FF                 	db	255
  9961                           
  9962                           ;Config register CONFIG5L @ 0x300008
  9963                           ;	Block 0 Code Protect
  9964                           ;	CP0 = OFF, Block 0 is not code-protected
  9965                           ;	Block 1 Code Protect
  9966                           ;	CP1 = OFF, Block 1 is not code-protected
  9967                           ;	Block 2 Code Protect
  9968                           ;	CP2 = OFF, Block 2 is not code-protected
  9969                           ;	Block 3 Code Protect
  9970                           ;	CP3 = OFF, Block 3 is not code-protected
  9971   300008                     	org	3145736
  9972   300008  0F                 	db	15
  9973                           
  9974                           ;Config register CONFIG5H @ 0x300009
  9975                           ;	Boot Block Code Protect
  9976                           ;	CPB = OFF, Boot block is not code-protected
  9977                           ;	Data EEPROM Code Protect
  9978                           ;	CPD = OFF, Data EEPROM is not code-protected
  9979   300009                     	org	3145737
  9980   300009  C0                 	db	192
  9981                           
  9982                           ;Config register CONFIG6L @ 0x30000A
  9983                           ;	Block 0 Write Protect
  9984                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  9985                           ;	Block 1 Write Protect
  9986                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  9987                           ;	Block 2 Write Protect
  9988                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  9989                           ;	Block 3 Write Protect
  9990                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  9991   30000A                     	org	3145738
  9992   30000A  0F                 	db	15
  9993                           
  9994                           ;Config register CONFIG6H @ 0x30000B
  9995                           ;	Configuration Registers Write Protect
  9996                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  9997                           ;	Boot Block Write Protect
  9998                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  9999                           ;	Data EEPROM Write Protect
 10000                           ;	WRTD = OFF, Data EEPROM is not write-protected
 10001   30000B                     	org	3145739
 10002   30000B  E0                 	db	224
 10003                           
 10004                           ;Config register CONFIG7L @ 0x30000C
 10005                           ;	Block 0 Table Read Protect
 10006                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
 10007                           ;	Block 1 Table Read Protect
 10008                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
 10009                           ;	Block 2 Table Read Protect
 10010                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
 10011                           ;	Block 3 Table Read Protect
 10012                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
 10013   30000C                     	org	3145740
 10014   30000C  0F                 	db	15
 10015                           
 10016                           ;Config register CONFIG7H @ 0x30000D
 10017                           ;	Boot Block Table Read Protect
 10018                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
 10019   30000D                     	org	3145741
 10020   30000D  40                 	db	64
 10021                           tosu	equ	0xFFF
 10022                           tosh	equ	0xFFE
 10023                           tosl	equ	0xFFD
 10024                           stkptr	equ	0xFFC
 10025                           pclatu	equ	0xFFB
 10026                           pclath	equ	0xFFA
 10027                           pcl	equ	0xFF9
 10028                           tblptru	equ	0xFF8
 10029                           tblptrh	equ	0xFF7
 10030                           tblptrl	equ	0xFF6
 10031                           tablat	equ	0xFF5
 10032                           prodh	equ	0xFF4
 10033                           prodl	equ	0xFF3
 10034                           indf0	equ	0xFEF
 10035                           postinc0	equ	0xFEE
 10036                           postdec0	equ	0xFED
 10037                           preinc0	equ	0xFEC
 10038                           plusw0	equ	0xFEB
 10039                           fsr0h	equ	0xFEA
 10040                           fsr0l	equ	0xFE9
 10041                           wreg	equ	0xFE8
 10042                           indf1	equ	0xFE7
 10043                           postinc1	equ	0xFE6
 10044                           postdec1	equ	0xFE5
 10045                           preinc1	equ	0xFE4
 10046                           plusw1	equ	0xFE3
 10047                           fsr1h	equ	0xFE2
 10048                           fsr1l	equ	0xFE1
 10049                           bsr	equ	0xFE0
 10050                           indf2	equ	0xFDF
 10051                           postinc2	equ	0xFDE
 10052                           postdec2	equ	0xFDD
 10053                           preinc2	equ	0xFDC
 10054                           plusw2	equ	0xFDB
 10055                           fsr2h	equ	0xFDA
 10056                           fsr2l	equ	0xFD9
 10057                           status	equ	0xFD8

Data Sizes:
    Strings     31
    Constant    0
    Data        0
    BSS         153
    Persistent  19
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     79      88
    BANK0           160    116     151
    BANK1           256      0     128
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1697$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S1697$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_1(CODE[23]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_1(CODE[23]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 23
		 -> STR_1(CODE[23]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 23
		 -> STR_1(CODE[23]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1763$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_1(CODE[23]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 

    main@arrayPtr	PTR  size(2) Largest target is 40
		 -> main@adcArray(BANK0[40]), 

    main@adcPtr	PTR unsigned short  size(2) Largest target is 2
		 -> main@adcVal(BANK0[2]), 

    adcMax@maxNo	PTR  size(2) Largest target is 40
		 -> main@adcArray(BANK0[40]), 

    convertValue@val	PTR unsigned short  size(2) Largest target is 2
		 -> main@adcVal(BANK0[2]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), Absolute function(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), Absolute function(), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _floorf->___fldiv
    ___flsub->___flmul
    _atoi->___wmul
    _convertValue->___flmul
    ___flmul->___xxtofl
    _adcMax->___flge
    ___flge->___flmul
    _adcCal->_ADC_GetConversionResult
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_INT0_ISR

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                62    62      0   37192
                                             66 BANK0     50    50      0
                     _ADC_Initialize
                 _EUSART1_Initialize
                  _SYSTEM_Initialize
                             _adcCal
                             _adcMax
                       _convertValue
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   29820
                                             58 BANK0      8     2      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   29637
                                             50 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           24    18      6   29143
                                             65 COMRAM    14    14      0
                                             44 BANK0      6     0      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   25442
                                             56 COMRAM     9     2      7
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     497
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3073
                                             23 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1177
                                             16 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     857
                                              7 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      93
                                              6 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      62
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     478
                                              5 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     363
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             30 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     607
                                              5 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4007
                                             44 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3442
                                              5 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2723
                                              5 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    1404
                                             11 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     259
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              4     2      2     281
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     412
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _convertValue                                         6     2      4    4112
                                             44 COMRAM     6     2      4
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3593
                                             19 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _adcMax                                               6     2      4    1541
                                             56 COMRAM     6     2      4
                             ___flge
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1166
                                             44 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _adcCal                                               4     2      2      23
                                              9 COMRAM     2     0      2
            _ADC_GetConversionResult
               _ADC_IsConversionDone
                  _ADC_SelectChannel
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    2     2      0      22
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversionResult                              4     2      2       0
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     882
                     _ADC_Initialize
                 _EUSART1_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     294
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             2     0      2      98
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2      98
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2      98
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          4     4      0       0
                                              1 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (12) _TMR0_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (12) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (12) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT0_ISR                                            1     1      0       0
                                              0 COMRAM     1     1      0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (12) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Initialize
   _EUSART1_Initialize
     _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
     _EUSART1_SetRxInterruptHandler
     _EUSART1_SetTxInterruptHandler
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _adcCal
     _ADC_GetConversionResult
     _ADC_IsConversionDone
     _ADC_SelectChannel
     _ADC_StartConversion
   _adcMax
     ___flge
       ___flmul (ARG)
         ___xxtofl (ARG)
   _convertValue
     ___flmul
     ___xxtofl
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
           _strcpy
         _fputc
         _isdigit

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _INT0_ISR *
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *
   _INT1_ISR *
     _INT1_CallBack
       Absolute function(Fake) *
       _INT1_DefaultInterruptHandler *
   _INT2_ISR *
     _INT2_CallBack
       Absolute function(Fake) *
       _INT2_DefaultInterruptHandler *
   _TMR0_ISR *
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      37        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      80       7       50.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     74      97       5       94.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4F      58       1       93.6%
BITBIGSFRllhll      23      0       0      34        0.0%
BITBIGSFRhhlhh      18      0       0      21        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRhhllhl      C      0       0      28        0.0%
BITBIGSFRhhllhh      B      0       0      24        0.0%
BITBIGSFRlll         8      0       0      35        0.0%
BITBIGSFRhhllhh      7      0       0      25        0.0%
BITBIGSFRhhllhl      4      0       0      27        0.0%
BITBIGSFRhhlll       4      0       0      30        0.0%
BITBIGSFRhll         4      0       0      31        0.0%
BITBIGSFRllhh        3      0       0      32        0.0%
BITBIGSFRhhllhh      2      0       0      26        0.0%
BITBIGSFRllhlh       1      0       0      33        0.0%
BITBIGSFRhhllhh      1      0       0      23        0.0%
BITBIGSFRhhllhl      1      0       0      29        0.0%
BITBIGSFRhhlhl       1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     16F      36        0.0%
DATA                 0      0     16F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Apr 30 20:08:40 2023

                      _eusart1TxBufferRemaining 0058                                    ___fldiv@aexp 001E  
                                  ___fldiv@bexp 001D                                    ___fldiv@sign 0016  
                                            l39 3168                                              l71 34C8  
                                            l74 3530                             ___wmul@multiplicand 0008  
                               _timer0ReloadVal 0056                                             l103 35B8  
                                           l320 3594                                             l400 2F5E  
                                           l314 358A                                             l323 356C  
                                           l251 2EA0                                             l147 34AA  
                                           l317 3580                                             l173 3544  
                                           l326 3576                                             l406 2C72  
                                           l351 35B4                                             l345 34F6  
                                           l450 3562                                             l354 350A  
                                           l275 2F72                                             l348 34E0  
                                           l276 2F88                                             l357 351E  
                                           l285 353A                                             l463 3558  
                                           l279 2FB4                                             l482 3298  
                                           l476 354E                                             l396 31E8  
                                           l485 3488                                             l750 28AE  
                                           l744 2D1C                                             l755 28F4  
                                           l782 27F0                                             l759 3260  
                    ??_INT0_SetInterruptHandler 0008                                             _cnt 0057  
                                           _pad 2DB4                                             tosl 000FFD  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                 _INT0_CallBack 338E                                    ___flmul@aexp 0021  
                                  ___flmul@bexp 0026                                    ___flmul@sign 0020  
                                  ___flmul@temp 002B                                    ___flmul@prod 0027  
                                 _INT1_CallBack 335E                                    ___fltol@exp1 000F  
                                          l1013 1430                                            l1030 154A  
                                          l1022 1700                                            l1014 141E  
                                          l1103 1B2A                                            l1015 13E4  
                                          l1040 1608                                            l1201 2E2C  
                                          l1106 19BC                                            l1116 1AEC  
                                          l1108 1A34                                            l1140 2444  
                                          l1212 1240                                            l1109 1A22  
                                          l1143 25A0                                            l1039 161A  
                                          l1055 309C                                            l1215 0BDA  
                                          l1320 26E2                                            l1080 1DE2  
                                          l1072 1CE8                                            l1081 1DD0  
                                          l1217 0A20                                            l1154 2538  
                                          l1147 24DC                                            l1323 26EA  
                                          l1067 1EC4                                            l1163 343A  
                                          l1332 2330                                            l1069 1D24  
                                          l1245 1022                                            l1078 1D6A  
                                          l1280 21DA                                            l1329 23EC  
                                          l1354 2EF6                                            l1099 17C6  
                                          l1339 33E8                                            l1347 30E2  
                                          l1363 3056                                            l4101 34A6  
                                          l1357 2F06                                            l1197 2DD6  
                                          l4103 34E2                                            l4111 2E4A  
                                          l1375 2DB2                                            l1383 3126  
                                          l1287 3006                                            l4121 2E5E  
                                          l4113 2E4E                                            l4105 2E2E  
                                          l5001 1A5E                                            l4201 2580  
                                          l1297 29F2                                            l4123 2E6A  
                                          l4115 2E52                                            l4107 2E30  
                                          l5011 1AD4                                            l5003 1A88  
                                          l4203 258E                                            l4125 2E76  
                                          l4117 2E56                                            l4109 2E3C  
                                          l4221 34B0                                            l4141 35B2  
                                          l5013 1AF0                                            l5021 1B16  
                                          l5005 1A8C                                            l4205 2590  
                                          l5101 277C                                            l1389 31A8  
                                          l4127 2E9E                                            l4119 2E5A  
                                          l4071 35B6                                            l4063 3128  
                                          l4231 34C4                                            l4223 34B4  
                                          l4143 34F8                                            l4311 31AA  
                                          l5023 1B1A                                            l5015 1B00  
                                          l5007 1AA6                                            l5111 27A4  
                                          l5103 2786                                            l4081 3274  
                                          l4073 3520                                            l4065 3140  
                                          l4225 34B8                                            l4137 34CC  
                                          l4321 31D0                                            l4313 31AA  
                                          l5017 1B0E                                            l5009 1ABA  
                                          l5041 2CF0                                            l5033 2C74  
                                          l5113 27B0                                            l5105 2790  
                                          l5201 302C                                            l4091 3296  
                                          l4083 3276                                            l4075 3262  
                                          l4067 3142                                            l4227 34BC  
                                          l4219 34AC                                            l4147 350C  
                                          l4139 34DE                                            l4315 31B0  
                                          l5051 2820                                            l5019 1B10  
                                          l4171 246A                                            l4163 23F0  
                                          l5211 309E                                            l5043 2D14  
                                          l5035 2CA2                                            l5027 3058  
                                          l5115 27C0                                            l5203 3038  
                                          l5131 2DF6                                            l5123 2DB4  
                                          l4085 3284                                            l4077 3266  
                                          l4069 3166                                            l4093 348A  
                                          l4229 34C0                                            l4317 31B4  
                                          l5061 288E                                            l5053 2830  
                                          l4181 24C4                                            l4165 2400  
                                          l5213 30A2                                            l5045 2D1A  
                                          l5037 2CB2                                            l5029 3068  
                                          l5117 27D0                                            l5141 2954  
                                          l5205 303C                                            l5133 2DFA  
                                          l5125 2DC2                                            l5301 0B2C  
                                          l4087 3286                                            l4079 3272  
                                          l4095 3496                                            l4327 31E0  
                                          l4319 31BC                                            l5063 289C  
                                          l5055 285E                                            l4191 2528  
                                          l4183 24C6                                            l4175 247E  
                                          l4167 240E                                            l5207 33BE  
                                          l5215 30B6                                            l5039 2CE0  
                                          l5071 322A                                            l5119 27E0  
                                          l5151 29A6                                            l5143 297C  
                                          l4511 2F62                                            l5135 2E18  
                                          l5127 2DCE                                            l5311 0BE2  
                                          l5303 0B60                                            l5231 084A  
                                          l5223 0822                                            l4089 3288  
                                          l4097 3498                                            l5065 28EC  
                                          l5057 286E                                            l5049 27F2  
                                          l4193 2546                                            l4185 24D2  
                                          l4177 2486                                            l4169 2454  
                                          l5217 30D8                                            l5073 3240  
                                          l4601 135A                                            l5081 2702  
                                          l5145 2988                                            l5137 28F6  
                                          l4521 2FAC                                            l4513 2F80  
                                          l5129 2DE2                                            l5161 317A  
                                          l5401 1078                                            l5321 0C12  
                                          l5313 0BF2                                            l5305 0B68  
                                          l5241 08A0                                            l5233 086E  
                                          l5225 0828                                            l4099 349A  
                                          l5067 28F2                                            l5059 287C  
                                          l4195 2548                                            l4187 250E  
                                          l4179 2492                                            l5219 30DC  
                                          l5075 3250                                            l4611 136E  
                                          l4603 135E                                            l5091 2752  
                                          l5155 29EA                                            l5139 2916  
                                          l5171 2252                                            l5163 2EA2  
                                          l4523 2FB0                                            l4515 2F8A  
                                          l4531 2D30                                            l5411 10AC  
                                          l5403 107E                                            l5323 0C24  
                                          l5331 0C64                                            l5315 0BFE  
                                          l5251 08F0                                            l5243 08AC  
                                          l5235 0878                                            l5227 0838  
                                          l4197 254C                                            l4189 251A  
                                          l4701 15CA                                            l4613 1372  
                                          l4605 1362                                            l4621 1382  
                                          l5093 2756                                            l5085 2716  
                                          l5149 2994                                            l5181 2320  
                                          l5173 2266                                            l5165 2EC0  
                                          l4517 2F9A                                            l4525 2FB2  
                                          l4509 2F62                                            l4533 2D42  
                                          l5413 10B2                                            l5405 1084  
                                          l5421 114A                                            l5341 0D4C  
                                          l5333 0C6C                                            l5325 0C32  
                                          l5317 0C06                                            l5309 0BA8  
                                          l5261 0924                                            l5253 08F4  
                                          l5245 08B4                                            l5237 0880  
                                          l5229 0846                                            l5501 1FD0  
                                          ?_pad 0018                                            l4199 2570  
                                          l4703 15D8                                            l4631 13F2  
                                          l4623 1386                                            l4615 1376  
                                          l4607 1366                                            l4551 126E  
                                          l4543 1242                                            l5095 2764  
                                          l5087 2740                                            l5079 26EC  
                                          l5191 23DC                                            l5175 2274  
                                          l5183 2354                                            l5167 21DC  
                                          l4519 2F9C                                            l4527 3534  
                                          l4535 2D4C                                            l5159 316A  
                                          l5431 11CC                                            l5423 1168  
                                          l5415 110A                                            l5407 1096  
                                          l5351 0E0A                                            l5343 0D80  
                                          l5335 0C7C                                            l5327 0C4A  
                                          l5319 0C0E                                            l5271 0980  
                                          l5255 08FA                                            l5239 0890  
                                          l5247 08B8                                            l5511 203A  
                                          l5503 2008                                            l4801 1C1E  
                                          l4713 162A                                            l4721 1680  
                                          l4705 15DC                                            l4641 141C  
                                          l4633 13FE                                            l4625 13B0  
                                          l4617 137A                                            l4609 136A  
                                          l4561 12A8                                            l4553 127E  
                                          l4545 124E                                            l5089 2742  
                                          l5185 2390                                            l5169 21FC  
                                          l4537 2D6A                                            l4529 2D1E  
                                          l5441 1220                                            l5433 11DA  
                                          l5425 1184                                            l5417 113E  
                                          l5409 10A8                                            l5361 0EA6  
                                          l5353 0E20                                            l5337 0C90  
                                          l5345 0D86                                            l5329 0C5C  
                                          l5273 0986                                            l5257 0902  
                                          l5249 08DE                                            l5265 0944  
                                          l5521 20C8                                            l5505 2018  
                                          l5601 29FC                                            l5451 25BA  
                                          l4811 1C4E                                            l4803 1C26  
                                          l4731 16D2                                            l4723 1690  
                                          l4715 1636                                            l4707 15EA  
                                          l4651 1472                                            l4643 143E  
                                          l4635 1402                                            l4627 13CC  
                                          l4619 137E                                            l4571 12D6  
                                          l4563 12AE                                            l4555 128E  
                                          l4547 125C                                            l5187 23A4  
                                          l5179 22E4                                            l5195 3008  
                                          l4539 2DA0                                            l5435 11F2  
                                          l5427 118C                                            l5419 1146  
                                          l5363 0EFC                                            l5371 0F4E  
                                          l5355 0E52                                            l5347 0DA4  
                                          l5339 0CF4                                            l5291 0A36  
                                          l5275 098E                                            l5267 096A  
                                          l5283 09D0                                            l5259 091A  
                                          l5507 202A                                            l5515 2042  
                                          l5611 2A04                                            l5603 2A00  
                                          l4901 171C                                            l5461 264E  
                                          l5453 25D6                                            l5445 25A2  
                                          l4821 1C8C                                            l4813 1C4E  
                                          l4805 1C2A                                            l4741 16F0  
                                          l4733 16D8                                            l4725 16A0  
                                          l4717 1644                                            l4709 1600  
                                          l4661 14AC                                            l4653 1480  
                                          l4645 144E                                            l4637 1410  
                                          l4629 13DC                                            l4581 130A  
                                          l4573 12D8                                            l4565 12C0  
                                          l4557 1290                                            l4549 125E  
                                          l5189 23CC                                            l5197 301C  
                                          l5437 1202                                            l5429 119C  
                                          l5381 0F80                                            l5373 0F5E  
                                          l5365 0F02                                            l5357 0E62  
                                          l5349 0DD8                                            l5293 0A6A  
                                          l5285 09EA                                            l5277 09A6  
                                          l5269 097C                                            l5525 20FC  
                                          l5509 2032                                            l5517 2074  
                                          l5541 21B2                                            l5621 2A1C  
                                          l5613 2A06                                            l5605 2A02  
                                          l4911 1754                                            l4903 171E  
                                          l5471 26C6                                            l5455 260A  
                                          l5447 25B6                                            l4831 1CD8  
                                          l4823 1C9C                                            l4735 16DA  
                                          l4727 16C0                                            l4719 167E  
                                          l4671 1518                                            l4663 14AE  
                                          l4655 148E                                            l4639 1412  
                                          l4591 1346                                            l4575 12E8  
                                          l4583 1312                                            l4567 12C2  
                                          l4559 1298                                            l5199 3028  
                                          l4751 3106                                            l5439 1218  
                                          l5391 1052                                            l5383 0FF8  
                                          l5375 0F66                                            l5367 0F36  
                                          l5359 0E72                                            l5295 0AA8  
                                          l5279 09B0                                            l5535 2174  
                                          l5527 2126                                            l5519 2094  
                                          l5631 2AAA                                            l5623 2A5A  
                                          l5607 2A02                                            l3961 3578  
                                          l3953 353C                                            l4921 1780  
                                          l4913 1764                                            l4905 172E  
                                          l4753 3464                                            l5721 2638  
                                          l5457 2612                                            l4841 1D22  
                                          l4833 1CE6                                            l4825 1CAC  
                                          l4817 1C62                                            l4809 1C3E  
                                          l4761 1B38                                            l4737 16E0  
                                          l4729 16C4                                            l4681 1570  
                                          l4673 151A                                            l4665 14B8  
                                          l4657 149A                                            l4649 1462  
                                          l4593 134A                                            l4585 1322  
                                          l4577 12F8                                            l4569 12C8  
                                          l4745 30E4                                            l5393 1056  
                                          l5385 1018                                            l5377 0F6C  
                                          l5369 0F4A                                            l5297 0ADA  
                                          l5289 0A30                                            l5529 2146  
                                          l5537 21A0                                            l5481 1EF8  
                                          l5561 2FC2                                            l5633 2AC8  
                                          l5625 2A6C                                            l5609 2A02  
                                          l3963 358C                                            l3955 356E  
                                          l4931 17D6                                            l4923 1790  
                                          l4915 176A                                            l4907 173E  
                                          l4755 3480                                            l5467 2684  
                                          l5459 261A                                            l4851 1D68  
                                          l4843 1D34                                            l4835 1CF2  
                                          l4827 1CB4                                            l4819 1C7C  
                                          l4771 1B78                                            l4763 1B46  
                                          l4739 16EE                                            l4691 159E  
                                          l4675 152A                                            l4659 149E  
                                          l4667 14BE                                            l4595 134E  
                                          l4587 1334                                            l4579 1308  
                                          l4747 30F0                                            l5395 105C  
                                          l5387 1034                                            l5379 0F74  
                                          l5299 0B18                                            l5715 2056  
                                          l5491 1F44                                            l5483 1F06  
                                          l5563 2FE0                                            l5627 2A72  
                                          l5619 2A10                                            l3957 3564  
                                          l5581 2C0A                                            l5573 2BB0  
                                          l4941 1810                                            l4933 17E6  
                                          l4925 17A0                                            l4917 1770  
                                          l4909 174E                                            l5469 26B4  
                                          l4861 1DC8                                            l4845 1D4A  
                                          l4853 1D7A                                            l4837 1D10  
                                          l4829 1CC4                                            l4781 1B9E  
                                          l4773 1B7A                                            l4765 1B48  
                                          l4693 15AC                                            l4685 1584  
                                          l4669 14E4                                            l4677 153A  
                                          l4597 1352                                            l4589 1342  
                                          l4749 3102                                            l5397 1064  
                                          l5389 1042                                            l5717 2110  
                                          l5493 1F68                                            l5485 1F0A  
                                          l5477 1EC6                                            l5565 2FFC  
                                          l5629 2A8E                                            l3959 3582  
                                          l3975 355A                                            l5583 2C3A  
                                          l4951 1862                                            l4943 1826  
                                          l4927 17B0                                            l4919 177E  
                                          l4871 1E36                                            l4855 1D88  
                                          l4847 1D50                                            l4839 1D12  
                                          l4791 1BDE                                            l4783 1BAC  
                                          l4767 1B58                                            l4775 1B82  
                                          l4759 1B2C                                            l4695 15B4  
                                          l4687 158E                                            l4679 1560  
                                          l4599 1356                                            l5399 1074  
                                          l5719 2192                                            l5495 1FA2  
                                          l5487 1F2E                                            l5479 1EEA  
                                          l5559 2FB6                                            l5591 3414  
                                          l3977 3550                                            l5585 2C3E  
                                          l4961 18A8                                            l4953 1870  
                                          l4945 1832                                            l4937 17FA  
                                          l4929 17B6                                            l5569 2F08  
                                          l4881 1EA0                                            l4865 1DF2  
                                          l4873 1E3A                                            l4857 1D8C  
                                          l4849 1D5A                                            l4793 1BE0  
                                          l4785 1BAE                                            l4777 1B92  
                                          l4769 1B68                                            l4697 15B8  
                                          l4689 159C                                            l5497 1FC2  
                                          l5489 1F36                                            l5593 341E  
                                          l3979 3546                                            l5587 2C5A  
                                          l5579 2BB8                                            l4971 1916  
                                          l4963 18C2                                            l4955 187C  
                                          l4947 184A                                            l4939 1806  
                                          l4883 1EA4                                            l4875 1E54  
                                          l4867 1DFE                                            l4859 1D9A  
                                          l4787 1BBE                                            l4795 1BE8  
                                          l4779 1B98                                            l4699 15C8  
                                          l4981 19AC                                            l4973 1940  
                                          l4965 18D2                                            l4957 188C  
                                          l4949 1856                                            l4885 1EB2  
                                          l4877 1E6A                                            l4869 1E0C  
                                          l4797 1BF8                                            l4789 1BCE  
                                          l5597 29F4                                            l4991 19EC  
                                          l4983 19BA                                            l4975 1976  
                                          l4967 18EE                                            l4959 1898  
                                          l4887 1EB8                                            l4879 1E84  
                                          l4799 1C0E                                            l5599 29F8  
                                          l4993 1A1A                                            l4985 19CC  
                                          l4977 1984                                            l4969 18FA  
                                          l4897 1702                                            l4889 1EBA  
                                          l4987 19DA                                            l4979 19A2  
                                          l4899 170E                                            l4997 1A44  
                                          l4989 19DE                                            l4999 1A50  
                                          STR_1 0801                                            STR_2 0818  
                                          STR_5 081C                                            _LATA 000F89  
                                          _LATB 000F8A                                            _LATC 000F8B  
                                          _LATD 000F8C                                            _LATE 000F8D  
                                          u4020 3508                                            u4100 2400  
                                          u4021 3502                                            u4101 23FC  
                                          u4030 350A                                            u4110 240E  
                                          u4111 240A                                            u4120 246A  
                                          u5000 1B58                                            u4121 2466  
                                          u5001 1B54                                            u4130 24C0  
                                          u5010 1B68                                            u4131 24BC  
                                          u5011 1B64                                            u4140 250A  
                                          u5100 1D34                                            u5020 1BAC  
                                          u4141 2506                                            u5101 1D30  
                                          u5021 1BA8                                            u4150 2528  
                                          u5110 1D4A                                            u5030 1BBE  
                                          u4151 2524                                            u5111 1D46  
                                          u5031 1BBA                                            u4160 2538  
                                          u5200 1E84                                            u5120 1D68  
                                          u5040 1BCE                                            u6000 0DA4  
                                          u4161 2534                                            u5201 1E80  
                                          u5121 1D64                                            u5041 1BCA  
                                          u6001 0DA0                                            u4330 31D0  
                                          u4170 2546                                            u5210 1EB2  
                                          u5130 1D88                                            u5050 1C0E  
                                          u6010 0E0A                                            u4331 31CC  
                                          u4171 2542                                            u5211 1EAE  
                                          u5131 1D84                                            u5051 1C0A  
                                          u6011 0E06                                            u5300 1960  
                                          u5220 171C                                            u4180 2580  
                                          u5140 1D9A                                            u5060 1C4E  
                                          u6100 1168                                            u6020 0E52  
                                          u5221 1718                                            u4181 257C  
                                          u5141 1D96                                            u5061 1C4A  
                                          u6101 1164                                            u6021 0E4E  
                                          u5310 19BA                                            u5230 172E  
                                          u4190 258E                                            u5150 1DC8  
                                          u5070 1CC4                                            u6110 1184  
                                          u6030 0E62                                            u5311 19B6  
                                          u5231 172A                                            u4191 258A  
                                          u5151 1DC4                                            u5071 1CC0  
                                          u6111 1180                                            u6031 0E5E  
                                          u5400 1B0E                                            u5320 19DA  
                                          u5240 173E                                            u5160 1DDE  
                                          u5080 1CE6                                            u4600 126E  
                                          u4520 2F72                                            u6120 11EC  
                                          u6040 0EFC                                            u6200 1F2E  
                                          u5401 1B0A                                            u5321 19D6  
                                          u5305 1956                                            u5241 173A  
                                          u5161 1DDA                                            u5081 1CE2  
                                          u4601 126A                                            u4521 2F6E  
                                          u6121 11E6                                            u6041 0EF8  
                                          u6201 1F2A                                            u5330 19EC  
                                          u5250 177E                                            u5170 1DF2  
                                          u5090 1D10                                            u5410 2CA2  
                                          u4610 127E                                            u4530 2F80  
                                          u6130 11EE                                            u6050 0F4A  
                                          u6210 1F68                                            u5331 19E8  
                                          u5251 177A                                            u5171 1DEE  
                                          u5091 1D0C                                            u5411 2C9E  
                                          u4611 127A                                            u4531 2F7C  
                                          u6051 0F46                                            u6211 1F64  
                                          u5340 1A1A                                            u5260 1790  
                                          u5180 1E0C                                            u5420 2CE0  
                                          u4700 13CA                                            u4620 12C0  
                                          u5500 2702                                            u4540 2FAC  
                                          u6140 1202                                            u6060 0FF8  
                                          u6220 2008                                            u5341 1A16  
                                          u5261 178C                                            u5181 1E08  
                                          u5421 2CDC                                            u4621 12BC  
                                          u5501 26FE                                            u4541 2FA8  
                                          u6141 11FE                                            u6061 0FF4  
                                          u6221 2004                                            u5350 1A30  
                                          u5270 17A0                                            u6150 25D6  
                                          u5190 1E54                                            u5430 2D14  
                                          u4710 13F2                                            u4630 12D6  
                                          u5510 2736                                            u4550 2D30  
                                          u6070 1034                                            u6230 2090  
                                          u5351 1A2C                                            u5271 179C  
                                          u6151 25D2                                            u5191 1E50  
                                          u5431 2D10                                            u4711 13EE  
                                          u4631 12D2                                            u4551 2D2C  
                                          u6071 1030                                            u6231 208C  
                                          u5440 2820                                            u5360 1A44  
                                          u5280 17D6                                            u6160 2606  
                                          u4800 152A                                            u4720 1410  
                                          u4640 12E8                                            u5520 2764  
                                          u5600 2954                                            u4560 2D42  
                                          u6080 1042                                            u6240 2FFC  
                                          u5441 281C                                            u5361 1A40  
                                          u5281 17D2                                            u6161 2602  
                                          u4801 1526                                            u4721 140C  
                                          u4641 12E4                                            u5521 2760  
                                          u5601 2950                                            u4561 2D3E  
                                          u6081 103E                                            u6241 2FF8  
                                          u5450 285E                                            u6250 2C0A  
                                          u5370 1A5E                                            u5290 17E6  
                                          u6170 26B4                                            u4810 1560  
                                          u4730 1430                                            u4650 12F8  
                                          u5530 2778                                            u5610 297C  
                                          u4570 2D6A                                            u6090 1096  
                                          u6307 31B6                                            u5451 285A  
                                          u6251 2C06                                            u5371 1A5A  
                                          u5291 17E2                                            u6171 26B0  
                                          u4811 155C                                            u4731 142C  
                                          u4651 12F4                                            u5531 2774  
                                          u5515 272C                                            u5611 2978  
                                          u4571 2D66                                            u6091 1092  
                                          u5460 287C                                            u6260 2C5A  
                                          u5380 1AA6                                            u6180 26C6  
                                          u4900 162A                                            u4820 1570  
                                          u4740 143E                                            u4660 1334  
                                          u5540 27A0                                            u5620 29A6  
                                          u5700 2274                                            u4580 2DA0  
                                          u5461 2878                                            u6261 2C56  
                                          u5381 1AA2                                            u6181 26C2  
                                          u4901 1626                                            u4821 156C  
                                          u4741 143A                                            u4661 1330  
                                          u5541 279C                                            u5621 29A2  
                                          u5701 2270                                            u4581 2D9C  
                                          u5470 289C                                            u5390 1AD4  
                                          u4910 1644                                            u4830 159C  
                                          u4750 144E                                            u4670 1342  
                                          u4590 125C                                            u5550 27C0  
                                          u6190 1EEA                                            u6270 2A8E  
                                          u5471 2898                                            u5391 1AD0  
                                          u4911 1640                                            u4831 1598  
                                          u4751 144A                                            u4671 133E  
                                          u4591 1258                                            u5551 27BC  
                                          u6191 1EE6                                            u6271 2A8A  
                                          u5480 28EC                                            u5800 33E4  
                                          u4920 167E                                            u4840 15AC  
                                          u4760 1480                                            u4680 13B0  
                                          u5560 27D0                                            u5640 29E0  
                                          u5720 22E0                                            u5481 28E8  
                                          u4921 167A                                            u4841 15A8  
                                          u4761 147C                                            u4681 13AC  
                                          u5561 27CC                                            u5641 29DA  
                                          u5721 22DC                                            u5810 30B6  
                                          u5490 3240                                            u4930 1690  
                                          u4850 15C8                                            u4770 148E  
                                          u4690 13C8                                            u5650 29E2  
                                          u5730 2304                                            u5570 2DC2  
                                          u5811 30B2                                            u5491 323C  
                                          u4931 168C                                            u4851 15C4  
                                          u4771 148A                                            u4691 13C2  
                                          u5635 29B8                                            u5715 2288  
                                          u5571 2DBE                                            u5820 30D8  
                                          u4940 16A0                                            u4860 15D8  
                                          u4780 14AC                                            u5740 2320  
                                          u5716 2292                                            u5580 2E18  
                                          u5660 31A8                                            u5900 0A1C  
                                          u5821 30D4                                            u4941 169C  
                                          u4861 15D4                                            u4781 14A8  
                                          u5741 231C                                            u5717 22A2  
                                          u5581 2E14                                            u5661 31A4  
                                          u5901 0A18                                            u4950 16C0  
                                          u4870 15EA                                            u4790 14E4  
                                          u5590 2936                                            u5750 2374  
                                          u5670 2EC0                                            u5910 0AA8  
                                          u5830 0846                                            u4951 16BC  
                                          u4871 15E6                                            u4791 14E0  
                                          u5735 22FA                                            u5671 2EBC  
                                          u5911 0AA4                                            u5831 0842  
                                          u6287 2A62                                            u4960 16D2  
                                          u4880 1600                                            u5760 2390  
                                          u5680 2224                                            u5920 0ADA  
                                          u5840 0890                                            u4961 16CE  
                                          u4881 15FC                                            u5761 238C  
                                          u5921 0AD6                                            u5841 088C  
                                          u6297 2AD4                                            u4970 16EE  
                                          u4890 1616                                            u5770 23CC  
                                          u5690 2252                                            u5930 0B18  
                                          u5850 08A0                                            u4971 16EA  
                                          u4891 1612                                            u5595 292C  
                                          u5771 23C8                                            u5755 236A  
                                          u5691 224E                                            u5931 0B14  
                                          u5851 089C                                            u5780 3056  
                                          u4980 3126                                            u5940 0BA4  
                                          u5860 08DE                                            u5685 221A  
                                          u5781 3052                                            u4981 3122  
                                          u5941 0BA0                                            u5861 08DA  
                                          u5790 33E2                                            u4990 1B46  
                                          u5950 0BDA                                            u5870 08F0  
                                          u5791 33DC                                            u4991 1B42  
                                          u5951 0BD6                                            u5871 08EC  
                                          u5960 0BF2                                            u5880 096A  
                                          u5961 0BEE                                            u5881 0966  
                                          u5970 0C24                                            u5890 097C  
                                          u5971 0C20                                            u5891 0978  
                                          u5980 0C32                                            u5981 0C2E  
                                          u5990 0C5C                                            u5991 0C58  
                                          _WPUB 000F85                                   _INT2_CallBack 332E  
                                 _EUSART1_Write 2F60                                            _dbuf 0130  
                                          _labs 2EA2                                            _atoi 25A2  
                                          _main 29F4                                    main@adcArray 00A4  
                                          _prec 00F0                                            pad@i 001F  
                                          pad@p 001C                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 0021  
                                          fsr2l 000FD9                                            btemp 0059  
                                 ___fpclassifyf 28F6                       ?_INT2_SetInterruptHandler 0006  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 0144                                 ___fldiv@new_exp 0017  
                fp__EUSART1_DefaultErrorHandler 0000                                    ___param_bank 000000  
                                 ?_convertValue 002D                                           ??_pad 001E  
                       __end_of_TMR0_Initialize 34AC                                    main@max_1105 00CC  
                              __end_of_INT0_ISR 3464                                __end_of_INT1_ISR 35A6  
                              __end_of_INT2_ISR 359E                  ??_TMR0_DefaultInterruptHandler 0001  
                 __end_of_OSCILLATOR_Initialize 3532                           _eusart1RxStatusBuffer 0100  
                                 ___fltol@sign1 000E                                           ?_labs 0006  
                                         ?_atoi 000C                                 __end_of___fladd 1702  
                                         ?_main 0001                                 __end_of___fldiv 1EC6  
                               __end_of___flneg 3262                                 __end_of___flmul 1B2C  
                               __end_of___flsub 309E                                 __end_of___fltol 27F2  
                                         _T0CON 000FD5                                           i2l110 0062  
                                         i2l112 0086                                           i2l121 0130  
                                         i2l114 00AA                                           i2l122 0130  
                                         i2l108 003E                                           i2l117 00F4  
                                         i2l302 3412                                           i2l311 35B0  
                                         i2l305 35C2                                           i2l170 332C  
                                         i2l308 35AA                                           i2l166 32FC  
                                         i2l176 35BA                                           i2l291 3228  
                                         i2l443 3462                                           i2l460 338C  
                                         i2l453 35C0                                           i2l447 33BC  
                                         i2l288 3226                                           i2l456 35A4  
                                         i2l473 335C                                           i2l298 2BAE  
                                         i2l466 35BE                                           i2l469 359C  
                                         i2l479 35BC                                    vfpfcnvrt@fmt 008E  
                                         _TMR0H 000FD7                                           _TMR0L 000FD6  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                ?_INT0_CallBack 0001                                           _TRISC 000F94  
                                         _TRISD 000F95                                           _TRISE 000F96  
                     ?_TMR0_SetInterruptHandler 0006                            _EUSART1_Transmit_ISR 31EA  
                              __end_of_TMR0_ISR 32FE                                  ?_INT1_CallBack 0001  
                                         _flags 00F6                                           _count 00F4  
                ??_INT1_DefaultInterruptHandler 0001                                           _fputc 2D1E  
                                         _fputs 30E4                                 __end_of_isdigit 33EA  
                                         labs@a 0006                                           atoi@n 0013  
                                         pad@fp 0018                                           atoi@s 000C  
                                         _width 00EE                                           _putch 3532  
                                         main@i 00D2                                  ?_INT2_CallBack 0001  
                               __end_of_isspace 30E4                        _INT1_SetInterruptHandler 3550  
                                ?_EUSART1_Write 0001                                           pclath 000FFA  
                                         pclatu 000FFB                                           tablat 000FF5  
                                         ttemp5 005A                                           ttemp6 005D  
                                         ttemp7 0061                                           status 000FD8  
                                         wtemp8 005A                                  ?___fpclassifyf 0006  
         fp__EUSART1_DefaultFramingErrorHandler 0000      __end_of_EUSART1_DefaultFramingErrorHandler 35C4  
          ??_EUSART1_DefaultFramingErrorHandler 0001             ?_EUSART1_DefaultFramingErrorHandler 0001  
            _EUSART1_DefaultFramingErrorHandler 35C2                                  ??_convertValue 0031  
                               __initialization 329A                                    __end_of_labs 2F08  
                                  __end_of_atoi 26EC                      __end_of_EUSART1_Initialize 2EA2  
                                  __end_of_main 2AEA                     ?_INTERRUPT_InterruptManager 0001  
                                        ??_labs 000A                                          ??_atoi 000E  
                                        ??_main 00A2                                   __activetblptr 000002  
                         ?_EUSART1_Transmit_ISR 0001                                          _ADCON0 000FC2  
                                        _ADCON1 000FC1                                          _ADCON2 000FC0  
                                        ?_fputc 0008                                          _ACTCON 000FB5  
                                        ?_fputs 0011                                          _ADRESH 000FC4  
                                        _ADRESL 000FC3                                          _ANSELA 000F5B  
                                        ?_putch 0001                                          _ANSELB 000F5C  
                                        _ANSELC 000F5D                                          _ANSELD 000F5E  
                                        _ANSELE 000F5F                                          i2l4131 3312  
                                        i2l4133 35A6                                          i2l4301 2B42  
                                        i2l4135 35AC                                          i2l4303 2B52  
                                        i2l4151 338E                                          i2l4305 2B6E  
                                        i2l4153 33A2                                          i2l4161 3342  
                                        i2l4129 32FE                                          i2l4241 32F8  
                                        i2l4233 32CC                                          i2l4307 2B8A  
                                        i2l4243 343C                                          i2l4155 335E  
                                        i2l4251 35A0                                          i2l4235 32D2  
                                        i2l4309 2BAA                                          i2l4245 343E  
                                        i2l4157 3372                                          i2l4253 3596  
                                        i2l4237 32D8                                          i2l4247 345E  
                                        i2l4159 332E                                          i2l4255 3598  
                                        i2l4239 32F0                                          i2l4281 31FA  
                                        i2l4249 359E                                          i2l4361 0028  
                                        i2l4291 2AEA                                          i2l4283 320A  
                                        i2l4371 007E                                          i2l4363 0036  
                                        i2l4293 2AFA                                          i2l4285 320C  
                                        i2l4381 00D4                                          i2l4373 0094  
                                        i2l4365 004C                                          i2l4295 2B08  
                                        i2l4287 321C                                          i2l4279 31EA  
                                        i2l4383 0102                                          i2l4375 00A2  
                                        i2l4367 005A                                          i2l4359 001A  
                                        i2l4297 2B18                                          i2l4289 3220  
                                        i2l4385 0110                                          i2l4377 00B8  
                                        i2l4369 0070                                          i2l4299 2B34  
                                        i2l4379 00C6                                          i2l3971 340C  
                                        i2l3973 3410                                          i2l3965 33EA  
                                        i2l3967 33FA                                          i2l3969 33FC  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _SPBRG1 000FAF  
                                        _TXREG1 000FAD                                __end_of___xxtofl 25A2  
                                        _TXSTA1 000FAC                                    vfprintf@cfmt 0098  
                                        _adcCal 31AA                                          ___flge 27F2  
                                        _adcMax 2BB0                                          ___fleq 2C74  
                                     ??___fladd 000E                                          ___wmul 3464  
                                     ??___fldiv 000E                                       ??___flneg 000A  
                                     ??___flmul 001C                                       ??___flsub 0035  
                                     ??___fltol 000A                                          _efgtoa 0822  
                      ?_EUSART1_SetErrorHandler 0006                                          _floorf 21DC  
                                        _memcpy 3008                                ?_TMR0_Initialize 0001  
                                        clear_0 32A0                                          clear_1 32AC  
                                        clear_2 32B8                                          isa$std 000001  
                                        _printf 3414                                          pad@buf 001A  
              ??_EUSART1_SetOverrunErrorHandler 0008                 ?_EUSART1_SetOverrunErrorHandler 0006  
                               ??_INT0_CallBack 0001                                          _strcpy 316A  
                                        fputc@c 0008            __end_of_INT2_DefaultInterruptHandler 35BE  
                  _INT2_DefaultInterruptHandler 35BC                                          fputs@c 0015  
                                        fputs@i 0016                                          fputs@s 0011  
                                     ??_isdigit 0008                                 ??_INT1_CallBack 0001  
                               ___fpclassifyf@e 000E                                 ___fpclassifyf@u 0010  
                               ___fpclassifyf@x 0006                                    __mediumconst 0000  
                                     ??_isspace 0008                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                               ??_INT2_CallBack 0001                           __end_of_TMR0_CallBack 332E  
                              __end_of_vfprintf 3008                                 ??_EUSART1_Write 0006  
      INT2_SetInterruptHandler@InterruptHandler 0006        INT1_SetInterruptHandler@InterruptHandler 0006  
      INT0_SetInterruptHandler@InterruptHandler 0006        TMR0_SetInterruptHandler@InterruptHandler 0006  
                               _eusart1RxBuffer 0110                                 _eusart1TxBuffer 0120  
                                    ___flge@ff1 002D                                      ___flge@ff2 0031  
                               ??___fpclassifyf 000A                                    ___xxtofl@arg 0010  
                                  ___xxtofl@exp 000F                               _SYSTEM_Initialize 34AC  
                                  ___xxtofl@val 0006                                      ___fleq@ff1 0006  
                                    ___fleq@ff2 000A                                      __accesstop 0060  
                       __end_of__initialization 32BE                                       ?_INT0_ISR 0001  
                                     ?_INT1_ISR 0001                                      ___flneg@f1 0006  
                                     ?_INT2_ISR 0001                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                                      ___fltol@f1 0006  
                 __end_of_EUSART1_RxDataHandler 3414                                  __pcstackCOMRAM 0001  
                           ??_SYSTEM_Initialize 0008                                       ?_TMR0_ISR 0001  
                                 __end_of_fputc 2DB4                                   __end_of_fputs 3128  
                                 __end_of_putch 353C                          ??_EUSART1_Transmit_ISR 0001  
                       _ADC_GetConversionResult 350C                __end_of_INT2_SetInterruptHandler 3550  
                   __end_of_EUSART1_Receive_ISR 2BB0                 fp__INT2_DefaultInterruptHandler 0000  
                 ?_INT2_DefaultInterruptHandler 0001                            __end_of_convertValue 2F60  
                                       ??_fputc 000C                       __end_of_SYSTEM_Initialize 34CA  
                                       ??_fputs 0015                                         ??_putch 0007  
                                 _eusart1RxHead 0053                                   _eusart1TxHead 0055  
                                 _eusart1RxTail 0052                                      __pbssBANK0 00E6  
                                    __pbssBANK1 0100                                   _eusart1TxTail 0054  
             _EUSART1_TxDefaultInterruptHandler 00E4                 ??_EUSART1_SetRxInterruptHandler 0008  
                         _INT0_InterruptHandler 00D8                                      ??_INT0_ISR 0001  
                                    ??_INT1_ISR 0001                                      ??_INT2_ISR 0001  
                                    __pnvCOMRAM 0058                 __end_of_EUSART1_SetErrorHandler 3596  
                                       ?_adcCal 000A                                         ?___flge 002D  
                                       ?_adcMax 0039                                         ?___fleq 0006  
              __end_of_TMR0_SetInterruptHandler 3546                                         ?___wmul 0006  
                                    ??_TMR0_ISR 0001                                         ?_efgtoa 0039  
                                       ?_floorf 001F                                         ?_memcpy 0006  
                                       ?_printf 009A                                         ?_strcpy 0006  
        __end_of_EUSART1_SetFramingErrorHandler 358C                  _EUSART1_SetFramingErrorHandler 3582  
                    ??_INT1_SetInterruptHandler 0008                                       ?___xxtofl 0006  
                  ?_EUSART1_DefaultErrorHandler 0001                                         _OSCCON2 000FD2  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000FB0  
                     ?_INT0_SetInterruptHandler 0006                            _ADC_InterruptHandler 00F2  
                                       __Hparam 0000                                         __Lparam 0000  
                                       ___fladd 1242                                         ___fldiv 1B2C  
                                       ___flneg 322A                                         ___flmul 1702  
                                       ___flsub 3058                                         ___fltol 26EC  
                                       adcMax@i 003D                                       ?_vfprintf 0092  
                                  __psmallconst 0800                       ??_ADC_GetConversionResult 0008  
                                       __pcinit 329A                                         __ramtop 0800  
                                       __ptext0 29F4                                         __ptext1 3414  
                                       __ptext2 2FB6                                         __ptext3 1EC6  
                                       __ptext4 0822                                         __ptext5 316A  
                                       __ptext6 2DB4                                         __ptext7 30E4  
                                       __ptext8 2D1E                                         __ptext9 3532  
                                     _T0CONbits 000FD5                           _OSCILLATOR_Initialize 3520  
                                       _isdigit 33BE                                      ??___xxtofl 000A  
                            _EUSART1_Initialize 2E2E                        ??_PIN_MANAGER_Initialize 0006  
                                       _isspace 309E                                         efgtoa@c 003F  
                                       efgtoa@d 006B                                         efgtoa@e 006F  
                                       efgtoa@f 003B                                         efgtoa@g 0082  
                                       efgtoa@h 0079                                         efgtoa@i 0077  
                                       efgtoa@l 007D                                         efgtoa@m 006D  
                                       efgtoa@n 0086                                         efgtoa@p 0062  
                                       efgtoa@t 0064                                         efgtoa@u 0088  
                                       efgtoa@w 0071                   ??_EUSART1_DefaultErrorHandler 0001  
                                       atoi@neg 0011                            end_of_initialization 32BE  
                                       floorf@e 002D                                         floorf@m 0029  
                      _INT2_SetInterruptHandler 3546                                         floorf@u 002F  
                                       floorf@x 001F                             ?_EUSART1_Initialize 0001  
                ??_INT2_DefaultInterruptHandler 0001                                         memcpy@d 000D  
                                       memcpy@n 000A                                         memcpy@s 000F  
                                       fputc@fp 000A                                   __Lmediumconst 0000  
                   _EUSART1_OverrunErrorHandler 00DC                                         fputs@fp 0013  
         __end_of_EUSART1_SetRxInterruptHandler 3578                   _EUSART1_SetRxInterruptHandler 356E  
                  __end_of_ADC_IsConversionDone 350C                               __end_of_vfpfcnvrt 21DC  
                                    efgtoa@mode 0069                                      efgtoa@sign 0081  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                              vfpfcnvrt@convarg 0045                                      ??_vfprintf 0050  
                          ??_EUSART1_Initialize 0008                                         strcpy@d 000C  
                                       strcpy@s 000A                        _TMR0_SetInterruptHandler 353C  
                         _INT1_InterruptHandler 00D6                                       _PORTDbits 000F83  
                                   ___fladd@grs 0015                                   ___xxtofl@sign 000E  
                           _ADC_StartConversion 35B2                         fp__EUSART1_Transmit_ISR 0000  
                                   ___fldiv@grs 0019                                     ___fldiv@rem 0012  
                           EUSART1_Write@txData 0006                                      main@adcVal 00D0  
                                   ___flmul@grs 0022                            ?_ADC_StartConversion 0001  
                                  _convertValue 2F08                    __end_of_INTERRUPT_Initialize 35BA  
                                __end_of_adcCal 31EA                                  __end_of___flge 28F6  
                                __end_of_adcMax 2C74                                  __end_of___fleq 2D1E  
          __end_of_INT0_DefaultInterruptHandler 35C2                    _INT0_DefaultInterruptHandler 35C0  
                                   vfpfcnvrt@ap 0090                                     vfpfcnvrt@cp 004E  
                                   vfpfcnvrt@fp 008C                                  __end_of___wmul 348A  
                                __end_of_efgtoa 1242                                  _ADC_Initialize 34E2  
                                __end_of_floorf 23EE                                  __end_of_memcpy 3058  
                        ?_OSCILLATOR_Initialize 0001                                      floorf@F526 00E6  
                                __end_of_printf 343C                           __end_of_INT0_CallBack 33BE  
                                __end_of_strcpy 31AA                                     adcMax@maxNo 0039  
                           start_initialization 329A                           __end_of_INT1_CallBack 338E  
                                   __end_of_pad 2E2E   EUSART1_SetRxInterruptHandler@interruptHandler 0006  
 EUSART1_SetTxInterruptHandler@interruptHandler 0006                                     putch@txData 0007  
                         __end_of_INT2_CallBack 335E                           __end_of_EUSART1_Write 2FB6  
                        fp__EUSART1_Receive_ISR 0000                           __end_of___fpclassifyf 29F4  
                         ??_ADC_StartConversion 0006                                     vfprintf@fmt 0094  
                                      ??_adcCal 000C                                        ??___flge 0035  
                                      ??_adcMax 003D                                        ??___fleq 000E  
                                      ??___wmul 000A                           _EUSART1_RxDataHandler 33EA  
                                      ??_efgtoa 0040                  ?_EUSART1_SetRxInterruptHandler 0006  
                        __end_of_ADC_Initialize 34F8                                        ??_floorf 0023  
                                      ??_memcpy 000C                      __end_of_EXT_INT_Initialize 329A  
               fp__INT0_DefaultInterruptHandler 0000                   ?_INT0_DefaultInterruptHandler 0001  
                                      ??_printf 0050                                        ??_strcpy 000A  
                                _eusart1RxCount 0051                                       ___fladd@a 000A  
                                     ___fladd@b 0006                                       ___fldiv@a 000A  
                                     ___fldiv@b 0006                                       ___flmul@a 0018  
                                     ___flmul@b 0014                                     __pbssCOMRAM 0050  
                                     ___flsub@a 0031                                       ___flsub@b 002D  
             _EUSART1_RxDefaultInterruptHandler 00E2                __end_of_INT0_SetInterruptHandler 3564  
                                 __pcstackBANK0 0060                            _ADC_IsConversionDone 34F8  
               ??_EUSART1_SetTxInterruptHandler 0008                ??_EUSART1_SetFramingErrorHandler 0008  
               ?_EUSART1_SetFramingErrorHandler 0006                           _INT2_InterruptHandler 00D4  
                         _TMR0_InterruptHandler 00E0                                       __pnvBANK0 00D4  
                                   _efgtoa$1822 0066                          _PIN_MANAGER_Initialize 3128  
                                     __pintcode 0008                               _ADC_SelectChannel 34CA  
                                      ?___fladd 0006                                        ?___fldiv 0006  
                                      ?___flneg 0006                                        ?___flmul 0014  
                                      ?___flsub 002D                                        ?___fltol 0006  
                               ?_ADC_Initialize 0001                              ?_ADC_SelectChannel 0001  
                  ??_INTERRUPT_InterruptManager 0002                                     __smallconst 0800  
                    ??_INT2_SetInterruptHandler 0008                                        _BAUDCON1 000FB8  
         fp__EUSART1_DefaultOverrunErrorHandler 0000      __end_of_EUSART1_DefaultOverrunErrorHandler 35AC  
          ??_EUSART1_DefaultOverrunErrorHandler 0001             ?_EUSART1_DefaultOverrunErrorHandler 0001  
            _EUSART1_DefaultOverrunErrorHandler 35A6                                        ?_isdigit 0006  
                           ??_ADC_SelectChannel 0006                            _EUSART1_ErrorHandler 00DA  
                         ?_ADC_IsConversionDone 0001                                        ?_isspace 0006  
                       _EUSART1_SetErrorHandler 358C                                 convertValue@val 002D  
                                 _TMR0_CallBack 32FE                            _INTERRUPT_Initialize 35B6  
                             ??_TMR0_Initialize 0008                                        _INT0_ISR 343C  
                                      _INT1_ISR 359E                                        _INT2_ISR 3596  
                                ___wmul@product 000A         EUSART1_SetErrorHandler@interruptHandler 0006  
                     ?_INT1_SetInterruptHandler 0006                                        _PIE1bits 000F9D  
                     __end_of_ADC_SelectChannel 34E2                                        i2u400_40 3312  
                                      i2u400_41 330E                                        i2u401_48 3318  
                                      i2u401_49 332C                                        i2u404_40 33A2  
                                      i2u404_41 339E                                        i2u421_40 32F0  
                    ??_TMR0_SetInterruptHandler 0008                                        i2u421_41 32EC  
                                      i2u405_48 33A8                                        i2u422_40 344E  
                                      i2u406_40 3372                                        i2u405_49 33BC  
                                      i2u422_41 3448                                        i2u406_41 336E  
                                      i2u422_46 3450                                        i2u431_40 2B8A  
                                      i2u430_48 2B58                                        i2u431_41 2B86  
                                      i2u430_49 2B6E                                        i2u407_48 3378  
                                      i2u408_40 3342                                        i2u440_40 0070  
                                      i2u407_49 338C                                        i2u408_41 333E  
                                      i2u440_41 006C                                        i2u432_48 2B90  
                                      i2u425_40 31FA                                        i2u441_40 007E  
                                      i2u432_49 2BA6                                        i2u425_41 31F6  
                                      i2u441_41 007A                                        _PIR1bits 000F9E  
                                      i2u426_40 321C                                        i2u409_48 3348  
                                      i2u442_40 0094                                        i2u426_41 3218  
                                      i2u409_49 335C                                        i2u442_41 0090  
                                      i2u427_40 2B08                                        i2u450_48 0116  
                                      i2u443_40 00A2                                        i2u427_41 2B04  
                                      i2u450_49 012C                                        i2u443_41 009E  
                                      i2u444_40 00B8                                        i2u436_40 0028  
                                      i2u444_41 00B4                                        i2u436_41 0024  
                                      i2u429_40 2B42                                        i2u428_48 2B1E  
                                      i2u445_40 00C6                                        i2u437_40 0036  
                                      i2u429_41 2B3E                                        i2u428_49 2B34  
                                      i2u445_41 00C2                                        i2u437_41 0032  
                                      i2u446_40 00D4                                        i2u438_40 004C  
                                      i2u446_41 00D0                                        i2u438_41 0048  
                                      i2u439_40 005A                                        i2u439_41 0056  
                                      i2u448_40 0102                                        i2u447_48 00DA  
                                      i2u448_41 00FE                                        i2u447_49 00F0  
                                      i2u449_40 0110                                        i2u449_41 010C  
                                      i2u394_40 340C                                        i2u394_41 3408  
                        ?_EUSART1_RxDataHandler 0001                                        _RCONbits 000FD0  
                                      _TMR0_ISR 32CC                                       _vfpfcnvrt 1EC6  
                                    _ADCON0bits 000FC2                               ___wmul@multiplier 0006  
                      ADC_SelectChannel@channel 0007                  ??_INT0_DefaultInterruptHandler 0001  
                                  _isspace$1900 000A                                  ?_TMR0_CallBack 0001  
                                    vfpfcnvrt@c 004D                                     _INTCON2bits 000FF1  
                                   _INTCON3bits 000FF0                           ?_INTERRUPT_Initialize 0001  
                      _INT0_SetInterruptHandler 355A           __end_of_EUSART1_SetTxInterruptHandler 356E  
                 _EUSART1_SetTxInterruptHandler 3564                                        __Hrparam 0000  
                                     memcpy@tmp 000C                                      vfprintf@ap 0096  
                                      __Lrparam 0000                                      vfprintf@fp 0092  
                      ?_ADC_GetConversionResult 0006                         ??_OSCILLATOR_Initialize 0006  
                                    ?_vfpfcnvrt 008C                              ___fpclassifyf@F465 00EA  
                     ??_EUSART1_SetErrorHandler 0008                          ??_ADC_IsConversionDone 0006  
           __end_of_EUSART1_DefaultErrorHandler 35B2                     _EUSART1_DefaultErrorHandler 35AC  
                                      ___xxtofl 23EE                                        __ptext10 2F60  
                                      __ptext11 3008                                        __ptext20 1B2C  
                                      __ptext12 2EA2                                        __ptext21 25A2  
                                      __ptext13 21DC                                        __ptext30 31AA  
                                      __ptext22 309E                                        __ptext14 28F6  
                                      __ptext31 35B2                                        __ptext23 33BE  
                                      __ptext15 26EC                                        __ptext40 35B6  
                                      __ptext32 34CA                                        __ptext24 3464  
                                      __ptext16 3058                                        __ptext41 3262  
                                      __ptext33 34F8                                        __ptext25 2F08  
                                      __ptext17 1242                                        __ptext50 358C  
                                      __ptext42 3546                                        __ptext34 350C  
                                      __ptext26 23EE                                        __ptext18 322A  
                                      __ptext51 34E2                                        __ptext43 3550  
                                      __ptext35 34AC                                        __ptext27 1702  
                                      __ptext19 2C74                                        __ptext60 335E  
                                      __ptext44 355A                                        __ptext36 348A  
                                      __ptext28 2BB0                                        __ptext61 35BE  
                                      __ptext53 32CC                                        __ptext45 2E2E  
                                      __ptext37 353C                                        __ptext29 27F2  
                                      __ptext70 33EA                                        __ptext62 343C  
                                      __ptext54 32FE                                        __ptext46 3564  
                                      __ptext38 3128                                        __ptext71 0000  
                                      __ptext63 338E                                        __ptext55 35BA  
                                      __ptext47 356E                                        __ptext39 3520  
                                      __ptext64 35C0                                        __ptext56 3596  
                                      __ptext48 3578                                        __ptext65 31EA  
                                      __ptext57 332E                                        __ptext49 3582  
                                      __ptext66 2AEA                                        __ptext58 35BC  
                                      __ptext67 35A6                                        __ptext59 359E  
                                      __ptext68 35C2                                        __ptext69 35AC  
                                    strcpy@dest 0006            __end_of_TMR0_DefaultInterruptHandler 35BC  
                  _TMR0_DefaultInterruptHandler 35BA                                        efgtoa@fp 0039  
                                      efgtoa@ne 0060                                        efgtoa@pp 0068  
                                      efgtoa@ou 0073  EUSART1_SetOverrunErrorHandler@interruptHandler 0006  
                                      isa$xinst 000000                                        int$flags 0059  
                                      _vfprintf 2FB6              __end_of_INTERRUPT_InterruptManager 0144  
                    _INTERRUPT_InterruptManager 0008                                       printf@fmt 009A  
                   _EUSART1_FramingErrorHandler 00DE                             _EUSART1_Receive_ISR 2AEA  
          __end_of_INT1_DefaultInterruptHandler 35C0                    _INT1_DefaultInterruptHandler 35BE  
                                    _INTCONbits 000FF2                                 ??_TMR0_CallBack 0001  
                                      memcpy@d1 0006                                        memcpy@s1 0008  
                                      isdigit@c 0006                          ??_INTERRUPT_Initialize 0006  
                            _EXT_INT_Initialize 3262                                        intlevel2 0000  
                          ?_EUSART1_Receive_ISR 0001                     __end_of_ADC_StartConversion 35B6  
                                      isspace@c 0006                         ?_PIN_MANAGER_Initialize 0001  
               __end_of_ADC_GetConversionResult 3520                             ?_EXT_INT_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 3582                  _EUSART1_SetOverrunErrorHandler 3578  
                                     strcpy@src 0008                                      _RCSTA1bits 000FAB  
                  __end_of_EUSART1_Transmit_ISR 322A                                ??_ADC_Initialize 0006  
               fp__TMR0_DefaultInterruptHandler 0000                   ?_TMR0_DefaultInterruptHandler 0001  
                                   efgtoa@nmode 006A                                        printf@ap 00A0  
EUSART1_SetFramingErrorHandler@interruptHandler 0006                  ?_EUSART1_SetTxInterruptHandler 0006  
                                   ??_vfpfcnvrt 0042                              _eusart1RxLastError 0050  
                          ??_EXT_INT_Initialize 0008                 fp__INT1_DefaultInterruptHandler 0000  
                 ?_INT1_DefaultInterruptHandler 0001                                 _TMR0_Initialize 348A  
              __end_of_INT1_SetInterruptHandler 355A                                   ___fladd@signs 0012  
                         ??_EUSART1_Receive_ISR 0001                  __end_of_PIN_MANAGER_Initialize 316A  
                                  ___fladd@aexp 0013                                    ___fladd@bexp 0014  
                       ??_EUSART1_RxDataHandler 0001  
